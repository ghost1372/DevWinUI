<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows10.0.19041.0</TargetFramework>
    <RootNamespace>$(BaseNamespace)Gallery</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <EnableMsixTooling>true</EnableMsixTooling>
	  <TrimMode>partial</TrimMode>
	  <ImplicitUsings>true</ImplicitUsings>
	  <LangVersion>preview</LangVersion>
	  <IsAotCompatible>True</IsAotCompatible>
    <PublishAot>true</PublishAot>
    <WinUISDKReferences>false</WinUISDKReferences>
	  <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
	  <WindowsPackageType Condition="'$(GITHUB_ACTIONS)'=='true'">None</WindowsPackageType>
	  <ApplicationIcon>Assets\icon.ico</ApplicationIcon>
	  <Version>$(LibraryMajorVersion).$(DevWinUI_Gallery_MinorVersion).$(DevWinUI_Gallery_PatchVersion)$(PreviewBuildSuffix)</Version>

	  <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
	  <NoWarn>NU1903;NU1902;CS8632;WMC1506;WMC1006;NU1900</NoWarn>
	  <!--Remove git hash from assembly informational version in .NET >= 8, Example: false = 1.0.0, true = 1.0.0+xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
	  <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
	  <GITHUB_ACTIONS>false</GITHUB_ACTIONS>
  </PropertyGroup>
  <ItemGroup>
	  <Content Include="ControlPagesSampleCode\**\*">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	  <None Include="Assets\**\*">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
  </ItemGroup>
  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="ColorCode.Core" Version="2.0.15" />
	  <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
    <PackageReference Include="CommunityToolkit.WinUI.Media" Version="8.2.250402" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.9" />
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.3.0-prerelease.250720.1" />
	  <PackageReference Include="nucs.JsonSettings" Version="2.0.2" />
	  <PackageReference Include="nucs.JsonSettings.AutosaveGenerator" Version="2.0.4" />
	  <PackageReference Include="Serilog" Version="4.3.0" />
	  <PackageReference Include="Serilog.Sinks.Debug" Version="3.0.0" />
	  <PackageReference Include="Serilog.Sinks.File" Version="7.0.0" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DevWinUI.ContextMenu\DevWinUI.ContextMenu.csproj" />
    <ProjectReference Include="..\DevWinUI.Controls\DevWinUI.Controls.csproj" />
    <ProjectReference Include="..\DevWinUI\DevWinUI.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
  <ItemGroup>
    <None Update="T4Templates\NavigationPageMappings.tt">
	  <Generator>TextTemplatingFileGenerator</Generator>
	  <LastGenOutput>NavigationPageMappings.cs</LastGenOutput>
	</None>
	<Compile Update="T4Templates\NavigationPageMappings.cs">
	  <DesignTime>True</DesignTime>
	  <AutoGen>True</AutoGen>
	  <DependentUpon>NavigationPageMappings.tt</DependentUpon>
	</Compile>
	<None Update="T4Templates\BreadcrumbPageMappings.tt">
	  <Generator>TextTemplatingFileGenerator</Generator>
	  <LastGenOutput>BreadcrumbPageMappings.cs</LastGenOutput>
	</None>
	<Compile Update="T4Templates\BreadcrumbPageMappings.cs">
	  <DesignTime>True</DesignTime>
	  <AutoGen>True</AutoGen>
	  <DependentUpon>BreadcrumbPageMappings.tt</DependentUpon>
	</Compile>
  </ItemGroup>
  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

  <!-- Publish Properties -->
  <PropertyGroup>
    <PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
    <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">True</PublishReadyToRun>
    <PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
    <PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
  </PropertyGroup>

  <Target Name="TransformAllT4Templates" BeforeTargets="BeforeBuild">
	  <ItemGroup>
		  <!-- This picks up all T4 templates in the project -->
		  <T4Template Include="**\*.tt" />
	  </ItemGroup>

	  <!-- Check if TextTransform.exe exists before running -->
	  <Exec Command="if exist &quot;$(DevEnvDir)TextTransform.exe&quot; &quot;$(DevEnvDir)TextTransform.exe&quot; &quot;%(T4Template.FullPath)&quot;" Condition="Exists('$(DevEnvDir)TextTransform.exe')" />
  </Target>
</Project>