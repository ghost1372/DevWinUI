<!--
    This code was generated by a tool.
    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
-->
<!--
Source files:
Controls\Ported\PagerControl\PagerControl.xaml
Controls\Ported\SettingsCard\SettingsCard.xaml
Controls\Ported\SettingsExpander\SettingsExpander.xaml
Controls\Ported\TileControl\TileControl.xaml
Themes\Styles\CommonStyles\Button.xaml
Themes\Styles\CommonStyles\CalendarViewStyle.xaml
Themes\Styles\CommonStyles\Colors.xaml
Themes\Styles\CommonStyles\ComboBox.xaml
Themes\Styles\CommonStyles\Common.xaml
Themes\Styles\CommonStyles\Converters.xaml
Themes\Styles\CommonStyles\InfoBadge.xaml
Themes\Styles\CommonStyles\LandingPages.xaml
Themes\Styles\CommonStyles\ModernSystemMenuStyle.xaml
Themes\Styles\CommonStyles\NavigationView.xaml
Themes\Styles\CommonStyles\Panel.xaml
Themes\Styles\CommonStyles\SelectorBar.xaml
Themes\Styles\CommonStyles\TextBlock.xaml
Themes\Styles\Controls\Accordion.xaml
Themes\Styles\Controls\AccordionItem.xaml
Themes\Styles\Controls\AnimatedGradient.xaml
Themes\Styles\Controls\AnimatedImage.xaml
Themes\Styles\Controls\ArcProgress.xaml
Themes\Styles\Controls\BreadcrumbNavigator.xaml
Themes\Styles\Controls\CalendarWithClockStyle.xaml
Themes\Styles\Controls\Card.xaml
Themes\Styles\Controls\CheckUpdateControl.xaml
Themes\Styles\Controls\Clock.xaml
Themes\Styles\Controls\ClockRadioButton.xaml
Themes\Styles\Controls\ColorfulShimmingEffect.xaml
Themes\Styles\Controls\ColorPalette.xaml
Themes\Styles\Controls\ColorPaletteItem.xaml
Themes\Styles\Controls\CompareSlider.xaml
Themes\Styles\Controls\CompositionShadow.xaml
Themes\Styles\Controls\ContentDialogContent.xaml
Themes\Styles\Controls\CopyButton.xaml
Themes\Styles\Controls\DateTimePicker.xaml
Themes\Styles\Controls\DepthLayerView.xaml
Themes\Styles\Controls\Divider.xaml
Themes\Styles\Controls\DropdownColorPicker.xaml
Themes\Styles\Controls\FlipSide.xaml
Themes\Styles\Controls\FlipToReveal.xaml
Themes\Styles\Controls\FlyoutMenuButton.xaml
Themes\Styles\Controls\ForegroundFocusEffects.xaml
Themes\Styles\Controls\GifImage.xaml
Themes\Styles\Controls\GoToTop.xaml
Themes\Styles\Controls\Gravatar.xaml
Themes\Styles\Controls\Growl.xaml
Themes\Styles\Controls\HeaderCarousel.xaml
Themes\Styles\Controls\HeaderCarouselItem.xaml
Themes\Styles\Controls\ImageEx.xaml
Themes\Styles\Controls\IndeterminateProgressBar.xaml
Themes\Styles\Controls\InlineAutoCompleteTextBox.xaml
Themes\Styles\Controls\IsEnabledTextBlock.xaml
Themes\Styles\Controls\KeyVisual.xaml
Themes\Styles\Controls\LayoutTransformer.xaml
Themes\Styles\Controls\LoadingIndicator.xaml
Themes\Styles\Controls\LongShadowTextBlock.xaml
Themes\Styles\Controls\Magnifier.xaml
Themes\Styles\Controls\MessageBoxHeader.xaml
Themes\Styles\Controls\OptionsPageControl.xaml
Themes\Styles\Controls\OutOfBoxPage.xaml
Themes\Styles\Controls\OverviewPageHeader.xaml
Themes\Styles\Controls\PerspectiveHost.xaml
Themes\Styles\Controls\PerspectiveZoom.xaml
Themes\Styles\Controls\PinBox.xaml
Themes\Styles\Controls\ProgressButton.xaml
Themes\Styles\Controls\ProgressRing.xaml
Themes\Styles\Controls\RedirectVisualView.xaml
Themes\Styles\Controls\SelectableTextBlock.xaml
Themes\Styles\Controls\SelectorBarSegmented.xaml
Themes\Styles\Controls\SettingsGroup.xaml
Themes\Styles\Controls\Shield.xaml
Themes\Styles\Controls\Shimmer.xaml
Themes\Styles\Controls\ShimmerTextBlock.xaml
Themes\Styles\Controls\Shortcut.xaml
Themes\Styles\Controls\ShyHeader.xaml
Themes\Styles\Controls\SimpleSettingsGroup.xaml
Themes\Styles\Controls\SplitCircle.xaml
Themes\Styles\Controls\StepBar.xaml
Themes\Styles\Controls\StorageBar.xaml
Themes\Styles\Controls\StorageRing.xaml
Themes\Styles\Controls\TextBox.xaml
Themes\Styles\Controls\TransitioningContentControl.xaml
Themes\Styles\Controls\Validation.xaml
Themes\Styles\Controls\WaveProgressBar.xaml
Themes\Styles\Win2D\BubbleButton.xaml
Themes\Styles\Win2D\BubbleProgressButton.xaml
Themes\Styles\Win2D\BubbleView.xaml
Themes\Styles\Win2D\ConfettiCannon.xaml
Themes\Styles\Win2D\GooeyButton.xaml
Themes\Styles\Win2D\GooeyButtonItem.xaml
Themes\Styles\Win2D\GooeyEffect.xaml
Themes\Styles\Win2D\GooeyFooterEffect.xaml
Themes\Styles\Win2D\Hatch.xaml
Themes\Styles\Win2D\Particle.xaml
Themes\Styles\Win2D\TextBlockStrokeView.xaml
Themes\Styles\Win2D\TextGlitchEffect.xaml
Themes\Styles\Win2D\TextMorphEffect.xaml
Themes\Styles\Win2D\Watermark.xaml
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:DevWinUI" xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals" xmlns:contract5NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)" xmlns:contract5Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)" xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)" xmlns:win2d="using:Microsoft.Graphics.Canvas.UI.Xaml">
  <ResourceDictionary.ThemeDictionaries>
    <ResourceDictionary x:Key="Light">
      <StaticResource x:Key="PagerControlSelectionIndicatorForeground" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPressed" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
      <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiary" />
      <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="SubtleFillColorTertiary" />
      <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonForeground" ResourceKey="TextFillColorPrimary" />
      <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="TextFillColorPrimary" />
      <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="TextFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="TextFillColorDisabled" />
      <RadialGradientBrush x:Key="OverlayRadialGradient" Center="0.5,0.22" GradientOrigin="0.5,0" MappingMode="RelativeToBoundingBox" RadiusX="0.92" RadiusY="0.8200000000000001" SpreadMethod="Pad">
        <GradientStop Offset="0" Color="#FFFFFFFF" />
        <GradientStop Offset="0.05" Color="#FFFFFFFF" />
        <GradientStop Offset="0.35" Color="#FFFFFFFF" />
        <GradientStop Offset="0.55" Color="#FFFFFFFF" />
        <GradientStop Offset="0.95" Color="#00FFFFFF" />
        <GradientStop Offset="1" Color="#00FFFFFF" />
      </RadialGradientBrush>
      <LinearGradientBrush x:Key="CardGradient2Brush" StartPoint="0,1" EndPoint="1, 0">
        <GradientStop Offset="0" Color="#E6F0FC" />
        <GradientStop Offset="0.4" Color="#E6F0FC" />
        <GradientStop Offset="1" Color="#F0F0F7" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="CardGradient1Brush" Opacity="0.15" StartPoint="-0.2,0" EndPoint="1, 1">
        <GradientStop Offset="0" Color="#3286EE" />
        <GradientStop Offset="0.5" Color="#C8AEC4" />
        <GradientStop Offset="1" Color="Transparent" />
      </LinearGradientBrush>
      <AcrylicBrush x:Key="GlassAcrylicBackground" TintLuminosityOpacity="0.4" TintOpacity="0.4" />
      <SolidColorBrush x:Key="GlassAcrylicBorderBrush" Opacity="0.6" Color="White" />
      <SolidColorBrush x:Key="HeaderTextInverseBrush" Color="{ThemeResource TextFillColorInverse}" />
      <SolidColorBrush x:Key="HeaderTextPrimaryBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextFixPrimaryBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextFixInverseBrush" Color="{ThemeResource TextFillColorInverse}" />
      <StaticResource x:Key="RailNavigationIconForegroundBrush" ResourceKey="ControlAAFillColorDefaultBrush" />
      <SolidColorBrush x:Key="RailNavigationViewDefaultPaneBackground" Color="Transparent" />
      <SolidColorBrush x:Key="RailNavigationViewExpandedPaneBackground" Color="Transparent" />
      <StaticResource x:Key="RailNavigationViewItemForeground" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackground" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="RailNavigationViewItemBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelected" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPressed" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackground" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressed" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrush" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOver" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemForegroundSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOverSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressedSelected" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
      <Thickness x:Key="TokenItemBorderThickness">1</Thickness>
      <StaticResource x:Key="TextOnAccentForegroundBrush" ResourceKey="TextOnAccentAAFillColorPrimary" />
      <StaticResource x:Key="ClockCircleBackgroundBrush" ResourceKey="CardBackgroundFillColorSecondaryBrush" />
      <StaticResource x:Key="SysemAccentControlBackgroundBrush" ResourceKey="AccentAAFillColorDefaultBrush" />
      <StaticResource x:Key="ContentDialogWindowTopOverlay" ResourceKey="LayerFillColorDefaultBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityBackgroundBrush" ResourceKey="SystemFillColorCriticalBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityBackgroundBrush" ResourceKey="SystemFillColorCautionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityBackgroundBrush" ResourceKey="SystemFillColorSuccessBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityBackgroundBrush" ResourceKey="SystemFillColorAttentionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityBackgroundBrush" ResourceKey="SystemFillColorAttentionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconBackground" ResourceKey="SystemFillColorCriticalBrush" />
      <SolidColorBrush x:Key="MessageBoxHeaderWarningSeverityIconBackground" Color="#FCE100" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconBackground" ResourceKey="SystemFillColorSuccessBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconBackground" ResourceKey="SystemFillColorAttentionBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconBackground" ResourceKey="SystemFillColorAttentionBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityIconForeground" ResourceKey="TextFillColorPrimary" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="ProgressForeground" ResourceKey="ControlAAFillColorDefaultBrush" />
      <StaticResource x:Key="SelectorBarSegmentedBackground" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedBorderBrush" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackground" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundSelected" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushSelected" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushDisabled" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <Thickness x:Key="SelectorBarSegmentedBorderThickness">1</Thickness>
      <StaticResource x:Key="ShimmerBackground" ResourceKey="ControlAltFillColorTertiaryBrush" />
      <StaticResource x:Key="StepBarItemInActiveBorderBrush" ResourceKey="ControlStrongStrokeColorDefault" />
      <StaticResource x:Key="StepBarItemActiveBorderBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageBarCornerRadius" ResourceKey="OverlayCornerRadius" />
      <x:Double x:Key="StorageBarValueHeight">6</x:Double>
      <x:Double x:Key="StorageBarTrackHeight">2</x:Double>
      <Thickness x:Key="StorageBarPadding">4,4,4,4</Thickness>
      <StaticResource x:Key="StorageBarBackgroundBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="StorageBarValueBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageBarValueCautionBrush" ResourceKey="SystemFillColorCautionBrush" />
      <StaticResource x:Key="StorageBarValueCriticalBrush" ResourceKey="SystemFillColorCriticalBrush" />
      <StaticResource x:Key="StorageBarValueDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
      <StaticResource x:Key="StorageBarTrackBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackCautionBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackCriticalBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackDisabledBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
      <x:Double x:Key="StorageRingValueRingThickness">3</x:Double>
      <x:Double x:Key="StorageRingTrackRingThickness">1</x:Double>
      <Thickness x:Key="StorageRingPadding">0</Thickness>
      <Thickness x:Key="StorageRingMargin">0</Thickness>
      <PenLineCap x:Key="StorageRingValueStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingValueEndCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackEndCap">Round</PenLineCap>
      <StaticResource x:Key="StorageRingBackgroundBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="StorageRingValueBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageRingValueCautionBrush" ResourceKey="SystemFillColorCautionBrush" />
      <StaticResource x:Key="StorageRingValueCriticalBrush" ResourceKey="SystemFillColorCriticalBrush" />
      <StaticResource x:Key="StorageRingValueDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
      <StaticResource x:Key="StorageRingTrackBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackCautionBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackCriticalBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackDisabledBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
      <StaticResource x:Key="WaveProgressBarBackground" ResourceKey="CardStrokeColorDefaultSolidBrush" />
      <StaticResource x:Key="WaveProgressBarBorderBrush" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="ProgressCompletedBackgroundBrush" ResourceKey="AccentAAFillColorDefaultBrush" />
      <StaticResource x:Key="GooeyButtonBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
      <StaticResource x:Key="GooeyButtonItemBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonItemForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
    </ResourceDictionary>
    <ResourceDictionary x:Key="Default">
      <StaticResource x:Key="PagerControlSelectionIndicatorForeground" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPressed" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
      <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
      <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiary" />
      <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="SubtleFillColorTertiary" />
      <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="SubtleFillColorTransparent" />
      <StaticResource x:Key="SubtleButtonForeground" ResourceKey="TextFillColorPrimary" />
      <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="TextFillColorPrimary" />
      <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="TextFillColorSecondary" />
      <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="TextFillColorDisabled" />
      <RadialGradientBrush x:Key="OverlayRadialGradient" Center="0.5,0.22" GradientOrigin="0.5,0.0" MappingMode="RelativeToBoundingBox" RadiusX="0.92" RadiusY="0.8200000000000001" SpreadMethod="Pad">
        <GradientStop Offset="0" Color="#FF000000" />
        <GradientStop Offset="0.05" Color="#FF000000" />
        <GradientStop Offset="0.35" Color="#FF000000" />
        <GradientStop Offset="0.55" Color="#FF000000" />
        <GradientStop Offset="0.85" Color="#00000000" />
        <GradientStop Offset="0.95" Color="#00000000" />
        <GradientStop Offset="1" Color="#00000000" />
      </RadialGradientBrush>
      <LinearGradientBrush x:Key="CardGradient2Brush" StartPoint="0,0" EndPoint="0.5, 1">
        <GradientStop Offset="0" Color="#38C8AEC4" />
        <GradientStop Offset="1" Color="#383286EE" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="CardGradient1Brush" Opacity="0.15" StartPoint="-0.2,0" EndPoint="1, 1">
        <GradientStop Offset="0" Color="#3286EE" />
        <GradientStop Offset="0.5" Color="#C8AEC4" />
        <GradientStop Offset="1" Color="Transparent" />
      </LinearGradientBrush>
      <AcrylicBrush x:Key="GlassAcrylicBackground" />
      <SolidColorBrush x:Key="GlassAcrylicBorderBrush" Color="{ThemeResource SurfaceStrokeColorDefault}" />
      <SolidColorBrush x:Key="HeaderTextInverseBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextPrimaryBrush" Color="{ThemeResource TextFillColorInverse}" />
      <SolidColorBrush x:Key="HeaderTextFixPrimaryBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextFixInverseBrush" Color="{ThemeResource TextFillColorInverse}" />
      <StaticResource x:Key="RailNavigationIconForegroundBrush" ResourceKey="ControlAAFillColorDefaultBrush" />
      <SolidColorBrush x:Key="RailNavigationViewDefaultPaneBackground" Color="Transparent" />
      <SolidColorBrush x:Key="RailNavigationViewExpandedPaneBackground" Color="Transparent" />
      <StaticResource x:Key="RailNavigationViewItemForeground" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackground" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="RailNavigationViewItemBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelected" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPressed" ResourceKey="ControlSolidFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackground" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressed" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrush" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOver" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemForegroundSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOverSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressedSelected" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
      <Thickness x:Key="TokenItemBorderThickness">1</Thickness>
      <StaticResource x:Key="TextOnAccentForegroundBrush" ResourceKey="TextOnAccentAAFillColorPrimary" />
      <StaticResource x:Key="ClockCircleBackgroundBrush" ResourceKey="ControlFillColorTertiaryBrush" />
      <StaticResource x:Key="SysemAccentControlBackgroundBrush" ResourceKey="AccentAAFillColorDefaultBrush" />
      <StaticResource x:Key="ContentDialogWindowTopOverlay" ResourceKey="LayerFillColorDefaultBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityBackgroundBrush" ResourceKey="SystemFillColorCriticalBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityBackgroundBrush" ResourceKey="SystemFillColorCautionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityBackgroundBrush" ResourceKey="SystemFillColorSuccessBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityBackgroundBrush" ResourceKey="SystemFillColorAttentionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityBackgroundBrush" ResourceKey="SystemFillColorAttentionBackgroundBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconBackground" ResourceKey="SystemFillColorCriticalBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityIconBackground" ResourceKey="SystemFillColorCautionBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconBackground" ResourceKey="SystemFillColorSuccessBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconBackground" ResourceKey="SystemFillColorAttentionBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconBackground" ResourceKey="SystemFillColorAttentionBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconForeground" ResourceKey="TextFillColorInverseBrush" />
      <StaticResource x:Key="ProgressForeground" ResourceKey="CardStrokeColorDefaultSolidBrush" />
      <StaticResource x:Key="SelectorBarSegmentedBackground" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedBorderBrush" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackground" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundSelected" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushSelected" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushDisabled" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <Thickness x:Key="SelectorBarSegmentedBorderThickness">1</Thickness>
      <StaticResource x:Key="ShimmerBackground" ResourceKey="ControlAltFillColorTertiaryBrush" />
      <StaticResource x:Key="StepBarItemInActiveBorderBrush" ResourceKey="ControlStrongStrokeColorDefault" />
      <StaticResource x:Key="StepBarItemActiveBorderBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageBarCornerRadius" ResourceKey="OverlayCornerRadius" />
      <x:Double x:Key="StorageBarValueHeight">6</x:Double>
      <x:Double x:Key="StorageBarTrackHeight">2</x:Double>
      <Thickness x:Key="StorageBarPadding">4,4,4,4</Thickness>
      <StaticResource x:Key="StorageBarBackgroundBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="StorageBarValueBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageBarValueCautionBrush" ResourceKey="SystemFillColorCautionBrush" />
      <StaticResource x:Key="StorageBarValueCriticalBrush" ResourceKey="SystemFillColorCriticalBrush" />
      <StaticResource x:Key="StorageBarValueDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
      <StaticResource x:Key="StorageBarTrackBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackCautionBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackCriticalBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageBarTrackDisabledBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
      <x:Double x:Key="StorageRingValueRingThickness">3</x:Double>
      <x:Double x:Key="StorageRingTrackRingThickness">1</x:Double>
      <Thickness x:Key="StorageRingPadding">0</Thickness>
      <Thickness x:Key="StorageRingMargin">0</Thickness>
      <PenLineCap x:Key="StorageRingValueStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingValueEndCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackEndCap">Round</PenLineCap>
      <StaticResource x:Key="StorageRingBackgroundBrush" ResourceKey="ControlFillColorTransparentBrush" />
      <StaticResource x:Key="StorageRingValueBrush" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="StorageRingValueCautionBrush" ResourceKey="SystemFillColorCautionBrush" />
      <StaticResource x:Key="StorageRingValueCriticalBrush" ResourceKey="SystemFillColorCriticalBrush" />
      <StaticResource x:Key="StorageRingValueDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
      <StaticResource x:Key="StorageRingTrackBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackCautionBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackCriticalBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
      <StaticResource x:Key="StorageRingTrackDisabledBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
      <StaticResource x:Key="WaveProgressBarBackground" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="WaveProgressBarBorderBrush" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="ProgressCompletedBackgroundBrush" ResourceKey="AccentAAFillColorDefaultBrush" />
      <StaticResource x:Key="GooeyButtonBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
      <StaticResource x:Key="GooeyButtonItemBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonItemForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
    </ResourceDictionary>
    <ResourceDictionary x:Key="HighContrast">
      <StaticResource x:Key="PagerControlSelectionIndicatorForeground" ResourceKey="SystemControlForegroundAccentBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="PagerControlPageNavigationButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
      <StaticResource x:Key="SettingsCardBackground" ResourceKey="SystemColorButtonFaceColorBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
      <StaticResource x:Key="SettingsCardForeground" ResourceKey="SystemColorButtonTextColorBrush" />
      <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
      <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="SystemColorButtonTextColorBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="SystemControlDisabledTransparentBrush" />
      <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
      <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="SystemColorGrayTextColor" />
      <StaticResource x:Key="SubtleButtonForeground" ResourceKey="SystemColorButtonTextColorBrush" />
      <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="SystemControlHighlightBaseHighBrush" />
      <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="SystemControlHighlightBaseHighBrush" />
      <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
      <RadialGradientBrush x:Key="OverlayRadialGradient" Center="0.5,0.22" GradientOrigin="0.5,0" MappingMode="RelativeToBoundingBox" RadiusX="0.92" RadiusY="0.8200000000000001" SpreadMethod="Pad">
        <GradientStop Offset="0" Color="#FF000000" />
        <GradientStop Offset="0.05" Color="#FF000000" />
        <GradientStop Offset="0.35" Color="#FF000000" />
        <GradientStop Offset="0.55" Color="#FF000000" />
        <GradientStop Offset="0.95" Color="#00000000" />
        <GradientStop Offset="1" Color="#00000000" />
      </RadialGradientBrush>
      <SolidColorBrush x:Key="CardGradient2Brush" Color="Transparent" />
      <SolidColorBrush x:Key="CardGradient1Brush" Color="Transparent" />
      <AcrylicBrush x:Key="GlassAcrylicBackground" TintLuminosityOpacity="0.4" TintOpacity="0.4" />
      <SolidColorBrush x:Key="GlassAcrylicBorderBrush" Opacity="0.8" Color="White" />
      <SolidColorBrush x:Key="HeaderTextInverseBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextPrimaryBrush" Color="{ThemeResource TextFillColorInverse}" />
      <SolidColorBrush x:Key="HeaderTextFixPrimaryBrush" Color="{ThemeResource TextFillColorPrimary}" />
      <SolidColorBrush x:Key="HeaderTextFixInverseBrush" Color="{ThemeResource TextFillColorInverse}" />
      <StaticResource x:Key="RailNavigationIconForegroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewDefaultPaneBackground" ResourceKey="SystemColorWindowBrush" />
      <StaticResource x:Key="RailNavigationViewExpandedPaneBackground" ResourceKey="SystemColorWindowBrush" />
      <StaticResource x:Key="RailNavigationViewItemForeground" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackground" ResourceKey="SystemControlBackgroundBaseLowBrush" />
      <StaticResource x:Key="RailNavigationViewItemBorderBrush" ResourceKey="SubtleFillColorTransparentBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelected" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelected" ResourceKey="SystemControlHighlightListLowBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
      <StaticResource x:Key="RailNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
      <StaticResource x:Key="RailNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
      <StaticResource x:Key="TokenItemBackground" ResourceKey="ControlFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressed" ResourceKey="ControlFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBackgroundPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBackgroundPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrush" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOver" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushSelected" ResourceKey="AccentFillColorDefaultBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPointerOverSelected" ResourceKey="AccentFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemBorderBrushPressedSelected" ResourceKey="AccentFillColorTertiaryBrush" />
      <StaticResource x:Key="TokenItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
      <StaticResource x:Key="TokenItemForegroundSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPointerOverSelected" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
      <StaticResource x:Key="TokenItemForegroundPressedSelected" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
      <Thickness x:Key="TokenItemBorderThickness">1</Thickness>
      <Color x:Key="TextOnAccentForegroundBrush">Transparent</Color>
      <StaticResource x:Key="ClockCircleBackgroundBrush" ResourceKey="ControlFillColorTertiaryBrush" />
      <StaticResource x:Key="SysemAccentControlBackgroundBrush" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="ContentDialogWindowTopOverlay" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityBackgroundBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityBackgroundBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityBackgroundBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityBackgroundBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityBackgroundBrush" ResourceKey="SystemColorWindowColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconBackground" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityIconBackground" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconBackground" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconBackground" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconBackground" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderErrorSeverityIconForeground" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderWarningSeverityIconForeground" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderSuccessSeverityIconForeground" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderInformationalSeverityIconForeground" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="MessageBoxHeaderQuestionalSeverityIconForeground" ResourceKey="SystemColorHighlightTextColorBrush" />
      <StaticResource x:Key="ProgressForeground" ResourceKey="CardStrokeColorDefaultSolidBrush" />
      <StaticResource x:Key="SelectorBarSegmentedBackground" ResourceKey="SystemColorButtonFaceColor" />
      <StaticResource x:Key="SelectorBarSegmentedBorderBrush" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackground" ResourceKey="SystemColorButtonFaceColor" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPointerOver" ResourceKey="SystemColorHighlightColor" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundSelected" ResourceKey="SystemColorHighlightColor" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundPressed" ResourceKey="SystemColorHighlightColor" />
      <StaticResource x:Key="SelectorBarSegmentedItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrush" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPointerOver" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushSelected" ResourceKey="ControlElevationBorderBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushPressed" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <StaticResource x:Key="SelectorBarSegmentedItemBorderBrushDisabled" ResourceKey="ControlAltFillColorSecondaryBrush" />
      <Thickness x:Key="SelectorBarSegmentedBorderThickness">1</Thickness>
      <StaticResource x:Key="ShimmerBackground" ResourceKey="SystemColorWindowColor" />
      <StaticResource x:Key="StepBarItemInActiveBorderBrush" ResourceKey="SystemColorWindowColor" />
      <StaticResource x:Key="StepBarItemActiveBorderBrush" ResourceKey="SystemColorHighlightColor" />
      <StaticResource x:Key="StorageBarCornerRadius" ResourceKey="OverlayCornerRadius" />
      <x:Double x:Key="StorageBarValueHeight">6</x:Double>
      <x:Double x:Key="StorageBarTrackHeight">2</x:Double>
      <Thickness x:Key="StorageBarPadding">4,4,4,4</Thickness>
      <StaticResource x:Key="StorageBarBackgroundBrush" ResourceKey="SystemControlBackgroundBaseLowBrush" />
      <StaticResource x:Key="StorageBarValueBrush" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="StorageBarValueCautionBrush" ResourceKey="SystemColorHotlightColorBrush" />
      <StaticResource x:Key="StorageBarValueCriticalBrush" ResourceKey="SystemColorHotlightColorBrush" />
      <StaticResource x:Key="StorageBarValueDisabledBrush" ResourceKey="SystemColorGrayTextBrush" />
      <StaticResource x:Key="StorageBarTrackBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageBarTrackCautionBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageBarTrackCriticalBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageBarTrackDisabledBrush" ResourceKey="SystemColorGrayTextBrush" />
      <x:Double x:Key="StorageRingValueRingThickness">4</x:Double>
      <x:Double x:Key="StorageRingTrackRingThickness">2</x:Double>
      <Thickness x:Key="StorageRingPadding">0</Thickness>
      <Thickness x:Key="StorageRingMargin">0</Thickness>
      <PenLineCap x:Key="StorageRingValueStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingValueEndCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackStartCap">Round</PenLineCap>
      <PenLineCap x:Key="StorageRingTrackEndCap">Round</PenLineCap>
      <StaticResource x:Key="StorageRingBackgroundBrush" ResourceKey="SystemControlBackgroundBaseLowBrush" />
      <StaticResource x:Key="StorageRingValueBrush" ResourceKey="SystemColorHighlightColorBrush" />
      <StaticResource x:Key="StorageRingValueCautionBrush" ResourceKey="SystemColorHotlightColorBrush" />
      <StaticResource x:Key="StorageRingValueCriticalBrush" ResourceKey="SystemColorHotlightColorBrush" />
      <StaticResource x:Key="StorageRingValueDisabledBrush" ResourceKey="SystemColorGrayTextBrush" />
      <StaticResource x:Key="StorageRingTrackBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageRingTrackCautionBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageRingTrackCriticalBrush" ResourceKey="SystemColorWindowTextColorBrush" />
      <StaticResource x:Key="StorageRingTrackDisabledBrush" ResourceKey="SystemColorGrayTextBrush" />
      <StaticResource x:Key="WaveProgressBarBackground" ResourceKey="SystemColorButtonFaceColorBrush" />
      <StaticResource x:Key="WaveProgressBarBorderBrush" ResourceKey="SystemColorButtonTextColorBrush" />
      <StaticResource x:Key="ProgressCompletedBackgroundBrush" ResourceKey="AccentAAFillColorDefaultBrush" />
      <StaticResource x:Key="GooeyButtonBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
      <StaticResource x:Key="GooeyButtonItemBackgroundBrush" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <StaticResource x:Key="GooeyButtonItemForegroundBrush" ResourceKey="SystemControlForegroundAltHighBrush" />
    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>
  <x:Double x:Key="PagerControlNumberPanelButtonWidth">32</x:Double>
  <Thickness x:Key="SettingsCardBorderThickness">1</Thickness>
  <Thickness x:Key="SettingsCardPadding">16,16,16,16</Thickness>
  <x:Double x:Key="SettingsCardMinWidth">148</x:Double>
  <x:Double x:Key="SettingsCardMinHeight">68</x:Double>
  <x:Double x:Key="SettingsCardDescriptionFontSize">12</x:Double>
  <x:Double x:Key="SettingsCardHeaderIconMaxSize">20</x:Double>
  <x:Double x:Key="SettingsCardLeftIndention">0</x:Double>
  <x:Double x:Key="SettingsCardContentMinWidth">120</x:Double>
  <Thickness x:Key="SettingsCardHeaderIconMargin">2,0,20,0</Thickness>
  <Thickness x:Key="SettingsCardActionIconMargin">14,0,0,0</Thickness>
  <x:Double x:Key="SettingsCardActionIconMaxSize">13</x:Double>
  <x:Double x:Key="SettingsCardVerticalHeaderContentSpacing">8</x:Double>
  <x:Double x:Key="SettingsCardWrapThreshold">476</x:Double>
  <x:Double x:Key="SettingsCardWrapNoIconThreshold">286</x:Double>
  <x:String x:Key="SettingsExpanderChevronToolTip">Show all settings</x:String>
  <Thickness x:Key="SettingsExpanderHeaderPadding">16,16,4,16</Thickness>
  <Thickness x:Key="SettingsExpanderItemPadding">58,8,44,8</Thickness>
  <Thickness x:Key="SettingsExpanderItemBorderThickness">0,1,0,0</Thickness>
  <Thickness x:Key="ClickableSettingsExpanderItemPadding">58,8,16,8</Thickness>
  <x:Double x:Key="SettingsExpanderContentMinHeight">16</x:Double>
  <x:Double x:Key="SettingsExpanderChevronButtonWidth">32</x:Double>
  <x:Double x:Key="SettingsExpanderChevronButtonHeight">32</x:Double>
  <local:CornerRadiusConverter x:Key="CornerRadiusConverter" />
  <Style TargetType="local:TileControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TileControl">
          <Grid>
            <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Canvas x:Name="ContainerElement" />
            </Border>
            <ContentPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Name="TextBoxButtonStyle" TargetType="Button">
    <Setter Property="Padding" Value="{ThemeResource HelperButtonThemePadding}" />
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="Width" Value="30" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="ButtonLayoutGrid" Margin="{ThemeResource TextBoxInnerButtonMargin}" Background="{ThemeResource TextControlButtonBackground}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox Width="12" HorizontalAlignment="Center" VerticalAlignment="Center">
              <ContentPresenter x:Name="GlyphElement" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="{ThemeResource TextBoxIconFontSize}" FontStyle="Normal" Foreground="{ThemeResource TextControlButtonForeground}" />
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HyperlinkButtonStyle" TargetType="HyperlinkButton" />
  <ItemsPanelTemplate x:Key="ElementGroupHorizontalItemsPanel">
    <StackPanel Orientation="Horizontal" />
  </ItemsPanelTemplate>
  <ItemsPanelTemplate x:Key="ElementGroupVerticalItemsPanel">
    <StackPanel Orientation="Vertical" />
  </ItemsPanelTemplate>
  <ThemeShadow x:Name="ThemeShadow" />
  <x:Double x:Key="SettingActionControlMinWidth">240</x:Double>
  <TransitionCollection x:Key="SettingsCardsAnimations">
    <EntranceThemeTransition FromVerticalOffset="50" />
    <!--  Animates cards when loaded  -->
    <RepositionThemeTransition IsStaggeringEnabled="False" />
    <!--  Smoothly animates individual cards upon whenever Expanders are expanded/collapsed  -->
  </TransitionCollection>
  <Style x:Key="ListViewItemSettingStyle" TargetType="ListViewItem">
    <Setter Property="Margin" Value="0,0,0,2" />
    <Setter Property="Padding" Value="0,0,0,0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <LinearGradientBrush x:Key="LightTextGradient" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0.1" Color="#FFFFFF" />
    <GradientStop Offset="0.3" Color="#E9E9E9" />
    <GradientStop Offset="0.6" Color="#FDFDFD" />
    <GradientStop Offset="0.9" Color="#FFFFFF" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DarkTextGradient" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Offset="0.1" Color="#303030" />
    <GradientStop Offset="0.3" Color="#4A4A4A" />
    <GradientStop Offset="0.6" Color="#161515" />
    <GradientStop Offset="0.9" Color="#303030" />
  </LinearGradientBrush>
  <local:ValidationEnabledConverter x:Name="CanValidateConverter" />
  <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" FalseValue="Collapsed" TrueValue="Visible" />
  <local:BoolToVisibilityConverter x:Key="BoolToVisibilityReConverter" FalseValue="Visible" TrueValue="Collapsed" />
  <local:GridLengthConverter x:Key="GridLengthConverter" />
  <local:CornerRadiusSplitConverter x:Key="CornerRadiusSplitConverter" />
  <local:LineDashStrokeArrayConverter x:Key="LineDashStrokeArrayConverter" />
  <local:WaveProgressBarValueToPercentConverter x:Key="WaveProgressBarValueToPercentConverter" />
  <local:NumberToPercentageConverter x:Key="NumberToPercentageConverter" />
  <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter" NotNullValue="Visible" NullValue="Collapsed" />
  <local:NullToVisibilityConverter x:Key="NullToVisibilityReConverter" NotNullValue="Collapsed" NullValue="Visible" />
  <local:StringToUriConverter x:Key="StringToUriConverter" />
  <local:StringToStyleConverter x:Key="StringToStyleConverter" />
  <local:DoubleToVisibilityConverter x:Name="DoubleToVisibilityConverter" FalseValue="Collapsed" GreaterThan="0" TrueValue="Visible" />
  <Style x:Key="StringInfoBadgeStyle" TargetType="InfoBadge">
    <Setter Property="Padding" Value="5,1,5,2" />
    <Setter Property="Tag" Value="NEW" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="InfoBadge">
          <Border x:Name="RootGrid" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.InfoBadgeCornerRadius}">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Text="{TemplateBinding Tag}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <x:Double x:Key="LandingItemTitleFontSize">14</x:Double>
  <x:Double x:Key="LandingItemSubtitleFontSize">12</x:Double>
  <x:Double x:Key="Breakpoint640Plus">641</x:Double>
  <x:Double x:Key="RailNavigationViewOpenPaneLength">72</x:Double>
  <x:Double x:Key="RailNavigationViewCompactPaneLength">72</x:Double>
  <x:Double x:Key="RailNavigationViewPaneHeaderRowMinHeight">0</x:Double>
  <x:Double x:Key="RailNavigationViewItemOnLeftMinHeight">58</x:Double>
  <x:Double x:Key="RailNavigationViewItemContentPresenterMargin">0</x:Double>
  <Style x:Key="BorderPanel" TargetType="Border">
    <Setter Property="Margin" Value="{ThemeResource NavigationViewContentMargin}" />
    <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewContentBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewContentGridBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <Style x:Key="BaseBorderInfoPanelStyle" TargetType="Border">
    <Setter Property="BorderBrush" Value="{ThemeResource InfoBarBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource InfoBarBorderThickness}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
  </Style>
  <Style x:Key="GridPanel" TargetType="Grid">
    <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TeachingTipBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TeachingTipContentBorderThicknessUntargeted}" />
    <Setter Property="Background" Value="{ThemeResource TeachingTipTransientBackground}" />
    <Setter Property="Shadow" Value="{ThemeResource ThemeShadow}" />
    <Setter Property="Transitions">
      <Setter.Value>
        <TransitionCollection>
          <ContentThemeTransition VerticalOffset="150" />
        </TransitionCollection>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridCardPanel" TargetType="Grid">
    <Setter Property="Background" Value="{ThemeResource LayerFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1,1,0,0" />
    <Setter Property="CornerRadius" Value="8" />
  </Style>
  <Style x:Key="StackPanelStyle" TargetType="StackPanel">
    <Setter Property="CornerRadius" Value="8" />
    <Setter Property="Padding" Value="16" />
    <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="Spacing" Value="8" />
  </Style>
  <x:Double x:Key="SecondaryTextFontSize">12</x:Double>
  <x:Double x:Key="HeaderTextFontSize">12</x:Double>
  <Style x:Key="DefaultAccordionStyle" TargetType="local:Accordion">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Accordion">
          <Grid>
            <local:AccordionPanel HeaderTemplate="{TemplateBinding HeaderTemplate}" ItemTemplate="{TemplateBinding ItemTemplate}" ItemsSource="{TemplateBinding ItemsSource}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            <Grid.Clip>
              <RectangleGeometry x:Name="PART_RectangleGeometry" />
            </Grid.Clip>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultAccordionItemStyle" TargetType="local:AccordionItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AccordionItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentPresenter Grid.RowSpan="2" />
            <ContentControl Name="PART_Header" Grid.Row="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultAnimatedGradientStyle" TargetType="local:AnimatedGradient">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AnimatedGradient">
          <Grid>
            <Rectangle x:Name="PART_Rectangle" />
            <ContentPresenter x:Name="PART_Content" Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultAnimatedImageStyle" TargetType="local:AnimatedImage">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AnimatedImage">
          <Grid>
            <Image x:Name="PART_BottomImage" Opacity="1" Stretch="{TemplateBinding Stretch}" />
            <Image x:Name="PART_TopImage" Opacity="0" Stretch="{TemplateBinding Stretch}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultArcProgressStyle" TargetType="local:ArcProgress">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="72" />
    <Setter Property="Height" Value="72" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ArcProgress">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Ellipse x:Name="PART_Elipse" Fill="{TemplateBinding Foreground}" Visibility="Collapsed" />
            <Path Fill="{TemplateBinding Foreground}">
              <Path.Data>
                <PathGeometry>
                  <PathGeometry.Figures>
                    <PathFigure x:Name="PART_PathFigure">
                      <PathFigure.Segments>
                        <ArcSegment x:Name="PART_ArcSegment" />
                        <LineSegment x:Name="PART_LineSegment" />
                      </PathFigure.Segments>
                    </PathFigure>
                  </PathGeometry.Figures>
                </PathGeometry>
              </Path.Data>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BreadcrumbBarItemStyle" TargetType="BreadcrumbBarItem">
    <Setter Property="FontSize" Value="28" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}" />
  </Style>
  <Style x:Key="DefaultCardStyle" TargetType="local:Card">
    <Setter Property="Padding" Value="8" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Card">
          <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" MinHeight="44" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="TitleGridVisibilityStates">
                <VisualState x:Name="TitleGridVisible" />
                <VisualState x:Name="TitleGridCollapsed">
                  <VisualState.Setters>
                    <Setter Target="TitleGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TitleGrid">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBlock Margin="16,0,0,0" VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" Text="{TemplateBinding Title}" />
              <ContentPresenter Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{TemplateBinding TitleContent}" />
            </Grid>
            <Rectangle x:Name="Divider" Grid.Row="1" Height="1" HorizontalAlignment="Stretch" Fill="{ThemeResource DividerStrokeColorDefaultBrush}" Visibility="{TemplateBinding DividerVisibility}" />
            <ContentPresenter Grid.Row="2" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultClockStyle" TargetType="local:Clock">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="8,0" />
    <Setter Property="BorderBrush" Value="{ThemeResource CalendarViewBorderBrush}" />
    <Setter Property="Background" Value="{ThemeResource CalendarViewBackground}" />
    <Setter Property="ClockCornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="TitleBorderCornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="TitleBorderBackground" Value="{ThemeResource SysemAccentControlBackgroundBrush}" />
    <Setter Property="MinuteHandBackground" Value="{ThemeResource SysemAccentControlBackgroundBrush}" />
    <Setter Property="CenterPointStroke" Value="{ThemeResource SysemAccentControlBackgroundBrush}" />
    <Setter Property="ClockBackground" Value="{ThemeResource ClockCircleBackgroundBrush}" />
    <Setter Property="CenterPointFill" Value="White" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="ClockHeight" Value="250" />
    <Setter Property="ClockWidth" Value="250" />
    <Setter Property="Diameter" Value="130" />
    <Setter Property="OffsetAngle" Value="-60" />
    <Setter Property="CenterPointHeight" Value="8" />
    <Setter Property="CenterPointWidth" Value="8" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="HeaderMargin" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Clock">
          <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding ClockCornerRadius}" />
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="49.5" />
                <RowDefinition />
                <RowDefinition Height="40" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Border Name="PART_BorderTitle" Grid.ColumnSpan="3" Margin="{TemplateBinding HeaderMargin}" Background="{TemplateBinding TitleBorderBackground}" CornerRadius="{TemplateBinding TitleBorderCornerRadius}">
                <TextBlock x:Name="PART_TimeStr" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Foreground="{ThemeResource TextOnAccentForegroundBrush}" />
              </Border>
              <Viewbox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Width="{TemplateBinding ClockWidth}" Height="{TemplateBinding ClockHeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid Name="PART_Grid" Margin="10">
                  <Border Width="178" Height="178" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding ClockBackground}" CornerRadius="90" />
                  <!--  Numbers Panel  -->
                  <local:CirclePanel x:Name="PART_PanelNum" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Diameter="{TemplateBinding Diameter}" KeepVertical="True" OffsetAngle="{TemplateBinding OffsetAngle}" />
                  <!--  Minute Hand  -->
                  <Line x:Name="PART_MinuteHand" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{TemplateBinding MinuteHandBackground}" StrokeThickness="2" X1="0" X2="0" Y1="0" Y2="-55" />
                  <!--  Center Ellipse  -->
                  <Ellipse Width="{TemplateBinding CenterPointWidth}" Height="{TemplateBinding CenterPointHeight}" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding CenterPointFill}" Stroke="{TemplateBinding CenterPointStroke}" StrokeThickness="2" />
                </Grid>
              </Viewbox>
              <local:ClockRadioButton x:Name="PART_ButtonAm" Grid.RowSpan="3" Grid.ColumnSpan="3" Width="35" Height="35" Margin="-30,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Content="am" IsChecked="True" />
              <local:ClockRadioButton x:Name="PART_ButtonPm" Grid.RowSpan="3" Grid.ColumnSpan="3" Width="35" Height="35" Margin="0,0,-30,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="pm" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultClockRadioButtonStyle" TargetType="local:ClockRadioButton">
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Height" Value="30" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid x:Name="RootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Pressed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SysemAccentControlBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="Ellipse" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Transparent" />
            <TextBlock x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultColorfulShimmingEffectStyle" TargetType="local:ColorfulShimmingEffect">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorfulShimmingEffect">
          <StackPanel x:Name="PART_Root">
            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultColorPaletteStyle" TargetType="local:ColorPalette">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <local:WrapPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ColorPaletteCircleTemplate" TargetType="local:ColorPaletteItem">
    <Border Padding="5">
      <local:SplitCircle Padding="{TemplateBinding Padding}" AutomationProperties.Name="{TemplateBinding InternalColorName}" FirstColor="{TemplateBinding Color}" SecondColor="{TemplateBinding Color}" />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="ColorPaletteRectangleTemplate" TargetType="local:ColorPaletteItem">
    <Border Padding="{TemplateBinding Padding}">
      <Border AutomationProperties.Name="{TemplateBinding InternalColorName}" Background="{TemplateBinding ColorBrush}" BorderBrush="{ThemeResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" />
    </Border>
  </ControlTemplate>
  <Style x:Key="DefaultCompositionShadowStyle" TargetType="local:CompositionShadow">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:CompositionShadow">
          <Grid>
            <Border x:Name="PART_ShadowElement" />
            <ContentPresenter Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Thickness x:Key="ContentDialogWindowTitlePadding">24,24,24,0</Thickness>
  <Thickness x:Key="ContentDialogWindowContentPadding">24,0,24,24</Thickness>
  <Color x:Key="ContentDialogWindowCommandSpaceBackground">#0F000000</Color>
  <Color x:Key="ContentDialogWindowSeparatorBorderColor">#19000000</Color>
  <Style x:Key="DefaultDepthLayerViewStyle" TargetType="local:DepthLayerView">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="Stretch" Value="Fill" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DepthLayerView">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ContentPresenter Content="{TemplateBinding Content}" />
            <Border Grid.Row="1" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid x:Name="PART_CompositionHostPanel" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultFlipSideStyle" TargetType="local:FlipSide">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FlipSide">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FlipStates">
                <VisualState x:Name="Slide1">
                  <VisualState.Setters>
                    <Setter Target="Side1Content.IsHitTestVisible" Value="True" />
                    <Setter Target="Side2Content.IsHitTestVisible" Value="False" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Slide2">
                  <VisualState.Setters>
                    <Setter Target="Side1Content.IsHitTestVisible" Value="False" />
                    <Setter Target="Side2Content.IsHitTestVisible" Value="True" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="Side1Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Side1}" IsHitTestVisible="True" />
            <ContentPresenter x:Name="Side2Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Side2}" IsHitTestVisible="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultFlipToRevealStyle" TargetType="local:FlipToReveal">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FlipToReveal">
          <Grid x:Name="PART_MainPanel">
            <ContentPresenter Content="{TemplateBinding PrimaryContent}" />
            <ContentPresenter Content="{TemplateBinding SecondaryContent}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultForegroundFocusEffectsStyle" TargetType="local:ForegroundFocusEffects">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ForegroundFocusEffects">
          <ContentPresenter Content="{TemplateBinding Content}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGifImageStyle" TargetType="local:GifImage">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:GifImage">
          <Image Name="PART_Image" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Stretch="{TemplateBinding Stretch}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGravatarStyle" TargetType="local:Gravatar">
    <Setter Property="Width" Value="72" />
    <Setter Property="Height" Value="72" />
    <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Gravatar">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <ContentPresenter Margin="{TemplateBinding Padding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <x:Double x:Key="GrowlWidth">340</x:Double>
  <Style TargetType="local:HeaderCarousel">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Padding="64,0,64,0" Orientation="Horizontal" Spacing="-48" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:HeaderCarousel">
          <Grid x:Name="RootGrid" CornerRadius="8,0,0,0">
            <local:OpacityMaskView VerticalAlignment="Top" OpacityMask="{ThemeResource OverlayRadialGradient}">
              <local:AnimatedImage x:Name="PART_BackDropImage" Height="400" ImageUrl="ms-appx:///Assets/BackgroundBlur.png" Stretch="{TemplateBinding ImageStretch}" Visibility="Visible" />
            </local:OpacityMaskView>
            <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" Margin="0,24,0,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled">
              <ItemsPresenter x:Name="PART_ItemsPresenter" />
            </ScrollViewer>
            <StackPanel Padding="24,12,24,24" HorizontalAlignment="Center" Orientation="Vertical" Spacing="12">
              <ContentPresenter Content="{TemplateBinding Header}" Visibility="{TemplateBinding HeaderVisibility}" />
              <Grid RequestedTheme="Light">
                <Grid Background="{ThemeResource AcrylicBackgroundFillColorBaseBrush}" CornerRadius="12" Opacity="0.6" />
                <ContentPresenter Content="{TemplateBinding SecondaryHeader}" Visibility="{TemplateBinding SecondaryHeaderVisibility}" />
              </Grid>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultCarouselItemStyle" TargetType="local:HeaderCarouselItem">
    <Setter Property="Width" Value="360" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="Height" Value="208" />
    <Setter Property="CornerRadius" Value="8" />
    <Setter Property="local:VisualAttach.Scale" Value="0.8" />
    <Setter Property="local:VisualAttach.NormalizedCenterPoint" Value="0.5, 0.5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:HeaderCarouselItem">
          <Grid>
            <Grid x:Name="PART_ShadowHost" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" />
            <Grid Padding="0" AutomationProperties.Name="{TemplateBinding Header}" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.Lights>
                <local:HoverLight />
                <local:AmbLight />
              </Grid.Lights>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected" />
                  <VisualState x:Name="Selected">
                    <VisualState.Setters>
                      <Setter Target="PART_TextPanel.Visibility" Value="Visible" />
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" Source="{Binding ImageUrl, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{TemplateBinding Stretch}" />
              <StackPanel x:Name="PART_TextPanel" Padding="12" VerticalAlignment="Bottom" Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}" Orientation="Vertical" Visibility="Collapsed">
                <TextBlock FontWeight="SemiBold" Foreground="{ThemeResource TextFillColorPrimaryBrush}" Text="{TemplateBinding Header}" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{TemplateBinding Description}" TextTrimming="CharacterEllipsis" />
              </StackPanel>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultImageExStyle" TargetType="local:ImageEx">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="LazyLoadingThreshold" Value="300" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ImageEx">
          <Grid Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Failed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Image" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderImage" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Loading">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Image" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderImage" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Loaded">
                  <Storyboard>
                    <DoubleAnimation AutoReverse="False" BeginTime="0" Storyboard.TargetName="Image" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                    <DoubleAnimation AutoReverse="False" BeginTime="0" Storyboard.TargetName="PlaceholderImage" Storyboard.TargetProperty="Opacity" From="1" To="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unloaded" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Image Name="PlaceholderImage" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Opacity="1.0" Source="{TemplateBinding PlaceholderSource}" Stretch="{TemplateBinding PlaceholderStretch}" />
            <Image Name="Image" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" NineGrid="{TemplateBinding NineGrid}" Opacity="0.0" Stretch="{TemplateBinding Stretch}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ExponentialEase x:Key="ProgressBarEaseOut" EasingMode="EaseOut" Exponent="2" />
  <ExponentialEase x:Key="ProgressBarEaseIn" EasingMode="EaseIn" Exponent="2" />
  <Style x:Key="DefaultIsEnabledTextBlockStyle" TargetType="local:IsEnabledTextBlock">
    <Setter Property="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:IsEnabledTextBlock">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Label.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <TextBlock x:Name="Label" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="WrapWholeWords" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <x:Double x:Key="DefaultIconSize">16</x:Double>
  <x:Double x:Key="SmallIconSize">12</x:Double>
  <Style x:Key="DefaultTextKeyVisualStyle" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="56" />
    <Setter Property="MinHeight" Value="48" />
    <Setter Property="Background" Value="{ThemeResource AccentButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="FontSize" Value="18" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:KeyVisual">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentHolder.Fill" Value="{ThemeResource AccentButtonBackgroundDisabled}" />
                    <Setter Target="KeyPresenter.Foreground" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                    <Setter Target="ContentHolder.Stroke" Value="{ThemeResource AccentButtonBorderBrushDisabled}" />
                    <!--<Setter Target="ContentHolder.StrokeThickness" Value="{TemplateBinding BorderThickness}" />-->
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="StateStates">
                <VisualState x:Name="Default" />
                <VisualState x:Name="Error">
                  <VisualState.Setters>
                    <Setter Target="ContentHolder.Fill" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}" />
                    <Setter Target="KeyPresenter.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
                    <Setter Target="ContentHolder.Stroke" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
                    <Setter Target="ContentHolder.StrokeThickness" Value="2" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle x:Name="ContentHolder" Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}" Fill="{TemplateBinding Background}" RadiusX="4" RadiusY="4" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <ContentPresenter x:Name="KeyPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultLayoutTransformerStyle" TargetType="local:LayoutTransformer">
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LayoutTransformer">
          <Grid x:Name="TransformRoot" Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="Presenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorDoubleBounceStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever" SpeedRatio="{TemplateBinding SpeedRatio}" Duration="0:0:1.000">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1.000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1.000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Ellipse x:Name="PART_Ellipse0" Fill="{TemplateBinding Foreground}" Opacity="0.3" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform />
                </Ellipse.RenderTransform>
              </Ellipse>
              <Ellipse x:Name="PART_Ellipse1" Fill="{TemplateBinding Foreground}" Opacity="0.3" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform />
                </Ellipse.RenderTransform>
              </Ellipse>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorWaveStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Height" Value="25" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever" SpeedRatio="{TemplateBinding SpeedRatio}" Duration="0:0:1.000">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.100" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.350" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.450" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.300" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.300" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.350" Value="1.6" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.550" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="5" />
              </Grid.ColumnDefinitions>
              <Grid.Resources>
                <Style TargetType="Rectangle">
                  <Setter Property="Width" Value="6" />
                  <Setter Property="VerticalAlignment" Value="Stretch" />
                  <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                  <Setter Property="RenderTransform">
                    <Setter.Value>
                      <ScaleTransform />
                    </Setter.Value>
                  </Setter>
                </Style>
              </Grid.Resources>
              <Rectangle x:Name="PART_Rect0" Grid.Column="0" Fill="{TemplateBinding Foreground}" />
              <Rectangle x:Name="PART_Rect1" Grid.Column="2" Fill="{TemplateBinding Foreground}" />
              <Rectangle x:Name="PART_Rect2" Grid.Column="4" Fill="{TemplateBinding Foreground}" />
              <Rectangle x:Name="PART_Rect3" Grid.Column="6" Fill="{TemplateBinding Foreground}" />
              <Rectangle x:Name="PART_Rect4" Grid.Column="8" Fill="{TemplateBinding Foreground}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorThreeDotsStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="70" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style TargetType="Ellipse">
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="RenderTransform">
                  <Setter.Value>
                    <ScaleTransform ScaleX="0" ScaleY="0" />
                  </Setter.Value>
                </Setter>
              </Style>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever" SpeedRatio="{TemplateBinding SpeedRatio}" Duration="0:0:1.900">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.600" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.750" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.850" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.350" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.600" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.600" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.750" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.850" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.350" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.600" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="Transparent">
              <Grid Width="70" Height="20">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="PART_Ellipse0" Grid.Column="0" Fill="{TemplateBinding Foreground}" />
                <Ellipse x:Name="PART_Ellipse1" Grid.Column="2" Fill="{TemplateBinding Foreground}" />
                <Ellipse x:Name="PART_Ellipse2" Grid.Column="4" Fill="{TemplateBinding Foreground}" />
              </Grid>
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorRingStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}">
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.100" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.200" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.300" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.400" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.500" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.600" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse6" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.700" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse7" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.100" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.200" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.300" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.400" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.500" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.600" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse6" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.700" RepeatBehavior="Forever" Storyboard.TargetName="PART_Ellipse7" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
              <Grid.Resources>
                <Style TargetType="Ellipse">
                  <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                  <Setter Property="Width" Value="5" />
                  <Setter Property="Height" Value="5" />
                  <Setter Property="RenderTransform">
                    <Setter.Value>
                      <ScaleTransform ScaleX="0" ScaleY="0" />
                    </Setter.Value>
                  </Setter>
                </Style>
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Ellipse x:Name="PART_Ellipse0" Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse1" Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" Grid.ColumnSpan="2" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse2" Grid.Row="2" Grid.RowSpan="1" Grid.Column="4" Grid.ColumnSpan="1" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse3" Grid.Row="3" Grid.RowSpan="2" Grid.Column="3" Grid.ColumnSpan="2" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse4" Grid.Row="4" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse5" Grid.Row="3" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse6" Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" Fill="{TemplateBinding Foreground}" />
              <Ellipse x:Name="PART_Ellipse7" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="{TemplateBinding Foreground}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorPulseStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever" SpeedRatio="{TemplateBinding SpeedRatio}" Duration="0:0:1.500">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.500" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:1.500" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="0:0:1.500" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Ellipse x:Name="PART_Ellipse" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform />
                </Ellipse.RenderTransform>
              </Ellipse>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorFlipPlaneStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever" SpeedRatio="{TemplateBinding SpeedRatio}" Duration="0:0:1.600">
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" Storyboard.TargetName="PART_Rect" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.800" Storyboard.TargetName="PART_Rect" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Rectangle x:Name="PART_Rect" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                  <ScaleTransform />
                </Rectangle.RenderTransform>
              </Rectangle>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorArcsRingStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style TargetType="Canvas">
                <Setter Property="Opacity" Value="0.3" />
              </Style>
              <Style TargetType="Path">
                <Setter Property="StrokeThickness" Value="10" />
              </Style>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas0" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.100" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas1" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.200" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas2" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.300" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas3" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.400" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas4" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.500" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas5" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.600" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas6" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.700" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas7" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
              </Grid.RenderTransform>
              <Canvas x:Name="PART_Canvas0">
                <Canvas.RenderTransform>
                  <TranslateTransform X="0" Y="-14" />
                </Canvas.RenderTransform>
                <Path Data="M 10,0 A 40,40 0 0 1 30,0" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas1">
                <Canvas.RenderTransform>
                  <TranslateTransform X="12" Y="-12" />
                </Canvas.RenderTransform>
                <Path Data="M 40,14 A 40,40 0 0 0 24,0" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas2">
                <Canvas.RenderTransform>
                  <TranslateTransform X="14" Y="0" />
                </Canvas.RenderTransform>
                <Path Data="M 40,10 A 40,40 0 0 1 40,30" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas3">
                <Canvas.RenderTransform>
                  <TranslateTransform X="12" Y="12" />
                </Canvas.RenderTransform>
                <Path Data="M 40,24 A 40,40 0 0 1 24,40" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas4">
                <Canvas.RenderTransform>
                  <TranslateTransform X="0" Y="14" />
                </Canvas.RenderTransform>
                <Path Data="M 10,40 A 40,40 0 0 0 30,40" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas5">
                <Canvas.RenderTransform>
                  <TranslateTransform X="-12" Y="12" />
                </Canvas.RenderTransform>
                <Path Data="M 0,24 A 40,40 0 0 0 14,40" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas6">
                <Canvas.RenderTransform>
                  <TranslateTransform X="-14" Y="0" />
                </Canvas.RenderTransform>
                <Path Data="M 0,10 A 40,40 0 0 0 0,30" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
              <Canvas x:Name="PART_Canvas7">
                <Canvas.RenderTransform>
                  <TranslateTransform X="-12" Y="-12" />
                </Canvas.RenderTransform>
                <Path Data="M 0,14 A 40,40 0 0 1 14,0" Stroke="{TemplateBinding Foreground}" />
              </Canvas>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LoadingIndicatorArcsStyle" TargetType="local:LoadingIndicator">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LoadingIndicator">
          <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style TargetType="Canvas">
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                <Setter Property="RenderTransform">
                  <Setter.Value>
                    <RotateTransform />
                  </Setter.Value>
                </Setter>
              </Style>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large" />
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}">
                    <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:3.000" Value="360" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                      <LinearDoubleKeyFrame KeyTime="0:0:2.000" Value="-360" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                  <TranslateTransform X="10" Y="10" />
                </TransformGroup>
              </Grid.RenderTransform>
              <Canvas x:Name="PART_Canvas0" Opacity="1.0">
                <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                  <Path.Data>
                    <PathGeometry>
                      <PathGeometry.Transform>
                        <TranslateTransform X="20" Y="-20" />
                      </PathGeometry.Transform>
                      <PathGeometry.Figures>
                        <PathFigureCollection>
                          <PathFigure StartPoint="0,0">
                            <PathFigure.Segments>
                              <PathSegmentCollection>
                                <ArcSegment IsLargeArc="True" Point="40,40" Size="40,40" SweepDirection="CounterClockwise" />
                              </PathSegmentCollection>
                            </PathFigure.Segments>
                          </PathFigure>
                        </PathFigureCollection>
                      </PathGeometry.Figures>
                    </PathGeometry>
                  </Path.Data>
                </Path>
              </Canvas>
              <Canvas x:Name="PART_Canvas1" Opacity="0.3">
                <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                  <Path.Data>
                    <PathGeometry>
                      <PathGeometry.Transform>
                        <TranslateTransform X="-7" Y="7" />
                      </PathGeometry.Transform>
                      <PathGeometry.Figures>
                        <PathFigureCollection>
                          <PathFigure StartPoint="0,0">
                            <PathFigure.Segments>
                              <PathSegmentCollection>
                                <ArcSegment IsLargeArc="True" Point="40,40" Size="30,30" SweepDirection="Clockwise" />
                              </PathSegmentCollection>
                            </PathFigure.Segments>
                          </PathFigure>
                        </PathFigureCollection>
                      </PathGeometry.Figures>
                    </PathGeometry>
                  </Path.Data>
                </Path>
              </Canvas>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultLongShadowTextBlockStyle" TargetType="local:LongShadowTextBlock">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LongShadowTextBlock">
          <Grid>
            <Rectangle x:Name="PART_ShadowElement" />
            <ContentPresenter x:Name="PART_TextBlock" Content="{TemplateBinding TextBlock}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultMagnifierStyle" TargetType="local:Magnifier">
    <Setter Property="Width" Value="180" />
    <Setter Property="Height" Value="180" />
    <Setter Property="BorderBrush" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="BorderThickness" Value="5" />
    <Setter Property="CornerRadius" Value="9999" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Magnifier">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <Border x:Name="PART_MagnifierHost" Background="Transparent" />
            <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <x:Double x:Key="MessageBoxHeaderIconFontSize">24</x:Double>
  <Thickness x:Key="MessageBoxHeaderIconMargin">0,0,12,0</Thickness>
  <x:String x:Key="MessageBoxHeaderIconBackgroundGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderWarningBackgroundGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderInformationalIconGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderQuestionalIconGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderErrorIconGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderWarningIconGlyph"></x:String>
  <x:String x:Key="MessageBoxHeaderSuccessIconGlyph"></x:String>
  <Style x:Key="DefaultOptionsPageControlStyle" TargetType="local:OptionsPageControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:OptionsPageControl">
          <Grid CornerRadius="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock x:Name="PART_HeaderTextPresenter" Margin="0,12" AutomationProperties.HeadingLevel="Level3" Style="{ThemeResource BodyStrongTextBlockStyle}" Text="{TemplateBinding HeaderText}" />
            <Grid x:Name="MainCard" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{ThemeResource LayerFillColorDefaultBrush}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="{TemplateBinding MainCardBorderThickness}" CornerRadius="{TemplateBinding MainCardCornerRadius}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid x:Name="OptionsPanel" Grid.Column="1" VerticalAlignment="Stretch" Background="{ThemeResource LayerFillColorDefaultBrush}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1,0,0,0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ScrollViewer Grid.Row="0" Grid.Column="0" MinWidth="{TemplateBinding PaneMinWidth}" MaxWidth="{TemplateBinding PaneMaxWidth}" Padding="{TemplateBinding PanePadding}" IsEnabled="{TemplateBinding IsBarEnabled}" Visibility="{TemplateBinding PaneVisibility}">
                  <ContentControl HorizontalContentAlignment="Stretch" Content="{TemplateBinding Pane}" />
                </ScrollViewer>
                <Grid x:Name="FixedOptionsBar" Grid.Column="1" Padding="4" HorizontalAlignment="Right" Background="{ThemeResource LayerFillColorAltBrush}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1,0,0,0" RowSpacing="8">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <ContentControl x:Name="FixedOptionsBarContent" Grid.Row="0" Width="{TemplateBinding BarMinWidth}" VerticalAlignment="Top" HorizontalContentAlignment="{TemplateBinding BarHorizontalContentAlignment}" Content="{TemplateBinding Bar}" IsEnabled="{TemplateBinding IsBarEnabled}" />
                  <ContentControl x:Name="FixedOptionsBarFooter" Grid.Row="2" Width="{TemplateBinding BarMinWidth}" VerticalAlignment="Bottom" HorizontalContentAlignment="{TemplateBinding BarHorizontalContentAlignment}" Content="{TemplateBinding BarFooter}" IsEnabled="{TemplateBinding IsBarEnabled}" />
                </Grid>
              </Grid>
              <Grid x:Name="ContentPageHolder" Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
                <!--  A solidbackground we enable when toggling themes. WinUI uses a lot of translucent brushes and might look weird  -->
                <Border Background="{ThemeResource SolidBackgroundFillColorBaseBrush}" CornerRadius="8,0,0,8" Visibility="Collapsed" />
                <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <ContentControl Margin="16" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Content}" />
                </ScrollViewer>
              </Grid>
              <Expander x:Name="PART_FooterExpander" Grid.Row="2" Grid.ColumnSpan="3" MinHeight="0" Margin="0,-1,0,0" Padding="0,0,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding FooterHorizontalAlignment}" BorderBrush="Transparent" BorderThickness="0,1,0,0" CornerRadius="0,0,8,8" Header="{TemplateBinding FooterHeader}" IsEnabled="{TemplateBinding IsFooterEnabled}" IsExpanded="{TemplateBinding IsFooterExpanded}" Visibility="{TemplateBinding FooterVisibility}">
                <Expander.Resources>
                  <Thickness x:Key="ExpanderChevronMargin">20,0,4,0</Thickness>
                </Expander.Resources>
                <ContentControl MaxHeight="{TemplateBinding FooterMaxHeight}" Margin="{TemplateBinding FooterContentMargin}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Footer}" />
              </Expander>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultPerspectiveHostStyle" TargetType="local:PerspectiveHost">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PerspectiveHost">
          <ContentPresenter Content="{TemplateBinding Content}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultPerspectiveZoomStyle" TargetType="local:PerspectiveZoom">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PerspectiveZoom">
          <local:PerspectiveHost x:Name="PART_Panel">
            <ContentPresenter Content="{TemplateBinding Content}" />
          </local:PerspectiveHost>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <x:Double x:Key="PinBoxMinHeight">32</x:Double>
  <x:Double x:Key="PinBoxMinWidth">42</x:Double>
  <Style x:Key="DefaultRedirectVisualViewStyle" TargetType="local:RedirectVisualView">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RedirectVisualView">
          <Grid x:Name="LayoutRoot">
            <Canvas x:Name="OpacityMaskContainer" Width="0" Height="0" Visibility="Collapsed" />
            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid x:Name="ChildPresenterContainer">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="ChildPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Child}" />
              </Grid>
              <Canvas x:Name="ChildHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultSelectableTextBlockStyle" TargetType="local:SelectableTextBlock">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:SelectableTextBlock">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <SolidColorBrush x:Key="TextBoxBackgroundThemeBrush" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBackground" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent" />
              <SolidColorBrush x:Key="TextBoxBorderThemeBrush" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBorderBrush" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBorderBrushPointerOver" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBorderBrushFocused" Color="Transparent" />
              <SolidColorBrush x:Key="TextControlBorderBrushDisabled" Color="Transparent" />
            </Border.Resources>
            <TextBox MinWidth="0" MinHeight="0" Margin="0" Padding="0" IsReadOnly="True" Text="{TemplateBinding Content}" TextWrapping="{TemplateBinding TextWrapping}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Thickness x:Key="SelectorBarSegmentedPadding">-1</Thickness>
  <Thickness x:Key="SelectorBarSegmentedItemPadding">12,5,12,2</Thickness>
  <Thickness x:Key="SelectorBarSegmentedItemVerticalPadding">12,5,12,5</Thickness>
  <Thickness x:Key="SelectorBarLeftItemHoverMargin">3, 3, 1, 3</Thickness>
  <Thickness x:Key="SelectorBarMiddleItemHoverMargin">1, 3, 1, 3</Thickness>
  <Thickness x:Key="SelectorBarRightItemHoverMargin">1, 3, 3, 3</Thickness>
  <Thickness x:Key="SelectorBarLeftItemHoverVerticalMargin">3, 1, 3, 3</Thickness>
  <Thickness x:Key="SelectorBarMiddleItemHoverVerticalMargin">3, 1, 3, 1</Thickness>
  <Thickness x:Key="SelectorBarRightItemHoverVerticalMargin">3, 3, 3, 1</Thickness>
  <Style x:Key="DefaultSelectorBarSegmentedStyle" TargetType="local:SelectorBarSegmented">
    <Setter Property="Background" Value="{ThemeResource SelectorBarSegmentedBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource SelectorBarSegmentedBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource SelectorBarSegmentedBorderThickness}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource SelectorBarSegmentedPadding}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:SelectorBarSegmented">
          <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ColumnDefinitions="Auto" CornerRadius="{TemplateBinding CornerRadius}" RowDefinitions="Auto">
            <Grid.ChildrenTransitions>
              <TransitionCollection>
                <RepositionThemeTransition />
              </TransitionCollection>
            </Grid.ChildrenTransitions>
            <ItemsView x:Name="PART_ItemsView" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Padding="{TemplateBinding Padding}" ItemsSource="{TemplateBinding Items}" SelectionMode="{TemplateBinding SelectionMode}" TabNavigation="{TemplateBinding TabNavigation}">
              <ItemsView.Layout>
                <StackLayout Orientation="Horizontal" />
              </ItemsView.Layout>
            </ItemsView>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <local:Bool2CornerRadiusConverter x:Key="Bool2CornerRadiusConverter" />
  <DataTemplate x:Key="HeaderTextBlockTemplate">
    <TextBlock FontFamily="{ThemeResource ContentControlThemeFontFamily}" Style="{ThemeResource SubtitleTextBlockStyle}" Text="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="DescriptionTextBlockTemplate">
    <TextBlock FontFamily="{ThemeResource ContentControlThemeFontFamily}" Style="{ThemeResource BodyTextBlockStyle}" Text="{Binding}" />
  </DataTemplate>
  <SolidColorBrush x:Key="ShieldBorderBrush" Color="{ThemeResource CardStrokeColorDefaultBrush}" />
  <Style x:Key="DefaultShimmerStyle" TargetType="local:Shimmer">
    <Setter Property="Background" Value="{ThemeResource ShimmerBackground}" />
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="MinHeight" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Shimmer">
          <Border x:Name="Shape" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShimmerTextBlockStyle" TargetType="local:ShimmerTextBlock">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ShimmerTextBlock">
          <ContentPresenter Content="{TemplateBinding Content}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShortcutStyle" TargetType="local:Shortcut">
    <Setter Property="WarningTitle" Value="Using a single key as a shortcut may interfere with regular typing or system behavior." />
    <Setter Property="WarningToolTip" Value="It's recommended to use a modifier key (like Ctrl, Alt, or Win) along with it." />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Shortcut">
          <Grid HorizontalAlignment="Right">
            <StackPanel Orientation="Horizontal">
              <Button x:Name="PART_OpenDialog" Padding="0" CornerRadius="8">
                <StackPanel Margin="12,6,12,6" Orientation="Horizontal" Spacing="16">
                  <ItemsControl VerticalAlignment="Center" IsEnabled="{TemplateBinding IsEnabled}" IsTabStop="False" ItemsSource="{TemplateBinding Keys}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="4" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <local:KeyVisual VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Content="{Binding}" IsTabStop="False" VisualType="Small" />
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                  <ContentControl VerticalContentAlignment="Center" Content="{TemplateBinding Icon}" />
                </StackPanel>
              </Button>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShortcutPreview" TargetType="local:ShortcutPreview">
    <Setter Property="MinWidth" Value="498" />
    <Setter Property="MinHeight" Value="220" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ShortcutPreview">
          <Grid MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition MinHeight="110" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="{TemplateBinding Title}" />
            <ItemsControl x:Name="KeysItemsControl" Grid.Row="1" Height="56" Margin="0,64,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" HorizontalContentAlignment="Center" ItemsSource="{TemplateBinding Keys}" Tag="{TemplateBinding IsError}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" Spacing="8" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <local:KeyVisual Height="56" AutomationProperties.AccessibilityView="Raw" Content="{Binding}" IsError="{Binding Tag, ElementName=KeysItemsControl}" IsTabStop="False" VisualType="Large" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <StackPanel Grid.Row="2" Margin="0,24,0,0" VerticalAlignment="Top" Orientation="Vertical" Spacing="8">
              <Grid Height="62">
                <InfoBar IsClosable="False" IsIconVisible="False" IsOpen="{TemplateBinding IsInfo}" IsTabStop="{TemplateBinding IsInfo}" Message="{TemplateBinding InfoTitle}" Severity="Informational" ToolTipService.ToolTip="{TemplateBinding InfoToolTip}" />
                <InfoBar Title="{TemplateBinding ErrorTitle}" IsClosable="False" IsOpen="{TemplateBinding IsError}" IsTabStop="{TemplateBinding IsError}" Severity="Error" ToolTipService.ToolTip="{TemplateBinding ErrorToolTip}" />
                <InfoBar Title="{TemplateBinding WarningTitle}" IsClosable="False" IsOpen="{TemplateBinding IsWarning}" IsTabStop="{TemplateBinding IsWarning}" Severity="Warning" ToolTipService.ToolTip="{TemplateBinding WarningToolTip}" />
              </Grid>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShortcutWithTextLabel" TargetType="local:ShortcutWithTextLabel">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ShortcutWithTextLabel">
          <Grid ColumnSpacing="8">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ItemsControl VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" IsTabStop="False" ItemsSource="{TemplateBinding Keys}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" Spacing="4" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <local:KeyVisual VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Content="{Binding}" IsTabStop="False" VisualType="SmallOutline" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Grid.Column="1" Margin="8,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding Text}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShyHeaderStyle" TargetType="local:ShyHeader">
    <Setter Property="Height" Value="300" />
    <Setter Property="BackgroundImageOpacity" Value="0.6" />
    <Setter Property="OverlayBrush" Value="#BFCFB5C0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ShyHeader">
          <Grid x:Name="PART_Header" Height="{TemplateBinding Height}" VerticalAlignment="Top">
            <Rectangle x:Name="PART_BackgroundRectangle">
              <Rectangle.Fill>
                <ImageBrush ImageSource="{Binding BackgroundImage, RelativeSource={RelativeSource TemplatedParent}}" Opacity="{TemplateBinding BackgroundImageOpacity}" Stretch="UniformToFill" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle x:Name="PART_OverlayRectangle" Fill="{Binding OverlayBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            <StackPanel x:Name="PART_TextContainer" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Spacing="10">
              <ContentPresenter x:Name="PART_Profile" Margin="10,70,10,10" Content="{TemplateBinding Profile}" />
              <StackPanel Margin="0,70,0,0" Orientation="Vertical" Spacing="10">
                <ContentPresenter x:Name="PART_Title" Content="{TemplateBinding Title}" />
                <ContentPresenter x:Name="PART_Subtitle" Content="{TemplateBinding Subtitle}" />
                <ContentPresenter x:Name="PART_Description" Content="{TemplateBinding Description}" />
                <ContentPresenter x:Name="PART_Footer" Content="{TemplateBinding Footer}" />
              </StackPanel>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="StepBarHorizontalControlTemplate" TargetType="local:StepBar">
    <Grid Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
      <Grid.Resources>
        <x:Double x:Key="ProgressBarMinHeight">4</x:Double>
        <x:Double x:Key="ProgressBarTrackHeight">4</x:Double>
      </Grid.Resources>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="ProgressStates">
          <!--  Waiting  -->
          <VisualState x:Name="Waiting">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarForeground}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Info  -->
          <VisualState x:Name="Info">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarForeground}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Warning  -->
          <VisualState x:Name="Warning">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorCautionBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Error  -->
          <VisualState x:Name="Error">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorCriticalBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Success  -->
          <VisualState x:Name="Success">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorSuccessBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ProgressBar Name="PART_ProgressBar" Margin="0,20,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" />
      <ItemsPresenter />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="StepBarVerticalControlTemplate" TargetType="local:StepBar">
    <Grid x:Name="PART_RootGridVertical" Padding="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
      <Grid.Resources>
        <x:Double x:Key="ProgressBarMinHeight">4</x:Double>
        <x:Double x:Key="ProgressBarTrackHeight">4</x:Double>
      </Grid.Resources>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="ProgressStates">
          <!--  Waiting  -->
          <VisualState x:Name="Waiting">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarForeground}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Info  -->
          <VisualState x:Name="Info">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarForeground}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Warning  -->
          <VisualState x:Name="Warning">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorCautionBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Error  -->
          <VisualState x:Name="Error">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorCriticalBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <!--  Success  -->
          <VisualState x:Name="Success">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemFillColorSuccessBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="PART_ProgressBarBorder" HorizontalAlignment="Left">
        <local:LayoutTransformer>
          <local:LayoutTransformer.LayoutTransform>
            <RotateTransform Angle="90" />
          </local:LayoutTransformer.LayoutTransform>
          <ProgressBar Name="PART_ProgressBar" Margin="0,18" />
        </local:LayoutTransformer>
      </Border>
      <ItemsPresenter />
    </Grid>
  </ControlTemplate>
  <ItemsPanelTemplate x:Key="StepBarHorizontalItemsPanelTemplate">
    <local:UniformGrid Rows="1" />
  </ItemsPanelTemplate>
  <ItemsPanelTemplate x:Key="StepBarVerticalItemsPanelTemplate">
    <local:UniformGrid Columns="1" />
  </ItemsPanelTemplate>
  <Style x:Key="DefaultStorageBarStyle" TargetType="local:StorageBar">
    <Setter Property="Padding" Value="{ThemeResource StorageBarPadding}" />
    <Setter Property="Foreground" Value="{ThemeResource StorageBarValueBrush}" />
    <Setter Property="Background" Value="{ThemeResource StorageBarTrackBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="ValueBarHeight" Value="{ThemeResource StorageBarValueHeight}" />
    <Setter Property="TrackBarHeight" Value="{ThemeResource StorageBarTrackHeight}" />
    <Setter Property="CornerRadius" Value="{ThemeResource StorageBarCornerRadius}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Minimum" Value="0" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="MinWidth" Value="32" />
    <Setter Property="MinHeight" Value="8" />
    <Setter Property="Value" Value="25" />
    <Setter Property="SmallChange" Value="0.1" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:StorageBar">
          <Border x:Name="BarRootPanel" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ControlStates">
                <VisualState x:Name="Safe" />
                <VisualState x:Name="Caution">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarValueCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarTrackCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Critical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarValueCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarTrackCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarValueDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackBar" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageBarTrackDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Container" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FlowDirection="{TemplateBinding FlowDirection}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="PART_ValueColumn" />
                <ColumnDefinition x:Name="PART_GapColumn" />
                <ColumnDefinition x:Name="PART_TrackColumn" />
              </Grid.ColumnDefinitions>
              <Border x:Name="PART_ValueBar" Grid.Column="0" Height="{TemplateBinding ValueBarHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{TemplateBinding Foreground}" />
              <Border x:Name="PART_TrackBar" Grid.Column="2" Height="{TemplateBinding TrackBarHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{TemplateBinding Background}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultStorageRingStyle" TargetType="local:StorageRing">
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="{ThemeResource StorageRingTrackBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource StorageRingValueBrush}" />
    <Setter Property="ValueRingThickness" Value="{ThemeResource StorageRingValueRingThickness}" />
    <Setter Property="TrackRingThickness" Value="{ThemeResource StorageRingTrackRingThickness}" />
    <Setter Property="Width" Value="128" />
    <Setter Property="Height" Value="128" />
    <Setter Property="MinAngle" Value="0" />
    <Setter Property="MaxAngle" Value="360" />
    <Setter Property="StartAngle" Value="0" />
    <Setter Property="Minimum" Value="0" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="Value" Value="25" />
    <Setter Property="Padding" Value="{ThemeResource StorageRingPadding}" />
    <Setter Property="Margin" Value="{ThemeResource StorageRingMargin}" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="SmallChange" Value="0.1" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="MinWidth" Value="12" />
    <Setter Property="MinHeight" Value="12" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:StorageRing">
          <Border x:Name="RingRootPanel" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ControlStates">
                <VisualState x:Name="Safe" />
                <VisualState x:Name="Caution">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageRingValueCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageRingTrackCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Critical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageRingValueCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource StorageRingTrackCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ValueRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlStrongStrokeColorDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TrackRingShape" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlStrongStrokeColorDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Container" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{ThemeResource StorageRingBackgroundBrush}" BackgroundSizing="OuterBorderEdge">
              <local:RingShape x:Name="PART_TrackRingShape" IsCircle="True" MaxAngle="{TemplateBinding MaxAngle}" MinAngle="{TemplateBinding MinAngle}" Stroke="{TemplateBinding Background}" StrokeEndLineCap="{ThemeResource StorageRingTrackEndCap}" StrokeStartLineCap="{ThemeResource StorageRingTrackStartCap}" StrokeThickness="{TemplateBinding TrackRingThickness}" SweepDirection="Clockwise" UseLayoutRounding="True" />
              <local:RingShape x:Name="PART_ValueRingShape" IsCircle="True" MaxAngle="{TemplateBinding MaxAngle}" MinAngle="{TemplateBinding MinAngle}" Stroke="{TemplateBinding Foreground}" StrokeEndLineCap="{ThemeResource StorageRingValueEndCap}" StrokeStartLineCap="{ThemeResource StorageRingValueStartCap}" StrokeThickness="{TemplateBinding ValueRingThickness}" SweepDirection="Clockwise" UseLayoutRounding="True" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Storyboard x:Key="Right2LeftTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Left2RightTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Bottom2TopTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Top2BottomTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="-50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Right2LeftWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Left2RightWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Bottom2TopWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Top2BottomWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="-50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="FadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
  </Storyboard>
  <Storyboard x:Key="ScaleUpTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="0.8" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="0.8" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="ScaleDownTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1.2" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="1.2" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="ZoomInWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="0.8" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="0.8" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="DiagonalSlideWithFadeTransition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <CubicEase EasingMode="EaseOut" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.4" />
  </Storyboard>
  <Storyboard x:Key="Custom1Transition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="50" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <ElasticEase Oscillations="1" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Custom2Transition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" From="10" To="0" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <ElasticEase Oscillations="1" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <Storyboard x:Key="Custom3Transition">
    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From=".8" To="1" Duration="0:0:0.4">
      <DoubleAnimation.EasingFunction>
        <ElasticEase Oscillations="1" />
      </DoubleAnimation.EasingFunction>
    </DoubleAnimation>
  </Storyboard>
  <ControlTemplate x:Key="CompletedTemplate" TargetType="ContentControl">
    <Grid x:Name="CompletedElement" Margin="-2">
      <Ellipse x:Name="CompletedRectangle" Fill="{ThemeResource ProgressCompletedBackgroundBrush}">
        <Ellipse.Shadow>
          <ThemeShadow />
        </Ellipse.Shadow>
      </Ellipse>
    </Grid>
  </ControlTemplate>
  <Style x:Key="DefaultBubbleViewStyle" TargetType="local:BubbleView">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:BubbleView">
          <Grid x:Name="RootGrid" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Rectangle x:Name="ShadowHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <Rectangle x:Name="BubbleHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultConfettiCannonStyle" TargetType="local:ConfettiCannon">
    <Setter Property="ClearColor" Value="Transparent" />
    <Setter Property="IsFixedTimeStep" Value="False" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ConfettiCannon">
          <win2d:CanvasAnimatedControl x:Name="PART_CanvasAnimated" IsHitTestVisible="{TemplateBinding IsHitTestVisible}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGooeyEffectStyle" TargetType="local:GooeyEffect">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:GooeyEffect">
          <win2d:CanvasControl x:Name="PART_Canvas" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGooeyFooterEffectStyle" TargetType="local:GooeyFooterEffect">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:GooeyFooterEffect">
          <win2d:CanvasControl x:Name="PART_Canvas" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultHatchStyle" TargetType="local:Hatch">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Hatch">
          <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <win2d:CanvasControl x:Name="PART_Canvas" />
            <ContentPresenter Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultParticleStyle" TargetType="local:Particle">
    <Setter Property="LineColor" Value="{ThemeResource SystemBaseMediumLowColor}" />
    <Setter Property="ParticleColor" Value="{ThemeResource SystemBaseLowColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Particle">
          <win2d:CanvasControl x:Name="PART_Canvas" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Storyboard x:Name="EffectBrushAnimation" RepeatBehavior="Forever" SpeedRatio="0.4" Duration="0:0:1.5">
    <ColorAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop1" Storyboard.TargetProperty="Color" Duration="0:0:1.5">
      <LinearColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:0.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.5" Value="#FFFFFFFF" />
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop2" Storyboard.TargetProperty="Color" Duration="0:0:1.5">
      <LinearColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:0.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.5" Value="#FFFFFFFF" />
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop5" Storyboard.TargetProperty="Color" Duration="0:0:1.5">
      <LinearColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:0.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.5" Value="#FFFFFFFF" />
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop6" Storyboard.TargetProperty="Color" Duration="0:0:1.5">
      <LinearColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:0.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.25" Value="#0FFFFFFF" />
      <LinearColorKeyFrame KeyTime="0:0:1.5" Value="#FFFFFFFF" />
    </ColorAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop2" Storyboard.TargetProperty="Offset" Duration="0:0:1.25">
      <DiscreteDoubleKeyFrame KeyTime="0" Value="-0.4" />
      <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="-0.4" />
      <LinearDoubleKeyFrame KeyTime="0:0:1.25" Value="1" />
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop3" Storyboard.TargetProperty="Offset" Duration="0:0:1.25">
      <DiscreteDoubleKeyFrame KeyTime="0" Value="-0.3" />
      <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="-0.3" />
      <LinearDoubleKeyFrame KeyTime="0:0:1.25" Value="1.1" />
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop4" Storyboard.TargetProperty="Offset" Duration="0:0:1.25">
      <DiscreteDoubleKeyFrame KeyTime="0" Value="-0.25" />
      <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="-0.25" />
      <LinearDoubleKeyFrame KeyTime="0:0:1.25" Value="1.15" />
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="Stop5" Storyboard.TargetProperty="Offset" Duration="0:0:1.25">
      <DiscreteDoubleKeyFrame KeyTime="0" Value="-0.15" />
      <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="-0.15" />
      <LinearDoubleKeyFrame KeyTime="0:0:1.25" Value="1.25" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <LinearGradientBrush x:Key="TextBlockStrokeViewGradientBrushSample" MappingMode="RelativeToBoundingBox" StartPoint="0,0.2" EndPoint="1,0.8">
    <GradientStop x:Name="Stop1" Offset="-1" Color="#FFFFFFFF" />
    <GradientStop x:Name="Stop2" Offset="-0.4" Color="#FFFFFFFF" />
    <GradientStop x:Name="Stop3" Offset="-0.3" Color="#FFFFFFFF" />
    <GradientStop x:Name="Stop4" Offset="-0.25" Color="#FFFFFFFF" />
    <GradientStop x:Name="Stop5" Offset="-0.15" Color="#FFFFFFFF" />
    <GradientStop x:Name="Stop6" Offset="2" Color="#FFFFFFFF" />
  </LinearGradientBrush>
  <Style x:Key="DefaultTextBlockStrokeViewStyle" TargetType="local:TextBlockStrokeView">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="StrokeBrush" Value="#FFFF0000" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextBlockStrokeView">
          <Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Border x:Name="TextBlockBorder" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Child="{TemplateBinding TextBlock}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTextGlitchEffectStyle" TargetType="local:TextGlitchEffect">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextGlitchEffect">
          <Rectangle x:Name="PART_TextBackground" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Fill="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" Stroke="{TemplateBinding BorderBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTextGlitchEffect2Style" TargetType="local:TextGlitchEffect2">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextGlitchEffect2">
          <Rectangle x:Name="PART_TextBackground" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Fill="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" Stroke="{TemplateBinding BorderBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTextGlitchEffect3Style" TargetType="local:TextGlitchEffect3">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextGlitchEffect3">
          <Rectangle x:Name="PART_TextBackground" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Fill="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" Stroke="{TemplateBinding BorderBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTextMorphEffectStyle" TargetType="local:TextMorphEffect">
    <Setter Property="ColorBrush" Value="{ThemeResource SystemBaseMediumHighColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextMorphEffect">
          <win2d:CanvasControl x:Name="PART_Canvas" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultWatermarkStyle" TargetType="local:Watermark">
    <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
    <Setter Property="ShadowColor" Value="{ThemeResource SystemBaseLowColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Watermark">
          <win2d:CanvasControl x:Name="PART_Canvas" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PagerControlPageNavigationButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FontIcon x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Glyph="{TemplateBinding Content}" MirroredWhenRightToLeft="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PagerControlNumberPanelButtonStyle" TargetType="Button">
    <Setter Property="MinWidth" Value="{StaticResource PagerControlNumberPanelButtonWidth}" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PagerControlPageNavigationButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:PagerControl">
    <Setter Property="AutomationProperties.LandmarkType" Value="Navigation" />
    <Setter Property="FirstButtonStyle" Value="{StaticResource PagerControlPageNavigationButtonStyle}" />
    <Setter Property="PreviousButtonStyle" Value="{StaticResource PagerControlPageNavigationButtonStyle}" />
    <Setter Property="NextButtonStyle" Value="{StaticResource PagerControlPageNavigationButtonStyle}" />
    <Setter Property="LastButtonStyle" Value="{StaticResource PagerControlPageNavigationButtonStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PagerControl">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FirstPageButtonVisibilityStates">
                <VisualState x:Name="FirstPageButtonVisible" />
                <VisualState x:Name="FirstPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="FirstPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FirstPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="FirstPageButton.Opacity" Value="0" />
                    <Setter Target="FirstPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FirstPageButtonIsEnabledStates">
                <VisualState x:Name="FirstPageButtonEnabled" />
                <VisualState x:Name="FirstPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="FirstPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PreviousPageButtonVisibilityStates">
                <VisualState x:Name="PreviousPageButtonVisible" />
                <VisualState x:Name="PreviousPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PreviousPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.Opacity" Value="0" />
                    <Setter Target="PreviousPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PreviousPageButtonIsEnabledStates">
                <VisualState x:Name="PreviousPageButtonEnabled" />
                <VisualState x:Name="PreviousPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NextPageButtonVisibilityStates">
                <VisualState x:Name="NextPageButtonVisible" />
                <VisualState x:Name="NextPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NextPageButtonIsEnabledStates">
                <VisualState x:Name="NextPageButtonEnabled" />
                <VisualState x:Name="NextPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NextPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.Opacity" Value="0" />
                    <Setter Target="NextPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LastPageButtonStates">
                <VisualState x:Name="LastPageButtonVisible" />
                <VisualState x:Name="LastPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="LastPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup>
                <VisualState x:Name="LastPageButtonEnabled" />
                <VisualState x:Name="LastPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="LastPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="LastPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="LastPageButton.Opacity" Value="0" />
                    <Setter Target="LastPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PagerDisplayModeStates">
                <VisualState x:Name="NumberBoxVisible">
                  <VisualState.Setters>
                    <Setter Target="BoxPanels.Visibility" Value="Visible" />
                    <Setter Target="NumberBoxDisplay.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ComboBoxVisible">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxDisplay.IsEnabled" Value="True" />
                    <Setter Target="BoxPanels.Visibility" Value="Visible" />
                    <Setter Target="ComboBoxDisplay.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NumberPanelVisible">
                  <VisualState.Setters>
                    <Setter Target="BoxPanels.Visibility" Value="Collapsed" />
                    <Setter Target="NumberBoxDisplay.Visibility" Value="Collapsed" />
                    <Setter Target="ComboBoxDisplay.Visibility" Value="Collapsed" />
                    <Setter Target="NumberPanelItemsRepeater.Visibility" Value="Visible" />
                    <Setter Target="NumberPanelCurrentPageIndicator.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="InfiniteItemsDisplayMode">
                <VisualState x:Name="FiniteItems" />
                <VisualState x:Name="InfiniteItems">
                  <VisualState.Setters>
                    <Setter Target="SuffixTextLabel.Visibility" Value="Collapsed" />
                    <Setter Target="TotalNumberOfPagesLabel.Visibility" Value="Collapsed" />
                    <Setter Target="LastPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
              <Button x:Name="FirstPageButton" Content="" FontFamily="{StaticResource SymbolThemeFontFamily}" Style="{TemplateBinding FirstButtonStyle}" ToolTipService.ToolTip="{Binding ElementName=FirstPageButton, Path=(AutomationProperties.Name)}" />
              <Button x:Name="PreviousPageButton" Content="" FontFamily="{StaticResource SymbolThemeFontFamily}" Style="{TemplateBinding PreviousButtonStyle}" ToolTipService.ToolTip="{Binding ElementName=PreviousPageButton, Path=(AutomationProperties.Name)}" />
            </StackPanel>
            <StackPanel x:Name="BoxPanels" Grid.Column="1" Orientation="Horizontal" Visibility="Collapsed">
              <TextBlock Margin="5,0,5,0" VerticalAlignment="Center" Text="{TemplateBinding PrefixText}" />
              <!--  NumberBox Display  -->
              <NumberBox x:Name="NumberBoxDisplay" HorizontalAlignment="Center" VerticalAlignment="Center" LargeChange="5" Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberOfPages, Mode=OneWay}" Minimum="1" SmallChange="1" Visibility="Collapsed" />
              <!--  ComboBox Display  -->
              <ComboBox x:Name="ComboBoxDisplay" HorizontalAlignment="Center" VerticalAlignment="Center" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Pages}" Visibility="Collapsed" />
              <TextBlock x:Name="SuffixTextLabel" Margin="5,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding SuffixText}" />
              <TextBlock x:Name="TotalNumberOfPagesLabel" Margin="5,0,5,0" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberOfPages, Mode=OneWay}" />
            </StackPanel>
            <ItemsRepeater x:Name="NumberPanelItemsRepeater" Grid.Column="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NumberPanelItems}" Visibility="Collapsed">
              <ItemsRepeater.Layout>
                <StackLayout Orientation="Horizontal" Spacing="5" />
              </ItemsRepeater.Layout>
            </ItemsRepeater>
            <Rectangle x:Name="NumberPanelCurrentPageIndicator" Grid.Column="1" Height="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Fill="{ThemeResource PagerControlSelectionIndicatorForeground}" RadiusX="1" RadiusY="1" Visibility="Collapsed">
              <Rectangle.Transitions>
                <TransitionCollection>
                  <RepositionThemeTransition />
                </TransitionCollection>
              </Rectangle.Transitions>
            </Rectangle>
            <StackPanel Grid.Column="2" HorizontalAlignment="Left" Orientation="Horizontal">
              <Button x:Name="NextPageButton" Content="" FontFamily="{StaticResource SymbolThemeFontFamily}" Style="{TemplateBinding NextButtonStyle}" ToolTipService.ToolTip="{Binding ElementName=NextPageButton, Path=(AutomationProperties.Name)}" />
              <Button x:Name="LastPageButton" Content="" FontFamily="{StaticResource SymbolThemeFontFamily}" Style="{TemplateBinding LastButtonStyle}" ToolTipService.ToolTip="{Binding ElementName=LastPageButton, Path=(AutomationProperties.Name)}" />
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RightAlignedCompactToggleSwitchStyle" BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
    <Style.Setters>
      <Setter Property="MinWidth" Value="0" />
      <Setter Property="Height" Value="36" />
      <Setter Property="HorizontalContentAlignment" Value="Right" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleSwitch">
            <Grid VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOff}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOff}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOff}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOn}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOn}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOn}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackground}" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="PointerOver">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPointerOver}" />
                      </ColorAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <VisualState.Setters>
                      <Setter Target="SwitchKnobOn.HorizontalAlignment" Value="Right" />
                      <Setter Target="SwitchKnobOn.Margin" Value="0,0,3,0" />
                      <Setter Target="SwitchKnobOff.HorizontalAlignment" Value="Left" />
                      <Setter Target="SwitchKnobOff.Margin" Value="3,0,0,0" />
                    </VisualState.Setters>
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPressed}" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPressed}" />
                      </ColorAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="17" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="17" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffDisabled}" />
                      </ColorAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ToggleStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition x:Name="DraggingToOnTransition" GeneratedDuration="0" From="Dragging" To="On">
                      <Storyboard>
                        <RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" TargetName="SwitchKnob" />
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualTransition>
                    <VisualTransition x:Name="OnToDraggingTransition" GeneratedDuration="0" From="On" To="Dragging">
                      <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualTransition>
                    <VisualTransition x:Name="DraggingToOffTransition" GeneratedDuration="0" From="Dragging" To="Off">
                      <Storyboard>
                        <RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" TargetName="SwitchKnob" />
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualTransition>
                    <VisualTransition x:Name="OnToOffTransition" GeneratedDuration="0" From="On" To="Off">
                      <Storyboard>
                        <RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" TargetName="SwitchKnob" />
                      </Storyboard>
                    </VisualTransition>
                    <VisualTransition x:Name="OffToOnTransition" GeneratedDuration="0" From="Off" To="On">
                      <Storyboard>
                        <RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" TargetName="SwitchKnob" />
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                          <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualTransition>
                  </VisualStateGroup.Transitions>
                  <VisualState x:Name="Dragging" />
                  <VisualState x:Name="Off" />
                  <VisualState x:Name="On">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="20" Duration="0" />
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ContentStates">
                  <VisualState x:Name="OffContent">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <x:Boolean>True</x:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OnContent">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <x:Boolean>True</x:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Margin="{ThemeResource ToggleSwitchTopHeaderMargin}" VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{ThemeResource ToggleSwitchHeaderForeground}" IsHitTestVisible="False" TextWrapping="Wrap" Visibility="Collapsed" />
              <Grid Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="12" MaxWidth="12" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0,5" Background="{ThemeResource ToggleSwitchContainerBackground}" CornerRadius="{TemplateBinding CornerRadius}" />
                <ContentPresenter x:Name="OffContentPresenter" Grid.RowSpan="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding OffContent}" ContentTemplate="{TemplateBinding OffContentTemplate}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" />
                <ContentPresenter x:Name="OnContentPresenter" Grid.RowSpan="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding OnContent}" ContentTemplate="{TemplateBinding OnContentTemplate}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" />
                <Rectangle x:Name="OuterBorder" Grid.Row="1" Grid.Column="2" Width="40" Height="20" Fill="{ThemeResource ToggleSwitchFillOff}" RadiusX="10" RadiusY="10" Stroke="{ThemeResource ToggleSwitchStrokeOff}" StrokeThickness="{ThemeResource ToggleSwitchOuterBorderStrokeThickness}" />
                <Rectangle x:Name="SwitchKnobBounds" Grid.Row="1" Grid.Column="2" Width="40" Height="20" Fill="{ThemeResource ToggleSwitchFillOn}" Opacity="0" RadiusX="10" RadiusY="10" Stroke="{ThemeResource ToggleSwitchStrokeOn}" StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" />
                <Grid x:Name="SwitchKnob" Grid.Row="1" Grid.Column="2" Width="20" Height="20" HorizontalAlignment="Left">
                  <Border x:Name="SwitchKnobOn" Width="12" Height="12" Margin="0,0,3,0" HorizontalAlignment="Right" Background="{ThemeResource ToggleSwitchKnobFillOn}" BackgroundSizing="OuterBorderEdge" BorderBrush="{ThemeResource ToggleSwitchKnobStrokeOn}" CornerRadius="7" Opacity="0" RenderTransformOrigin="0.5, 0.5">
                    <Border.RenderTransform>
                      <CompositeTransform />
                    </Border.RenderTransform>
                  </Border>
                  <Rectangle x:Name="SwitchKnobOff" Width="12" Height="12" Margin="3,0,0,0" HorizontalAlignment="Left" Fill="{ThemeResource ToggleSwitchKnobFillOff}" RadiusX="7" RadiusY="7" RenderTransformOrigin="0.5, 0.5">
                    <Rectangle.RenderTransform>
                      <CompositeTransform />
                    </Rectangle.RenderTransform>
                  </Rectangle>
                  <Grid.RenderTransform>
                    <TranslateTransform x:Name="KnobTranslateTransform" />
                  </Grid.RenderTransform>
                </Grid>
                <Thumb x:Name="SwitchThumb" Grid.RowSpan="3" Grid.ColumnSpan="3" AutomationProperties.AccessibilityView="Raw">
                  <Thumb.Template>
                    <ControlTemplate TargetType="Thumb">
                      <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                  </Thumb.Template>
                </Thumb>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="SettingsExpanderHeaderDownStyle" TargetType="ToggleButton">
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="ToggleButtonGrid" Width="{TemplateBinding Width}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderChevronPressedForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Indeterminate" />
                <VisualState x:Name="IndeterminatePointerOver" />
                <VisualState x:Name="IndeterminatePressed" />
                <VisualState x:Name="IndeterminateDisabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" />
            <ContentControl x:Name="ExpandCollapseChevronBorder" Grid.Column="1" Width="{StaticResource SettingsExpanderChevronButtonWidth}" Height="{StaticResource SettingsExpanderChevronButtonHeight}" Margin="0,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="{ThemeResource ExpanderChevronBackground}" BorderBrush="{ThemeResource ExpanderChevronBorderBrush}" BorderThickness="{ThemeResource ExpanderChevronBorderThickness}" CornerRadius="{ThemeResource ControlCornerRadius}" FocusVisualMargin="-3" IsTabStop="False" ToolTipService.ToolTip="{StaticResource SettingsExpanderChevronToolTip}" UseSystemFocusVisuals="True">
              <AnimatedIcon x:Name="ExpandCollapseChevron" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" AnimatedIcon.State="NormalOff" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource ExpanderChevronForeground}" RenderTransformOrigin="0.5, 0.5">
                <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                <AnimatedIcon.FallbackIconSource>
                  <FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="16" Glyph="{StaticResource ExpanderChevronDownGlyph}" IsTextScaleFactorEnabled="False" />
                </AnimatedIcon.FallbackIconSource>
              </AnimatedIcon>
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SubtleButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource SubtleButtonBackground}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Foreground" Value="{ThemeResource SubtleButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource SubtleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
            <ContentPresenter.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </ContentPresenter.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TextButtonStyle" TargetType="ButtonBase">
    <Setter Property="Background" Value="{ThemeResource HyperlinkButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource HyperlinkButtonForeground}" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ButtonBase">
          <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="4">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="Text" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" FontWeight="SemiBold" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AccentDropDownButtonStyle" TargetType="DropDownButton">
    <Setter Property="Background" Value="{ThemeResource AccentButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ChevronIcon.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ChevronIcon.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                    <Setter Target="ChevronIcon.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" />
            <AnimatedIcon x:Name="ChevronIcon" Grid.Column="1" Width="12" Height="12" Margin="8,0,0,0" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}">
              <animatedvisuals:AnimatedChevronDownSmallVisualSource />
              <AnimatedIcon.FallbackIconSource>
                <FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="8" Glyph="" IsTextScaleFactorEnabled="False" />
              </AnimatedIcon.FallbackIconSource>
            </AnimatedIcon>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource FlipViewNextPreviousButtonBackground}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource FlipViewButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}">
            <ContentPresenter.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </ContentPresenter.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HeaderNavigationButtonStyle" TargetType="Button">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FontSize" Value="{ThemeResource CalendarViewHeaderNavigationButtonFontSize}" />
    <Setter Property="FontWeight" Value="{ThemeResource CalendarViewHeaderNavigationFontWeight}" />
    <Setter Property="Background" Value="{ThemeResource CalendarViewNavigationButtonBackground}" />
    <Setter Property="Margin" Value="{ThemeResource CalendarViewHeaderNavigationButtonMargin}" />
    <Setter Property="Padding" Value="{ThemeResource CalendarViewHeaderNavigationButtonPadding}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="FocusVisualMargin" Value="{StaticResource CalendarViewNavigationButtonFocusVisualMargin}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="Text" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPointerOver}" />
                    <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewHeaderNavigationButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPressed}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewHeaderNavigationButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewHeaderNavigationButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AccentHeaderNavigationButtonStyle" BasedOn="{StaticResource HeaderNavigationButtonStyle}" TargetType="Button">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="Text" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPointerOver}" />
                    <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPressed}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationButtonStyle" TargetType="Button">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource CalendarViewNavigationButtonFontSize}" />
    <Setter Property="Background" Value="{ThemeResource CalendarViewNavigationButtonBackground}" />
    <Setter Property="Padding" Value="{ThemeResource CalendarViewNavigationButtonPadding}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="FocusVisualMargin" Value="{StaticResource CalendarViewNavigationButtonFocusVisualMargin}" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="Text" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPointerOver}" />
                    <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewNavigationButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPressed}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewNavigationButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource CalendarViewNavigationButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AccentNavigationButtonStyle" BasedOn="{StaticResource NavigationButtonStyle}" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="Text" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPointerOver}" />
                    <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Text.Background" Value="{ThemeResource CalendarViewNavigationButtonBackgroundPressed}" />
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Text.Foreground" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultDevWinUICalendarViewStyle" BasedOn="{StaticResource DefaultCalendarViewStyle}" TargetType="CalendarView">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarView">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Border.Resources>
              <Style x:Key="WeekDayNameStyle" BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="{ThemeResource CalendarViewWeekDayFontWeight}" />
                <Setter Property="Margin" Value="{ThemeResource CalendarViewWeekDayMargin}" />
                <Setter Property="Padding" Value="{ThemeResource CalendarViewWeekDayPadding}" />
              </Style>
              <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
                <Setter Property="HorizontalScrollMode" Value="Disabled" />
                <Setter Property="VerticalScrollMode" Value="Enabled" />
                <Setter Property="VerticalSnapPointsType" Value="Optional" />
                <Setter Property="ZoomMode" Value="Disabled" />
                <Setter Property="TabNavigation" Value="Once" />
                <Setter Property="BringIntoViewOnFocusChange" Value="False" />
                <Setter Property="Template" Value="{StaticResource ScrollViewerScrollBarlessTemplate}" />
              </Style>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay1" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay2" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay3" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay4" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay5" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay6" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay7" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderButtonStates">
                <VisualState x:Name="ViewChanged" />
                <VisualState x:Name="ViewChanging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HeaderButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.167" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualState x:Name="Month" />
                <VisualState x:Name="Year">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthViewScrollViewer" Storyboard.TargetProperty="IsEnabled">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Decade">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthViewScrollViewer" Storyboard.TargetProperty="IsEnabled">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Month" To="Year">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthViewTransform" Storyboard.TargetProperty="ScaleX">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0.84" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthViewTransform" Storyboard.TargetProperty="ScaleY">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0.84" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="1.29" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="1.29" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Year" To="Month">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleX">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="1.29" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleY">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="1.29" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthViewTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthViewTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Year" To="Decade">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleX">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0.84" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleY">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0.84" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="1.29" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="1.29" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Decade" To="Year">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewTransform" Storyboard.TargetProperty="ScaleX">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="1.29" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewTransform" Storyboard.TargetProperty="ScaleY">
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.150" Value="1.29" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundTransform" Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundTransform" Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.150" Value="0.84" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="0:0:0.500" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinViewWidth}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_HeaderBorder" Grid.ColumnSpan="3" Margin="4,4,0,4" Background="{ThemeResource SysemAccentControlBackgroundBrush}" CornerRadius="8,0,0,8" Visibility="Collapsed" />
                <Button x:Name="HeaderButton" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HeaderText}" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreViews}" Style="{StaticResource HeaderNavigationButtonStyle}" />
                <Button x:Name="PreviousButton" Grid.Column="0" Margin="{ThemeResource CalendarViewNavigationPreviousButtonMargin}" HorizontalContentAlignment="Stretch" Content="" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreContentBefore}" Style="{StaticResource NavigationButtonStyle}" />
                <Button x:Name="NextButton" Grid.Column="2" Margin="{ThemeResource CalendarViewNavigationNextButtonMargin}" HorizontalContentAlignment="Center" Content="" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreContentAfter}" Style="{StaticResource NavigationButtonStyle}" />
              </Grid>
              <Border x:Name="PART_TopBorder" Grid.Row="1" Height="1" Background="{TemplateBinding BorderBrush}" />
              <Grid x:Name="Views" Grid.Row="2">
                <Grid.Clip>
                  <RectangleGeometry Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClipRect}" />
                </Grid.Clip>
                <Border x:Name="BackgroundLayer">
                  <Border.RenderTransform>
                    <ScaleTransform x:Name="BackgroundTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </Border.RenderTransform>
                </Border>
                <Grid x:Name="MonthView">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.RenderTransform>
                    <ScaleTransform x:Name="MonthViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </Grid.RenderTransform>
                  <Grid x:Name="WeekDayNames" Margin="2,2,2,0" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="WeekDay1" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay1}" />
                    <TextBlock x:Name="WeekDay2" Grid.Column="1" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay2}" />
                    <TextBlock x:Name="WeekDay3" Grid.Column="2" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay3}" />
                    <TextBlock x:Name="WeekDay4" Grid.Column="3" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay4}" />
                    <TextBlock x:Name="WeekDay5" Grid.Column="4" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay5}" />
                    <TextBlock x:Name="WeekDay6" Grid.Column="5" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay6}" />
                    <TextBlock x:Name="WeekDay7" Grid.Column="6" Foreground="{TemplateBinding CalendarItemForeground}" Style="{StaticResource WeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.WeekDay7}" />
                  </Grid>
                  <ScrollViewer x:Name="MonthViewScrollViewer" Grid.Row="1" Margin="2" IsFocusEngagementEnabled="True" Style="{StaticResource ScrollViewerStyle}">
                    <CalendarPanel x:Name="MonthViewPanel" />
                  </ScrollViewer>
                </Grid>
                <ScrollViewer x:Name="YearViewScrollViewer" Margin="2" IsFocusEngagementEnabled="True" Style="{StaticResource ScrollViewerStyle}" UseLayoutRounding="False" Visibility="Collapsed">
                  <ScrollViewer.RenderTransform>
                    <ScaleTransform x:Name="YearViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </ScrollViewer.RenderTransform>
                  <CalendarPanel x:Name="YearViewPanel" />
                </ScrollViewer>
                <ScrollViewer x:Name="DecadeViewScrollViewer" Margin="2" IsFocusEngagementEnabled="True" Style="{StaticResource ScrollViewerStyle}" UseLayoutRounding="False" Visibility="Collapsed">
                  <ScrollViewer.RenderTransform>
                    <ScaleTransform x:Name="DecadeViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </ScrollViewer.RenderTransform>
                  <CalendarPanel x:Name="DecadeViewPanel" />
                </ScrollViewer>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SubtleComboBoxStyle" TargetType="ComboBox">
    <Setter Property="Padding" Value="{ThemeResource ComboBoxPadding}" />
    <Setter Property="MaxDropDownHeight" Value="504" />
    <Setter Property="Foreground" Value="{ThemeResource ComboBoxForeground}" />
    <Setter Property="Background" Value="{ThemeResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThemeThickness}" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="TextBoxStyle" Value="{StaticResource ComboBoxTextBoxStyle}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
    <Setter Property="ComboBoxHelper.KeepInteriorCornersSquare" Value="true" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Storyboard x:Key="OverlayOpeningAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                  <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OverlayClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                  <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0.0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="38" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForegroundPointerOver}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="DropDownGlyph.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForegroundPressed}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="DropDownGlyph.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForegroundDisabled}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="Pill" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForegroundFocused}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusedPressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="Pill" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForegroundFocusedPressed}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}" OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" OpenedTargetName="PopupBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}" OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" OpenedTargetName="PopupBorder" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditableModeStates">
                <VisualState x:Name="TextBoxFocused">
                  <VisualState.Setters>
                    <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ComboBoxEditableDropDownGlyphForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TextBoxFocusedOverlayPointerOver">
                  <VisualState.Setters>
                    <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ComboBoxEditableDropDownGlyphForeground}" />
                    <Setter Target="DropDownOverlay.Background" Value="{ThemeResource ComboBoxDropDownBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TextBoxFocusedOverlayPressed">
                  <VisualState.Setters>
                    <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ComboBoxEditableDropDownGlyphForeground}" />
                    <Setter Target="DropDownOverlay.Background" Value="{ThemeResource ComboBoxFocusedDropDownBackgroundPointerPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TextBoxOverlayPointerOver">
                  <VisualState.Setters>
                    <Setter Target="DropDownOverlay.Background" Value="{ThemeResource ComboBoxDropDownBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TextBoxOverlayPressed">
                  <VisualState.Setters>
                    <Setter Target="DropDownOverlay.Background" Value="{ThemeResource ComboBoxDropDownBackgroundPointerPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TextBoxUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="{ThemeResource ComboBoxTopHeaderMargin}" VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FlowDirection="{TemplateBinding FlowDirection}" FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}" Foreground="{ThemeResource ComboBoxHeaderForeground}" LineHeight="20" TextWrapping="Wrap" Visibility="Collapsed" />
            <Border x:Name="HighlightBackground" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="-4" Background="{ThemeResource ComboBoxBackgroundFocused}" BorderBrush="{ThemeResource ComboBoxBackgroundBorderBrushFocused}" BorderThickness="{StaticResource ComboBoxBackgroundBorderThicknessFocused}" CornerRadius="{StaticResource ComboBoxHiglightBorderCornerRadius}" Opacity="0" />
            <Border x:Name="Background" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" MinWidth="{ThemeResource ComboBoxThemeMinWidth}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" Translation="0,0,1" />
            <Rectangle x:Name="Pill" Grid.Row="1" Grid.Column="0" Margin="1,0,0,0" Opacity="0" Style="{StaticResource ComboBoxItemPill}">
              <Rectangle.RenderTransform>
                <CompositeTransform x:Name="PillTransform" ScaleY="1" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Grid.Column="0" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}">
              <TextBlock x:Name="PlaceholderTextBlock" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForeground}}" Text="{TemplateBinding PlaceholderText}" />
            </ContentPresenter>
            <TextBox x:Name="EditableText" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0" Padding="{ThemeResource ComboBoxEditableTextPadding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Load="False" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" BorderBrush="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForeground}}" Header="{TemplateBinding Header}" PlaceholderText="{TemplateBinding PlaceholderText}" Style="{TemplateBinding TextBoxStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed" />
            <Border x:Name="DropDownOverlay" Grid.Row="1" Grid.Column="1" Width="30" Margin="4,4,4,4" HorizontalAlignment="Right" x:Load="False" Background="Transparent" CornerRadius="{StaticResource ComboBoxDropDownButtonBackgroundCornerRadius}" Visibility="Collapsed" />
            <AnimatedIcon x:Name="DropDownGlyph" Grid.Row="1" Grid.Column="1" Width="12" Height="12" MinHeight="{ThemeResource ComboBoxMinHeight}" Margin="0,0,14,0" HorizontalAlignment="Right" VerticalAlignment="Center" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource ComboBoxDropDownGlyphForeground}" IsHitTestVisible="False">
              <animatedvisuals:AnimatedChevronDownSmallVisualSource />
              <AnimatedIcon.FallbackIconSource>
                <FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="12" Foreground="{ThemeResource ComboBoxDropDownGlyphForeground}" Glyph="" />
              </AnimatedIcon.FallbackIconSource>
            </AnimatedIcon>
            <ContentPresenter x:Name="DescriptionPresenter" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Load="False" Content="{TemplateBinding Description}" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" Margin="0,-0.5,0,-1" Padding="{ThemeResource ComboBoxDropdownBorderPadding}" HorizontalAlignment="Stretch" Background="{ThemeResource ComboBoxDropDownBackground}" BackgroundSizing="InnerBorderEdge" BorderBrush="{ThemeResource ComboBoxDropDownBorderBrush}" BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}" CornerRadius="{ThemeResource OverlayCornerRadius}">
                <ScrollViewer x:Name="ScrollViewer" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownContentMinWidth}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{ThemeResource ComboBoxDropDownForeground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" VerticalSnapPointsType="OptionalSingle" ZoomMode="Disabled">
                  <ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="local:CheckBoxWithDescriptionControl" />
  <Style x:Key="AppTitleBarMenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
    <Setter Property="Height" Value="28" />
    <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutItemBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutItemBorderThickness}" />
    <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}" />
    <Setter Property="Padding" Value="11,0,11,0" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden" />
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutItem">
          <Grid x:Name="LayoutRoot" Margin="{StaticResource MenuFlyoutItemMargin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPointerOver}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPressed}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundDisabled}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckPlaceholderStates">
                <VisualState x:Name="NoPlaceholder" />
                <VisualState x:Name="CheckPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckAndIconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemDoublePlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!--  Narrow padding is only applied when flyout was invoked with pen, mouse or keyboard.  -->
              <!--  Default padding is applied for all other cases including touch.  -->
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding" />
                <VisualState x:Name="NarrowPadding">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                  <VisualState.Setters>
                    <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox x:Name="IconRoot" Grid.Column="0" Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Visible">
              <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" />
            </Viewbox>
            <TextBlock x:Name="TextBlock" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="12" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}" />
            <TextBlock x:Name="KeyboardAcceleratorTextBlock" Grid.Column="1" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}" HorizontalAlignment="Right" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" Style="{ThemeResource CaptionTextBlockStyle}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="IndentedGridViewItemStyleSmall" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
    <Setter Property="Margin" Value="12,0,12,12" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="IndentedGridViewItemStyle" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
    <Setter Property="Margin" Value="12,0,0,12" />
  </Style>
  <Style x:Key="GridViewItemStyleSmall" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
    <Setter Property="Margin" Value="0,0,0,12" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="GridViewItemStyle" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
    <Setter Property="Margin" Value="0,0,12,12" />
  </Style>
  <Style x:Key="ModernSystemMenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
    <Setter Property="Height" Value="28" />
    <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutItemBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutItemBorderThickness}" />
    <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}" />
    <Setter Property="Padding" Value="11,0,11,0" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden" />
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutItem">
          <Grid x:Name="LayoutRoot" Margin="{StaticResource MenuFlyoutItemMargin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPointerOver}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPressed}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundDisabled}" />
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckPlaceholderStates">
                <VisualState x:Name="NoPlaceholder" />
                <VisualState x:Name="CheckPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckAndIconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemDoublePlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!--  Narrow padding is only applied when flyout was invoked with pen, mouse or keyboard.  -->
              <!--  Default padding is applied for all other cases including touch.  -->
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding" />
                <VisualState x:Name="NarrowPadding">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                  <VisualState.Setters>
                    <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox x:Name="IconRoot" Grid.Column="0" Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Visible">
              <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" />
            </Viewbox>
            <TextBlock x:Name="TextBlock" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="12" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}" />
            <TextBlock x:Name="KeyboardAcceleratorTextBlock" Grid.Column="1" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}" HorizontalAlignment="Right" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" Style="{ThemeResource CaptionTextBlockStyle}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationBackButtonStoreStyle" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="Content" Value="" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FontIcon x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Glyph="{TemplateBinding Content}" MirroredWhenRightToLeft="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PaneToggleButtonStoreStyle" TargetType="Button">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
    <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonSize}" />
    <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonSize}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="LayoutRoot" Width="{TemplateBinding MinWidth}" Height="{TemplateBinding MinHeight}" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundChecked}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox x:Name="IconHost" Width="16" Height="16" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw">
              <TextBlock x:Name="Icon" AutomationProperties.AccessibilityView="Raw" FontSize="{TemplateBinding FontSize}" Text="" TextAlignment="Center" />
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane_Main" TargetType="NavigationViewItemPresenter">
    <Setter Property="Foreground" Value="{ThemeResource RailNavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource RailNavigationViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource RailNavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="CornerRadius" Value="8" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="NavigationViewItemPresenter">
          <Grid x:Name="LayoutRoot" MinHeight="{ThemeResource RailNavigationViewItemOnLeftMinHeight}" Padding="4,0,4,4" Background="Transparent" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}">
            <!--  Store: No need for these Storyboards  -->
            <!--<Grid.Resources>
                            <Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0"
                                    To="180.0"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                            <Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0"
                                    To="0.0"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </Grid.Resources>-->
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Background" Value="{ThemeResource RailNavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundPointerOver}" />
                    <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Background" Value="{ThemeResource RailNavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundPressed}" />
                    <Setter Target="Icon.(AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Background" Value="{ThemeResource RailNavigationViewItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelected}" />
                    <!--  Store: Customized  -->
                    <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelected}" />-->
                    <Setter Target="Icon.(AnimatedIcon.State)" Value="NormalOn" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewSelectionIndicatorForeground}" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="UnselectedIconBox.Opacity" Value="0" />
                    <Setter Target="SelectedIconBox.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Background" Value="{ThemeResource RailNavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelectedPointerOver}" />
                    <!--  Store: Customized  -->
                    <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelectedPointerOver}" />-->
                    <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOverOn" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewSelectionIndicatorForeground}" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="UnselectedIconBox.Opacity" Value="0" />
                    <Setter Target="SelectedIconBox.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Background" Value="{ThemeResource RailNavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelectedPressed}" />
                    <!--  Store: Customized  -->
                    <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RailNavigationViewItemForegroundSelectedPressed}" />-->
                    <Setter Target="Icon.(AnimatedIcon.State)" Value="PressedOn" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewSelectionIndicatorForeground}" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="UnselectedIconBox.Opacity" Value="0" />
                    <Setter Target="SelectedIconBox.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Backplate.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IconStates">
                <VisualState x:Name="IconVisible" />
                <VisualState x:Name="IconCollapsed">
                  <VisualState.Setters>
                    <Setter Target="Icon.Visibility" Value="Collapsed" />
                    <Setter Target="UnselectedIconBox.Visibility" Value="Collapsed" />
                    <Setter Target="SelectedIconBox.Visibility" Value="Collapsed" />
                    <!--  Store: Removed  -->
                    <!--<Setter Target="IconColumn.Width" Value="16" />-->
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ChevronStates">
                <VisualState x:Name="ChevronHidden" />
                <VisualState x:Name="ChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Margin" Value="{ThemeResource NavigationViewCompactItemContentPresenterMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Backplate" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
              <Border.BackgroundTransition>
                <BrushTransition Duration="0:0:0.15" />
              </Border.BackgroundTransition>
            </Border>
            <Grid x:Name="PresenterContentRootGrid">
              <!--  Wrap SelectionIndicator in a panel so that its offset is 0,0 - this enables the offset animation.  -->
              <!--  TODO: There's flicking issue of the indicator, having a 0.1 Margin and setting UseLayoutRounding to False is a temp solution.  -->
              <Border Margin="0.1,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" UseLayoutRounding="False">
                <Rectangle x:Name="SelectionIndicator" Width="4" Height="24" Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}" Opacity="0.0" RadiusX="2" RadiusY="2" />
              </Border>
              <Grid x:Name="ContentGrid" MinHeight="{ThemeResource RailNavigationViewItemOnLeftMinHeight}" RowSpacing="6">
                <!--  Store: Added Grid.RowDefinitions & Removed Grid.ColumnDefinitions  -->
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition Height="Auto" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>-->
                <!--  Store: Removed  -->
                <!--<Border x:Name="IconColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LatestIconColumnWidth}">-->
                <ContentPresenter x:Name="Icon" Grid.Row="1" Height="20" Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" local:ImplicitOffsetAnimationHelper.EnableOffsetAnimation="True" AnimatedIcon.State="NormalOff" Content="{TemplateBinding Icon}" Foreground="{ThemeResource RailNavigationIconForegroundBrush}" />
                <!--</Border>-->
                <Viewbox x:Name="UnselectedIconBox" Grid.Row="1" Height="20" Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}" local:ImplicitOffsetAnimationHelper.EnableOffsetAnimation="True" Visibility="{TemplateBinding local:NavItemIconHelper.StaticIconVisibility}">
                  <ContentPresenter x:Name="UnselectedIcon" Content="{TemplateBinding local:NavItemIconHelper.UnselectedIcon}" Foreground="{ThemeResource RailNavigationIconForegroundBrush}" />
                </Viewbox>
                <Viewbox x:Name="SelectedIconBox" Grid.Row="1" Height="20" Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}" local:ImplicitOffsetAnimationHelper.EnableOffsetAnimation="True" Opacity="0" Visibility="{TemplateBinding local:NavItemIconHelper.StaticIconVisibility}">
                  <!--  Visibility="{TemplateBinding local:NavItemIconHelper.StaticIconVisibility}"  -->
                  <ContentPresenter x:Name="SelectedIcon" Content="{TemplateBinding local:NavItemIconHelper.SelectedIcon}" Foreground="{ThemeResource NavigationViewSelectionIndicatorForeground}" />
                </Viewbox>
                <Viewbox Grid.Row="2" Margin="{ThemeResource RailNavigationViewItemContentPresenterMargin}" StretchDirection="DownOnly">
                  <TextBlock x:Name="ContentPresenter" HorizontalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource TextFillColorSecondaryBrush}" MaxLines="2" Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="WrapWholeWords" />
                </Viewbox>
                <!--  Store: Removed  -->
                <!--<Grid
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="2"
                                    Width="40"
                                    Margin="{ThemeResource NavigationViewItemExpandChevronMargin}"
                                    HorizontalAlignment="Right"
                                    Background="Transparent"
                                    Visibility="Collapsed">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                        Foreground="{ThemeResource NavigationViewItemForeground}"
                                        IsTextScaleFactorEnabled="False"
                                        RenderTransformOrigin="0.5, 0.5"
                                        Text="{StaticResource NavigationViewItemExpandedGlyph}">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>-->
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavSplitViewStoreStyle" TargetType="SplitView">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
    <Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
    <Setter Property="PaneBackground" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SplitView">
          <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
              <ColumnDefinition x:Name="ColumnDefinition2" Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Closed" To="OpenOverlayLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Closed" To="OpenOverlayRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactLeft" To="OpenCompactOverlayLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactRight" To="OpenCompactOverlayRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenOverlayLeft" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenOverlayRight" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenCompactOverlayLeft" To="ClosedCompactLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenCompactOverlayRight" To="ClosedCompactRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenInlineLeft" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="2" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="2" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationCloseDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Closed" To="OpenInlineLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactLeft" To="OpenInlineLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenInlineLeft" To="ClosedCompactLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{StaticResource SplitViewPaneAnimationOpenDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Closed" />
                <VisualState x:Name="ClosedCompactLeft">
                  <VisualState.Setters>
                    <Setter Target="ColumnDefinition1.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    <Setter Target="ContentRoot.Grid.Column" Value="1" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ClosedCompactRight">
                  <VisualState.Setters>
                    <Setter Target="ColumnDefinition1.Width" Value="*" />
                    <Setter Target="ColumnDefinition2.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="PaneRoot.Grid.ColumnSpan" Value="2" />
                    <Setter Target="PaneRoot.HorizontalAlignment" Value="Right" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OpenOverlayLeft">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenOverlayRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenInlineLeft">
                  <VisualState.Setters>
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="HCPaneBorder.Visibility" Value="Visible" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="ContentRoot.Grid.Column" Value="1" />
                    <Setter Target="PaneRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneTransform.TranslateX" Value="0" />
                    <Setter Target="ContentTransform.TranslateX" Value="0" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OpenInlineRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenCompactOverlayLeft">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenCompactOverlayRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="OverlayVisibilityStates">
                <VisualState x:Name="OverlayNotVisible" />
                <VisualState x:Name="OverlayVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{ThemeResource SplitViewLightDismissOverlayBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Pane Content Area  -->
            <Grid x:Name="PaneRoot" Grid.ColumnSpan="2" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" HorizontalAlignment="Left" Background="{TemplateBinding PaneBackground}" Canvas.ZIndex="1" Visibility="Collapsed">
              <Grid.BackgroundTransition>
                <BrushTransition />
              </Grid.BackgroundTransition>
              <Grid.Clip>
                <RectangleGeometry x:Name="PaneClipRectangle">
                  <RectangleGeometry.Transform>
                    <CompositeTransform x:Name="PaneClipRectangleTransform" />
                  </RectangleGeometry.Transform>
                </RectangleGeometry>
              </Grid.Clip>
              <Grid.RenderTransform>
                <CompositeTransform x:Name="PaneTransform" />
              </Grid.RenderTransform>
              <Border Child="{TemplateBinding Pane}" />
              <Rectangle x:Name="HCPaneBorder" HorizontalAlignment="Right" x:DeferLoadStrategy="Lazy" Fill="{ThemeResource SystemControlForegroundTransparentBrush}" Visibility="Collapsed" />
            </Grid>
            <!--  Content Area  -->
            <Grid x:Name="ContentRoot" Grid.ColumnSpan="2">
              <Grid.RenderTransform>
                <CompositeTransform x:Name="ContentTransform" />
              </Grid.RenderTransform>
              <Border Child="{TemplateBinding Content}" />
              <Rectangle x:Name="LightDismissLayer" Fill="Transparent" Visibility="Collapsed" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="InfoBorderPanelStyle" BasedOn="{StaticResource BaseBorderInfoPanelStyle}" TargetType="Border">
    <Setter Property="Background" Value="{ThemeResource InfoBarInformationalSeverityBackgroundBrush}" />
  </Style>
  <Style x:Key="WarningBorderPanelStyle" BasedOn="{StaticResource BaseBorderInfoPanelStyle}" TargetType="Border">
    <Setter Property="Background" Value="{ThemeResource InfoBarWarningSeverityBackgroundBrush}" />
  </Style>
  <Style x:Key="ErrorBorderPanelStyle" BasedOn="{StaticResource BaseBorderInfoPanelStyle}" TargetType="Border">
    <Setter Property="Background" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}" />
  </Style>
  <Style x:Key="SuccessBorderPanelStyle" BasedOn="{StaticResource BaseBorderInfoPanelStyle}" TargetType="Border">
    <Setter Property="Background" Value="{ThemeResource InfoBarSuccessSeverityBackgroundBrush}" />
  </Style>
  <Style x:Key="CardGridStyle" TargetType="Grid">
    <Style.Setters>
      <Setter Property="Padding" Value="12" />
      <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
      <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
    </Style.Setters>
  </Style>
  <Style x:Key="CardPanelStyle" TargetType="StackPanel">
    <Style.Setters>
      <Setter Property="Padding" Value="12" />
      <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
      <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
    </Style.Setters>
  </Style>
  <Style x:Key="TokenStyle" TargetType="Border">
    <Style.Setters>
      <Setter Property="Padding" Value="12" />
      <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
      <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
    </Style.Setters>
  </Style>
  <Style x:Key="GlassAcrylicGridStyle" TargetType="Grid">
    <Style.Setters>
      <Setter Property="Padding" Value="12" />
      <Setter Property="Background" Value="{ThemeResource AcrylicInAppFillColorBaseBrush}" />
      <Setter Property="BorderThickness" Value="3" />
      <Setter Property="BorderBrush" Value="{ThemeResource GlassAcrylicBorderBrush}" />
      <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
    </Style.Setters>
  </Style>
  <Style x:Key="HeroCardGridStyle" BasedOn="{StaticResource CardGridStyle}" TargetType="Grid">
    <Style.Setters>
      <Setter Property="Padding" Value="16,12,16,16" />
      <Setter Property="Background" Value="{ThemeResource CardGradient2Brush}" />
    </Style.Setters>
  </Style>
  <Style x:Key="TokenViewSelectorBarItemStyle" TargetType="SelectorBarItem">
    <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
    <Setter Property="Background" Value="{ThemeResource TokenItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource TokenItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TokenItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TokenItemBorderThickness}" />
    <Setter Property="Padding" Value="11,5,11,6" />
    <Setter Property="CornerRadius" Value="16" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FocusVisualMargin" Value="{ThemeResource SelectorBarItemFocusVisualMargin}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SelectorBarItem">
          <Grid x:Name="PART_ContainerRoot" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CombinedStates">
                <VisualState x:Name="UnselectedNormal" />
                <VisualState x:Name="UnselectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UnselectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPointerOverSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPointerOverSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBackgroundPointerOverSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBorderBrushPointerOverSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPressedSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemForegroundPressedSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBackgroundPressedSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TokenItemBorderBrushPressedSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel Grid.Column="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Spacing="{ThemeResource SelectorBarItemSpacing}">
              <ContentPresenter x:Name="PART_IconVisual" Margin="{ThemeResource SelectorBarItemIconVisualMargin}" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                  <ScaleTransform x:Name="IconTransform" ScaleX="{ThemeResource SelectorBarItemIconScale}" ScaleY="{ThemeResource SelectorBarItemIconScale}" />
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <TextBlock x:Name="PART_TextVisual" Margin="{ThemeResource SelectorBarItemTextVisualMargin}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="Wrap" />
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OobeSubtitleStyle" TargetType="TextBlock">
    <Setter Property="Margin" Value="0,16,0,0" />
    <Setter Property="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
    <Setter Property="AutomationProperties.HeadingLevel" Value="Level3" />
    <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
    <Setter Property="FontSize" Value="{StaticResource BodyTextBlockFontSize}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    <Setter Property="TextWrapping" Value="Wrap" />
    <Setter Property="LineStackingStrategy" Value="MaxHeight" />
    <Setter Property="TextLineBounds" Value="Full" />
  </Style>
  <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource SecondaryTextFontSize}" />
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
  </Style>
  <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource HeaderTextFontSize}" />
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <Style BasedOn="{StaticResource DefaultAccordionStyle}" TargetType="local:Accordion" />
  <Style BasedOn="{StaticResource DefaultAccordionItemStyle}" TargetType="local:AccordionItem" />
  <Style BasedOn="{StaticResource DefaultAnimatedGradientStyle}" TargetType="local:AnimatedGradient" />
  <Style BasedOn="{StaticResource DefaultAnimatedImageStyle}" TargetType="local:AnimatedImage" />
  <Style BasedOn="{StaticResource DefaultArcProgressStyle}" TargetType="local:ArcProgress" />
  <Style x:Key="DefaultBreadcrumbNavigatorStyle" TargetType="local:BreadcrumbNavigator">
    <Setter Property="FontSize" Value="48" />
    <Setter Property="FontWeight" Value="Medium" />
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <BreadcrumbBarItem Style="{StaticResource BreadcrumbBarItemStyle}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="CalendarWithAnalogClockTemplate" TargetType="local:CalendarWithClock">
    <Grid x:Name="PART_Root">
      <Grid.ColumnDefinitions>
        <ColumnDefinition MinWidth="300" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="PointerOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPointerOver}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPointerOver}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPressed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundDisabled}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushDisabled}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerHeaderForegroundDisabled}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="PointerFocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectionStates">
          <VisualState x:Name="Unselected" />
          <VisualState x:Name="Selected">
            <Storyboard />
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="HeaderStates">
          <VisualState x:Name="TopHeader" />
          <VisualState x:Name="LeftHeader">
            <VisualState.Setters>
              <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1" />
              <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0" />
              <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1" />
              <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}" />
              <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}" />
            </VisualState.Setters>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Background" Grid.Column="0" Grid.ColumnSpan="2" MinHeight="32" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" />
      <CalendarView x:Name="PART_CalendarView" Grid.Column="0" MinWidth="300" Margin="{TemplateBinding CalendarViewMargin}" BorderThickness="{TemplateBinding CalendarViewBorderThickness}" CalendarIdentifier="{TemplateBinding CalendarIdentifier}" CornerRadius="{TemplateBinding CalendarViewCornerRadius}" DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}" DisplayMode="{TemplateBinding DisplayMode}" FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}" IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}" IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}" IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}" MaxDate="{TemplateBinding MaxDate}" MinDate="{TemplateBinding MinDate}" Style="{TemplateBinding CalendarViewStyle}" />
      <local:Clock x:Name="PART_Clock" Grid.Column="1" Margin="{TemplateBinding ClockMargin}" BorderThickness="{TemplateBinding ClockBorderThickness}" ClockCornerRadius="{TemplateBinding ClockCornerRadius}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="CalendarWithTimePickerTemplate" TargetType="local:CalendarWithClock">
    <Grid x:Name="PART_Root">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="PointerOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPointerOver}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPointerOver}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPressed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundDisabled}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushDisabled}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerHeaderForegroundDisabled}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="PointerFocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectionStates">
          <VisualState x:Name="Unselected" />
          <VisualState x:Name="Selected">
            <Storyboard />
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="HeaderStates">
          <VisualState x:Name="TopHeader" />
          <VisualState x:Name="LeftHeader">
            <VisualState.Setters>
              <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1" />
              <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0" />
              <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1" />
              <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}" />
              <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}" />
            </VisualState.Setters>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Background" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" MinHeight="32" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" />
      <CalendarView x:Name="PART_CalendarView" Grid.Column="0" Margin="{TemplateBinding CalendarViewMargin}" BorderThickness="{TemplateBinding CalendarViewBorderThickness}" CalendarIdentifier="{TemplateBinding CalendarIdentifier}" CornerRadius="{ThemeResource OverlayCornerRadius}" DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}" DisplayMode="{TemplateBinding DisplayMode}" FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}" IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}" IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}" IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}" MaxDate="{TemplateBinding MaxDate}" MinDate="{TemplateBinding MinDate}" Style="{TemplateBinding CalendarViewStyle}" />
      <TimePicker x:Name="PART_TimePicker" Grid.Column="1" Margin="{TemplateBinding TimePickerMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
  </ControlTemplate>
  <Style BasedOn="{StaticResource DefaultCardStyle}" TargetType="local:Card" />
  <Style x:Key="DefaultCheckUpdateControlStyle" TargetType="local:CheckUpdateControl">
    <Setter Property="LastUpdateCheckTitle" Value="Last checked: " />
    <Setter Property="UpdateNotAvailableTitle" Value="You're up to date" />
    <Setter Property="UpdateAvailableTitle" Value="Update Available" />
    <Setter Property="UpdateAvailableVersionTitle" Value="Version" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:CheckUpdateControl">
          <StackPanel Orientation="Horizontal">
            <Button x:Name="PART_UpdateAvailableButton" Style="{StaticResource SubtleButtonStyle}" Visibility="{Binding IsUpdateAvailable, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
              <Grid ColumnSpacing="16">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="PART_UpdateAvailableIconPresenter" Content="{TemplateBinding UpdateAvailableIcon}" Visibility="Collapsed" />
                <Border x:Name="PART_UpdateAvailableIconBorder" Width="20" Height="20" CornerRadius="10">
                  <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.5,1">
                      <GradientStop Offset="0.0" Color="#239DE0" />
                      <GradientStop Offset="1.0" Color="#037CD6" />
                    </LinearGradientBrush>
                  </Border.Background>
                  <FontIcon AutomationProperties.AccessibilityView="Raw" FontSize="11" Foreground="White" Glyph="" />
                </Border>
                <ContentPresenter x:Name="PART_UpdateAvailableTitlePresenter" Grid.Column="1" Content="{TemplateBinding UpdateAvailableTitle}" Visibility="Collapsed" />
                <StackPanel x:Name="PART_UpdateAvailableTitleStackPanel" Grid.Column="1" Orientation="Vertical" Visibility="Collapsed">
                  <TextBlock FontWeight="SemiBold" Text="{Binding UpdateAvailableTitle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}">
                    <Run Text="{Binding UpdateAvailableVersionTitle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    <Run Text="{Binding UpdateAvailableVersion, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  </TextBlock>
                </StackPanel>
              </Grid>
            </Button>
            <Grid Padding="0,0,4,0" VerticalAlignment="Center" ColumnSpacing="16" Visibility="{Binding IsUpdateAvailable, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityReConverter}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="PART_UpdateNotAvailableIconPresenter" Content="{TemplateBinding UpdateNotAvailableIcon}" Visibility="Collapsed" />
              <Border x:Name="PART_UpdateNotAvailableIconBorder" Width="20" Height="20" CornerRadius="10">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.0" Color="#6FB538" />
                    <GradientStop Offset="1.0" Color="#397A24" />
                  </LinearGradientBrush>
                </Border.Background>
                <FontIcon AutomationProperties.AccessibilityView="Raw" FontSize="11" Foreground="White" Glyph="" />
              </Border>
              <ContentPresenter x:Name="PART_UpdateNotAvailableTitlePresenter" Grid.Column="1" Content="{TemplateBinding UpdateNotAvailableTitle}" Visibility="Collapsed" />
              <StackPanel x:Name="PART_UpdateNotAvailableTitleStackPanel" Grid.Column="1" Visibility="Collapsed">
                <TextBlock FontWeight="SemiBold" Text="{Binding UpdateNotAvailableTitle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}">
                  <Run Text="{Binding LastUpdateCheckTitle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  <Run Text="{Binding LastUpdateCheckDate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                </TextBlock>
              </StackPanel>
            </Grid>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultClockStyle}" TargetType="local:Clock" />
  <Style BasedOn="{StaticResource DefaultClockRadioButtonStyle}" TargetType="local:ClockRadioButton" />
  <Style BasedOn="{StaticResource DefaultColorfulShimmingEffectStyle}" TargetType="local:ColorfulShimmingEffect" />
  <Style BasedOn="{StaticResource DefaultColorPaletteStyle}" TargetType="local:ColorPalette" />
  <Style x:Key="DefaultColorPaletteItemStyle" TargetType="local:ColorPaletteItem">
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template" Value="{StaticResource ColorPaletteRectangleTemplate}" />
  </Style>
  <ControlTemplate x:Key="ColorPaletteTabViewTemplate" TargetType="local:ColorPaletteItem">
    <Grid Padding="{TemplateBinding Padding}" AutomationProperties.Name="{TemplateBinding InternalColorName}" BorderBrush="{ThemeResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}">
      <Grid.RowDefinitions>
        <RowDefinition Height="16" />
        <RowDefinition Height="50" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <!--  Background  -->
      <Border Grid.RowSpan="2" Height="66" Background="{TemplateBinding ColorBrush}" CornerRadius="4,4,0,0" />
      <!--  Tab Bar  -->
      <StackPanel Orientation="Horizontal">
        <Border Width="4" Height="1" VerticalAlignment="Bottom" Background="{ThemeResource ControlElevationBorderBrush}" />
        <Border Width="32" Height="12" VerticalAlignment="Bottom" Background="{ThemeResource LayerOnMicaBaseAltFillColorDefault}" BorderBrush="{ThemeResource ControlElevationBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="4,4,0,0" />
        <Border Width="86" Height="1" VerticalAlignment="Bottom" Background="{ThemeResource ControlElevationBorderBrush}" />
      </StackPanel>
      <!--  File area  -->
      <Border Grid.Row="1" Height="50" VerticalAlignment="Bottom" Background="{ThemeResource LayerOnMicaBaseAltFillColorDefault}" BorderBrush="{ThemeResource ControlElevationBorderBrush}" BorderThickness="0,0,0,.5" />
      <TextBlock Grid.Row="2" Padding="4" HorizontalAlignment="Center" Text="{TemplateBinding InternalColorName}" TextTrimming="CharacterEllipsis" Visibility="{Binding ShowColorName, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="SliderThumbStyle" TargetType="Thumb">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{ThemeResource SliderThumbBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Border Margin="-2" Background="{ThemeResource SliderOuterThumbBackground}" BorderBrush="{ThemeResource SliderThumbBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{ThemeResource SliderThumbCornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <!--  0.86 is relative scale from 14px to 12px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0.86" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <!--  0.86 is relative scale from 14px to 12px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0.86" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <!--  1.167 is relative scale from 12px to 14px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="1.167" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <!--  1.167 is relative scale from 12px to 14px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="1.167" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <!--  0.71 is relative scale from 14px to 10px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="0.71" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <!--  0.71 is relative scale from 14px to 10px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="0.71" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <!--  1.167 is relative scale from 12px to 14px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="1.167" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SliderInnerThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <!--  1.167 is relative scale from 12px to 14px  -->
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="1.167" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="SliderInnerThumb" Width="{ThemeResource SliderInnerThumbWidth}" Height="{ThemeResource SliderInnerThumbHeight}" Fill="{TemplateBinding Background}" RenderTransformOrigin="0.5, 0.5">
              <Ellipse.RenderTransform>
                <CompositeTransform />
              </Ellipse.RenderTransform>
            </Ellipse>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComapreSliderHorizontalTemplate" TargetType="local:CompareSlider">
    <Grid Padding="16,0,16,0">
      <Grid HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
        <Border CornerRadius="{TemplateBinding CornerRadius}">
          <Image x:Name="PART_BeforeImage" HorizontalAlignment="Left" Source="{Binding SourceImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        </Border>
        <Border CornerRadius="{TemplateBinding CornerRadius}">
          <Rectangle x:Name="PART_Rectangle" HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Rectangle.Fill>
              <ImageBrush AlignmentX="Left" AlignmentY="Center" ImageSource="{Binding TargetImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="UniformToFill" />
            </Rectangle.Fill>
          </Rectangle>
        </Border>
        <Line x:Name="PART_Line" Stretch="Fill" Stroke="{ThemeResource ControlAAFillColorDefaultBrush}" StrokeDashArray="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="2" Style="{TemplateBinding LineStyle}" Visibility="{Binding ShowLineAndThumb, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" Y2="1" />
      </Grid>
      <Thumb x:Name="PART_Thumb" Width="18" Height="18" Style="{TemplateBinding ThumbStyle}" Visibility="{Binding ShowLineAndThumb, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="CompareSliderVerticalTemplate" TargetType="local:CompareSlider">
    <Grid Padding="0,16,0,16" HorizontalAlignment="Center" VerticalAlignment="Center">
      <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
        <Border CornerRadius="{TemplateBinding CornerRadius}">
          <Image x:Name="PART_BeforeImage" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding SourceImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        </Border>
        <Border CornerRadius="{TemplateBinding CornerRadius}">
          <Rectangle x:Name="PART_Rectangle" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Rectangle.Fill>
              <ImageBrush AlignmentX="Left" AlignmentY="Top" ImageSource="{Binding TargetImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="UniformToFill" />
            </Rectangle.Fill>
          </Rectangle>
        </Border>
        <Line x:Name="PART_Line" Stretch="Fill" Stroke="{ThemeResource ControlAAFillColorDefaultBrush}" StrokeDashArray="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="2" Style="{TemplateBinding LineStyle}" Visibility="{Binding ShowLineAndThumb, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" X2="1" />
      </Grid>
      <Thumb x:Name="PART_Thumb" Width="18" Height="18" Style="{TemplateBinding ThumbStyle}" Visibility="{Binding ShowLineAndThumb, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Grid>
  </ControlTemplate>
  <Style BasedOn="{StaticResource DefaultCompositionShadowStyle}" TargetType="local:CompositionShadow" />
  <SolidColorBrush x:Key="ContentDialogWindowCommandSpaceBackgroundBrush" Opacity="0.5" Color="{StaticResource ContentDialogWindowCommandSpaceBackground}" />
  <SolidColorBrush x:Key="ContentDialogWindowSeparatorBorderBrush" Color="{StaticResource ContentDialogWindowSeparatorBorderColor}" />
  <Style x:Key="DefaultContentDialogContentStyle" TargetType="local:ContentDialogContent">
    <Setter Property="Foreground" Value="{ThemeResource ContentDialogForeground}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="{ThemeResource ContentDialogBorderBrush}" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="PrimaryButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
    <Setter Property="SecondaryButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
    <Setter Property="CloseButtonStyle" Value="{ThemeResource DefaultButtonStyle}" />
    <Setter Property="CornerRadius" Value="0" />
    <Setter Property="MinWidth" Value="{StaticResource ContentDialogMinWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ContentDialogContent">
          <Border x:Name="BackgroundElement" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BackgroundSizing="InnerBorderEdge" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" FlowDirection="{TemplateBinding FlowDirection}" RequestedTheme="{TemplateBinding RequestedTheme}" TabFocusNavigation="Cycle">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DialogShowingStates">
                <VisualState x:Name="DialogHidden" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonsVisibilityStates">
                <VisualState x:Name="AllVisible">
                  <VisualState.Setters>
                    <Setter Target="FirstSpacer.Width" Value="{ThemeResource ContentDialogButtonSpacing}" />
                    <Setter Target="SecondaryColumn.Width" Value="*" />
                    <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NoneVisible">
                  <VisualState.Setters>
                    <Setter Target="CommandSpace.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.(Grid.Column)" Value="4" />
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.(Grid.Column)" Value="4" />
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndSecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.(Grid.Column)" Value="4" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DefaultButtonStates">
                <VisualState x:Name="NoDefaultButton" />
                <VisualState x:Name="PrimaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="CloseButton.Style" Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="DialogSpace">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid Background="{ThemeResource ContentDialogWindowTopOverlay}" BorderBrush="{ThemeResource ContentDialogWindowSeparatorBorderBrush}" BorderThickness="{StaticResource ContentDialogSeparatorThickness}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border x:Name="TitleArea" Grid.Row="0" HorizontalAlignment="Stretch" x:FieldModifier="private">
                  <ContentControl x:Name="Title" Margin="{StaticResource ContentDialogTitleMargin}" Padding="{StaticResource ContentDialogWindowTitlePadding}" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{TemplateBinding Title}" ContentTemplate="{TemplateBinding TitleTemplate}" FontFamily="{StaticResource ContentControlThemeFontFamily}" FontSize="20" FontWeight="SemiBold" Foreground="{TemplateBinding Foreground}" IsTabStop="True">
                    <ContentControl.Template>
                      <ControlTemplate TargetType="ContentControl">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" MaxLines="2" TextWrapping="Wrap" />
                      </ControlTemplate>
                    </ContentControl.Template>
                  </ContentControl>
                </Border>
                <ScrollViewer x:Name="ContentScrollViewer" Grid.Row="1" HorizontalScrollBarVisibility="Disabled" IsTabStop="False" VerticalScrollBarVisibility="Auto" ZoomMode="Disabled">
                  <ContentPresenter x:Name="ContentArea" Padding="{StaticResource ContentDialogWindowContentPadding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{StaticResource ContentControlThemeFontFamily}" FontSize="{StaticResource ControlContentThemeFontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="Wrap" />
                </ScrollViewer>
              </Grid>
              <Grid x:Name="CommandSpace" Grid.Row="1" Padding="{StaticResource ContentDialogPadding}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="{StaticResource ContentDialogWindowCommandSpaceBackgroundBrush}" XYFocusKeyboardNavigation="Enabled">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="PrimaryColumn" Width="*" />
                  <ColumnDefinition x:Name="FirstSpacer" Width="0" />
                  <ColumnDefinition x:Name="SecondaryColumn" Width="0" />
                  <ColumnDefinition x:Name="SecondSpacer" Width="{StaticResource ContentDialogButtonSpacing}" />
                  <ColumnDefinition x:Name="CloseColumn" Width="*" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PrimaryButton" HorizontalAlignment="Stretch" Content="{TemplateBinding PrimaryButtonText}" ElementSoundMode="FocusOnly" IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}" IsTabStop="True" Style="{TemplateBinding PrimaryButtonStyle}" ToolTipService.ToolTip="{TemplateBinding PrimaryButtonText}" />
                <Button x:Name="SecondaryButton" HorizontalAlignment="Stretch" Content="{TemplateBinding SecondaryButtonText}" ElementSoundMode="FocusOnly" IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}" IsTabStop="True" Style="{TemplateBinding SecondaryButtonStyle}" ToolTipService.ToolTip="{TemplateBinding SecondaryButtonText}" />
                <Button x:Name="CloseButton" Grid.Column="4" HorizontalAlignment="Stretch" Content="{TemplateBinding CloseButtonText}" ElementSoundMode="FocusOnly" IsTabStop="True" Style="{TemplateBinding CloseButtonStyle}" ToolTipService.ToolTip="{TemplateBinding CloseButtonText}">
                  <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Escape" />
                  </Button.KeyboardAccelerators>
                </Button>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultContentDialogContentStyle}" TargetType="local:ContentDialogContent" />
  <Style x:Key="DefaultCopyButtonStyle" TargetType="local:CopyButton">
    <Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Foreground" Value="{x:Null}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="AutomationProperties.Name" Value="Copy to clipboard" />
    <Setter Property="ToolTipService.ToolTip" Value="Copy to clipboard" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Padding="{TemplateBinding Padding}" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.Resources>
              <Storyboard x:Name="CopyToClipboardSuccessAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:1.433">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                  <SplineDoubleKeyFrame KeySpline="0.33,0.0 0.67,1.0" KeyTime="0:0:0.133" Value="0.0" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.3" Value="0.0" />
                  <SplineDoubleKeyFrame KeySpline="1.0,0.0 1.0,1.0" KeyTime="0:0:1.433" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CopyToClipboardTextScaleTransform" Storyboard.TargetProperty="(ScaleX)" Duration="0:0:1.2">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                  <SplineDoubleKeyFrame KeySpline="0.13,0.0 0.0,1.0" KeyTime="0:0:0.133" Value="0.273" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.167" Value="0.273" />
                  <LinearDoubleKeyFrame KeyTime="0:0:1.2" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CopyToClipboardTextScaleTransform" Storyboard.TargetProperty="(ScaleY)" Duration="0:0:1.2">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                  <SplineDoubleKeyFrame KeySpline="0.13,0.0 0.0,1.0" KeyTime="0:0:0.133" Value="0.273" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.167" Value="0.273" />
                  <LinearDoubleKeyFrame KeyTime="0:0:1.2" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CopySuccessGlyph" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:1.3">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.133" Value="0.0" />
                  <SplineDoubleKeyFrame KeySpline="0.33,0.0 0.67,1.0" KeyTime="0:0:0.267" Value="1.0" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.167" Value="1.0" />
                  <SplineDoubleKeyFrame KeySpline="1.0,0.0 0.98,1.0" KeyTime="0:0:1.3" Value="0.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CopyToClipboardSuccessTextScaleTransform" Storyboard.TargetProperty="(ScaleX)" Duration="0:0:0.333">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.133" Value="0.385" />
                  <SplineDoubleKeyFrame KeySpline="0.39,0.0 0.63,1.0" KeyTime="0:0:0.267" Value="1.146" />
                  <SplineDoubleKeyFrame KeySpline="0.55,0.0 0.02,1.0" KeyTime="0:0:0.333" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CopyToClipboardSuccessTextScaleTransform" Storyboard.TargetProperty="(ScaleY)" Duration="0:0:0.333">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.133" Value="0.385" />
                  <SplineDoubleKeyFrame KeySpline="0.39,0.0 0.63,1.0" KeyTime="0:0:0.267" Value="1.146" />
                  <SplineDoubleKeyFrame KeySpline="0.55,0.0 0.02,1.0" KeyTime="0:0:0.333" Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForegroundPointerOver}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CopySuccessGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForegroundPointerOver}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForegroundPressed}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CopySuccessGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForegroundPressed}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CopySuccessGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForeground}}" RenderTransformOrigin=".5,.5">
              <ContentPresenter.RenderTransform>
                <ScaleTransform x:Name="CopyToClipboardTextScaleTransform" />
              </ContentPresenter.RenderTransform>
            </ContentPresenter>
            <ContentPresenter x:Name="CopySuccessGlyph" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ButtonForeground}}" Opacity="0" RenderTransformOrigin=".5,.5">
              <ContentPresenter.RenderTransform>
                <ScaleTransform x:Name="CopyToClipboardSuccessTextScaleTransform" />
              </ContentPresenter.RenderTransform>
              <FontIcon FontSize="{TemplateBinding FontSize}" Glyph="" />
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultDateTimePickerStyle" TargetType="local:DateTimePicker">
    <Setter Property="Foreground" Value="{ThemeResource CalendarDatePickerTextForeground}" />
    <Setter Property="Background" Value="{ThemeResource CalendarDatePickerBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource CalendarDatePickerBorderThemeThickness}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="CalendarViewStyle" Value="{ThemeResource DefaultDevWinUICalendarViewStyle}" />
    <Setter Property="PlaceholderText" Value="select a DateTime" />
    <Setter Property="CalendarViewBorderThickness" Value="0" />
    <Setter Property="ConfirmButtonContent" Value="Confirm" />
    <Setter Property="ConfirmButtonStyle" Value="{StaticResource AccentButtonStyle}" />
    <Setter Property="ShowConfirmButton" Value="True" />
    <Setter Property="ShowAccentBorderOnHeader" Value="True" />
    <Setter Property="ClockMode" Value="AnalogClock" />
    <Setter Property="CalendarViewMargin" Value="0" />
    <Setter Property="TimePickerMargin" Value="5,5" />
    <Setter Property="ClockMargin" Value="0" />
    <Setter Property="ClockBorderThickness" Value="0,1,1,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DateTimePicker">
          <Grid x:Name="PART_Root">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="32" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="TopHeader" />
                <VisualState x:Name="LeftHeader">
                  <VisualState.Setters>
                    <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1" />
                    <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0" />
                    <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1" />
                    <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}" />
                    <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FlyoutBase.AttachedFlyout>
              <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                <Flyout.FlyoutPresenterStyle>
                  <Style TargetType="FlyoutPresenter">
                    <Setter Property="MaxHeight" Value="Infinity" />
                    <Setter Property="MaxWidth" Value="Infinity" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="IsDefaultShadowEnabled" Value="True" />
                    <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
                    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="FlyoutPresenter">
                          <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" />
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Flyout.FlyoutPresenterStyle>
                <Grid BorderBrush="{ThemeResource CalendarDatePickerBorderBrush}" BorderThickness="{TemplateBinding FlyoutBorderThickness}" CornerRadius="{ThemeResource ControlCornerRadius}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Button x:Name="PART_ConfirmButton" Grid.Row="1" HorizontalAlignment="Stretch" Content="{TemplateBinding ConfirmButtonContent}" CornerRadius="0,0,4,4" Style="{TemplateBinding ConfirmButtonStyle}" Visibility="{Binding ShowConfirmButton, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                  <local:CalendarWithClock x:Name="PART_CalendarWithClockView" Margin="{TemplateBinding CalendarViewMargin}" BorderThickness="{TemplateBinding Padding}" CalendarIdentifier="{TemplateBinding CalendarIdentifier}" CalendarViewBorderThickness="{TemplateBinding CalendarViewBorderThickness}" CalendarViewStyle="{TemplateBinding CalendarViewStyle}" ClockBorderThickness="{TemplateBinding ClockBorderThickness}" ClockMargin="{TemplateBinding ClockMargin}" ClockMode="{TemplateBinding ClockMode}" CornerRadius="0" DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}" DisplayMode="{TemplateBinding DisplayMode}" FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}" IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}" IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}" IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}" MaxDate="{TemplateBinding MaxDate}" MinDate="{TemplateBinding MinDate}" ShowAccentBorderOnHeader="{TemplateBinding ShowAccentBorderOnHeader}" TimePickerDisplayMode="{TemplateBinding TimePickerDisplayMode}" TimePickerMargin="{TemplateBinding TimePickerMargin}" />
                </Grid>
              </Flyout>
            </FlyoutBase.AttachedFlyout>
            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="{StaticResource CalendarDatePickerTopHeaderMargin}" VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" TextWrapping="Wrap" Visibility="Collapsed" />
            <Border x:Name="Background" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" MinHeight="32" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" />
            <TextBlock x:Name="DateText" Grid.Row="1" Grid.Column="1" Padding="12,0,0,2" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding PlaceholderText}" />
            <FontIcon x:Name="CalendarGlyph" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="12" Foreground="{ThemeResource CalendarDatePickerCalendarGlyphForeground}" Glyph="" />
            <ContentPresenter x:Name="DescriptionPresenter" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Load="False" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultDepthLayerViewStyle}" TargetType="local:DepthLayerView" />
  <Style x:Key="DefaultDividerStyle" TargetType="local:Divider">
    <Setter Property="Margin" Value="0,24" />
    <Setter Property="LineStroke" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Divider">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="PART_ColumnStart" Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition x:Name="PART_ColumnEnd" Width="*" />
            </Grid.ColumnDefinitions>
            <Line x:Name="PART_LeftLine" VerticalAlignment="Center" Stretch="Fill" Stroke="{TemplateBinding LineStroke}" StrokeDashArray="{Binding LineStrokeDashArray, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource LineDashStrokeArrayConverter}}" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="{TemplateBinding LineStrokeThickness}" X2="1" />
            <ContentPresenter x:Name="PART_Content" Grid.Column="1" Margin="{TemplateBinding ContentPadding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
            <Line x:Name="PART_RightLine" Grid.Column="2" VerticalAlignment="Center" Stretch="Fill" Stroke="{TemplateBinding LineStroke}" StrokeDashArray="{Binding LineStrokeDashArray, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource LineDashStrokeArrayConverter}}" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="{TemplateBinding LineStrokeThickness}" X2="1" />
            <Line x:Name="PART_StretchLine" Grid.ColumnSpan="3" HorizontalAlignment="Center" Stretch="Fill" Stroke="{TemplateBinding LineStroke}" StrokeDashArray="{Binding LineStrokeDashArray, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource LineDashStrokeArrayConverter}}" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="{TemplateBinding LineStrokeThickness}" Visibility="Collapsed" Y2="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultDropdownColorPickerStyle" TargetType="local:DropdownColorPicker">
    <Setter Property="Background" Value="Gray" />
    <Setter Property="Foreground" Value="LightGray" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="TintBoxCornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="TintBoxMargin" Value="0" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DropdownColorPicker">
          <Button Padding="{TemplateBinding Padding}">
            <StackPanel Orientation="Horizontal" Spacing="5">
              <Border Width="{TemplateBinding TintBoxWidth}" Height="{TemplateBinding TintBoxHeight}" Margin="{TemplateBinding TintBoxMargin}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding TintBoxCornerRadius}">
                <Grid>
                  <PathIcon Data="M0 6 L0 0 L6 0 L6 6 L12 6 L12 0 L18 0 L18 6 L12 6 L12 12 L18 12 L18 6 L24 6 L24 12 L18 12 L18 18 L24 18 L24 24 L6 24 L6 18 L0 18 L0 12 L6 12 L6 18 L12 18 L12 24 L18 24 L18 18 L12 18 L12 12 L6 12 L6 6 Z" Foreground="{TemplateBinding Foreground}" />
                  <Rectangle x:Name="PART_Rectangle" />
                </Grid>
              </Border>
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}" Text="{Binding Color, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding IsColorCodeVisible, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
              <AnimatedIcon Width="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                <animatedvisuals:AnimatedChevronDownSmallVisualSource />
                <AnimatedIcon.FallbackIconSource>
                  <FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="14" Glyph="" IsTextScaleFactorEnabled="False" />
                </AnimatedIcon.FallbackIconSource>
              </AnimatedIcon>
            </StackPanel>
            <Button.Flyout>
              <Flyout x:Name="PART_Flyout">
                <Grid>
                  <ColorPicker x:Name="PART_ColorPicker" ColorSpectrumShape="{TemplateBinding ColorSpectrumShape}" IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}" IsAlphaSliderVisible="{TemplateBinding IsAlphaSliderVisible}" IsAlphaTextInputVisible="{TemplateBinding IsAlphaTextInputVisible}" IsColorChannelTextInputVisible="{TemplateBinding IsColorChannelTextInputVisible}" IsColorPreviewVisible="{TemplateBinding IsColorPreviewVisible}" IsColorSliderVisible="{TemplateBinding IsColorSliderVisible}" IsColorSpectrumVisible="{TemplateBinding IsColorSpectrumVisible}" IsHexInputVisible="{TemplateBinding IsHexInputVisible}" IsMoreButtonVisible="{TemplateBinding IsMoreButtonVisible}" />
                  <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding ColorPalette}" />
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultFlipSideStyle}" TargetType="local:FlipSide" />
  <Style BasedOn="{StaticResource DefaultFlipToRevealStyle}" TargetType="local:FlipToReveal" />
  <Style x:Key="DefaultFlyoutMenuButtonStyle" TargetType="local:FlyoutMenuButton">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Width" Value="116" />
    <Setter Property="Height" Value="84" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FlyoutMenuButton">
          <Grid x:Name="RootGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BackgroundSizing="InnerBorderEdge" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlFillColorDefaultBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IconPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0.86" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IconPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFastAnimationDuration}" Value="0.86" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlFillColorDefaultBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" Margin="0,52,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Content="{TemplateBinding Content}" />
            <ContentPresenter x:Name="IconPresenter" Width="32" Margin="0,12,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Content="{TemplateBinding Icon}" RenderTransformOrigin="0.5, 0.5">
              <ContentPresenter.RenderTransform>
                <CompositeTransform />
              </ContentPresenter.RenderTransform>
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultForegroundFocusEffectsStyle}" TargetType="local:ForegroundFocusEffects" />
  <Style BasedOn="{StaticResource DefaultGifImageStyle}" TargetType="local:GifImage" />
  <Style x:Key="DefaultGotoTopStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="local:GotoTop">
    <Setter Property="Width" Value="50" />
    <Setter Property="Height" Value="50" />
    <Setter Property="CornerRadius" Value="90" />
    <Setter Property="ToolTipService.ToolTip" Value="Go To Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
            <ContentPresenter.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </ContentPresenter.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FontIcon Glyph="" />
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultGravatarStyle}" TargetType="local:Gravatar" />
  <Style x:Key="DefaultGrowlStyle" TargetType="local:Growl">
    <Setter Property="IsOpen" Value="True" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="Background" Value="{ThemeResource InfoBarInformationalSeverityBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Shadow">
      <Setter.Value>
        <ThemeShadow />
      </Setter.Value>
    </Setter>
    <Setter Property="Width" Value="{ThemeResource GrowlWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate x:Name="Root" TargetType="local:Growl">
          <Border x:Name="ContentRoot" VerticalAlignment="Top" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SeverityLevels">
                <VisualState x:Name="Informational" />
                <VisualState x:Name="Error">
                  <VisualState.Setters>
                    <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}" />
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarErrorIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Warning">
                  <VisualState.Setters>
                    <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarWarningSeverityBackgroundBrush}" />
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarWarningSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarWarningIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarWarningSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Success">
                  <VisualState.Setters>
                    <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarSuccessSeverityBackgroundBrush}" />
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarSuccessSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarSuccessIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarSuccessSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IconStates">
                <VisualState x:Name="StandardIconVisible">
                  <VisualState.Setters>
                    <Setter Target="UserIconBox.Visibility" Value="Collapsed" />
                    <Setter Target="StandardIconArea.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UserIconVisible">
                  <VisualState.Setters>
                    <Setter Target="UserIconBox.Visibility" Value="Visible" />
                    <Setter Target="StandardIconArea.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NoIconVisible" />
              </VisualStateGroup>
              <VisualStateGroup>
                <VisualState x:Name="CloseButtonVisible" />
                <VisualState x:Name="CloseButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="InfoBarVisibility">
                <VisualState x:Name="InfoBarVisible" />
                <VisualState x:Name="InfoBarCollapsed">
                  <VisualState.Setters>
                    <Setter Target="ContentRoot.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup>
                <VisualState x:Name="ForegroundNotSet" />
                <VisualState x:Name="ForegroundSet">
                  <VisualState.Setters>
                    <Setter Target="Title.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                    <Setter Target="Message.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Background is used here so that it overrides the severity status color if set.  -->
            <Grid MinHeight="{ThemeResource InfoBarMinHeight}" Padding="{StaticResource InfoBarContentRootPadding}" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <!--  Icon  -->
                <ColumnDefinition Width="*" />
                <!--  Title, message, and action  -->
                <ColumnDefinition Width="Auto" />
                <!--  Close button  -->
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid x:Name="StandardIconArea" Visibility="Collapsed">
                <TextBlock x:Name="IconBackground" Grid.Column="0" Margin="{StaticResource InfoBarIconMargin}" VerticalAlignment="Top" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="{StaticResource InfoBarIconFontSize}" Foreground="{ThemeResource InfoBarInformationalSeverityIconBackground}" Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                <TextBlock x:Name="StandardIcon" Grid.Column="0" Margin="{StaticResource InfoBarIconMargin}" VerticalAlignment="Top" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="{StaticResource InfoBarIconFontSize}" Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}" Text="{StaticResource InfoBarInformationalIconGlyph}" />
              </Grid>
              <Viewbox x:Name="UserIconBox" Grid.Column="0" MaxWidth="{ThemeResource InfoBarIconFontSize}" MaxHeight="{ThemeResource InfoBarIconFontSize}" Margin="{ThemeResource InfoBarIconMargin}" VerticalAlignment="Top" Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}" Visibility="Collapsed" />
              <InfoBarPanel Grid.Column="1" Margin="{StaticResource InfoBarPanelMargin}" HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}" VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
                <TextBlock x:Name="Title" FontSize="{StaticResource InfoBarTitleFontSize}" FontWeight="{StaticResource InfoBarTitleFontWeight}" Foreground="{ThemeResource InfoBarTitleForeground}" InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}" InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}" Text="{TemplateBinding Title}" TextWrapping="WrapWholeWords" />
                <TextBlock x:Name="Message" FontSize="{StaticResource InfoBarMessageFontSize}" FontWeight="{StaticResource InfoBarMessageFontWeight}" Foreground="{ThemeResource InfoBarMessageForeground}" InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}" InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}" Text="{TemplateBinding Message}" TextWrapping="WrapWholeWords" />
                <ContentPresenter VerticalAlignment="Top" Content="{TemplateBinding ActionButton}" InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}" InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
                  <ContentPresenter.Resources>
                    <Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
                      <Style.Setters>
                        <Setter Property="Margin" Value="{StaticResource InfoBarHyperlinkButtonMargin}" />
                        <Setter Property="Foreground" Value="{ThemeResource InfoBarHyperlinkButtonForeground}" />
                      </Style.Setters>
                    </Style>
                  </ContentPresenter.Resources>
                </ContentPresenter>
              </InfoBarPanel>
              <Grid Grid.Row="1" Grid.Column="1" Margin="{TemplateBinding RootGridMargin}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding ShowConfirmButton, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GridLengthConverter}}" />
                  <ColumnDefinition Width="{Binding ShowCloseButton, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GridLengthConverter}}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock x:Name="PART_DateTime" Grid.ColumnSpan="2" Margin="0,0,10,10" Style="{ThemeResource CaptionTextBlockStyle}" Text="{TemplateBinding DateTime}" Visibility="{TemplateBinding ShowDateTime}" />
                <ContentPresenter Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Content="{TemplateBinding Content}" />
                <Button x:Name="PART_ConfirmButton" Grid.Row="2" Margin="5,0" HorizontalAlignment="Stretch" Content="{TemplateBinding ConfirmButtonText}" Foreground="{ThemeResource SystemAccentColor}" Style="{StaticResource SubtleButtonStyle}" Visibility="{TemplateBinding ShowConfirmButton}" />
                <Button x:Name="PART_CloseButton" Grid.Row="2" Grid.Column="1" Margin="5,0" HorizontalAlignment="Stretch" Content="{TemplateBinding CloseButtonText}" Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}" Style="{StaticResource SubtleButtonStyle}" Visibility="{TemplateBinding ShowCloseButton}" />
              </Grid>
              <Button Name="CloseButton" Grid.Column="2" Margin="5,0,5,0" Command="{TemplateBinding CloseButtonCommand}" CommandParameter="{TemplateBinding CloseButtonCommandParameter}" CornerRadius="{ThemeResource ControlCornerRadius}" Style="{TemplateBinding CloseButtonStyle}">
                <Button.Resources>
                  <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                      <ResourceDictionary x:Key="Default">
                        <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground" />
                        <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver" />
                        <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed" />
                        <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled" />
                        <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground" />
                        <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver" />
                        <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed" />
                        <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled" />
                        <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush" />
                        <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver" />
                        <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed" />
                        <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled" />
                      </ResourceDictionary>
                      <ResourceDictionary x:Key="HighContrast">
                        <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground" />
                        <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver" />
                        <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed" />
                        <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled" />
                        <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground" />
                        <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver" />
                        <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed" />
                        <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled" />
                        <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush" />
                        <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver" />
                        <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed" />
                        <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled" />
                      </ResourceDictionary>
                      <ResourceDictionary x:Key="Light">
                        <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground" />
                        <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver" />
                        <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed" />
                        <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled" />
                        <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground" />
                        <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver" />
                        <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed" />
                        <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled" />
                        <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush" />
                        <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver" />
                        <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed" />
                        <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled" />
                      </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                  </ResourceDictionary>
                </Button.Resources>
                <Viewbox Width="{StaticResource InfoBarCloseButtonGlyphSize}" Height="{StaticResource InfoBarCloseButtonGlyphSize}" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <SymbolIcon Symbol="{StaticResource InfoBarCloseButtonSymbol}" />
                </Viewbox>
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate />
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultCarouselItemStyle}" TargetType="local:HeaderCarouselItem" />
  <Style BasedOn="{StaticResource DefaultImageExStyle}" TargetType="local:ImageEx" />
  <Style x:Key="DefaultIndeterminateProgressBarStyle" TargetType="local:IndeterminateProgressBar">
    <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
    <Setter Property="DotRadiusX" Value="8" />
    <Setter Property="DotRadiusY" Value="8" />
    <Setter Property="IsActive" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:IndeterminateProgressBar">
          <Grid x:Name="PART_RootGrid">
            <Grid.Resources>
              <Storyboard x:Key="RootStoryboard" AutoReverse="False" RepeatBehavior="Forever" Duration="00:00:04.4">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetName="TransDot1" Storyboard.TargetProperty="X">
                  <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.0" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="0.0" />
                  <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="0.0" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="0.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1" Storyboard.TargetName="TransDot2" Storyboard.TargetProperty="X">
                  <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="300.1" />
                  <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="500.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="800.1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetName="TransDot3" Storyboard.TargetProperty="X">
                  <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="300.1" />
                  <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="500.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="800.1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.3" Storyboard.TargetName="TransDot4" Storyboard.TargetProperty="X">
                  <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="300.1" />
                  <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="500.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="800.1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetName="TransDot5" Storyboard.TargetProperty="X">
                  <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="300.1" />
                  <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="500.1" />
                  <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="800.1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetName="Dot1" Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                  <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1" Storyboard.TargetName="Dot2" Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                  <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetName="Dot3" Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                  <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.3" Storyboard.TargetName="Dot4" Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                  <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetName="Dot5" Storyboard.TargetProperty="Opacity">
                  <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                  <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Rectangle x:Name="Dot1" Width="{TemplateBinding DotWidth}" Height="{TemplateBinding DotHeight}" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" RadiusX="{TemplateBinding DotRadiusX}" RadiusY="{TemplateBinding DotRadiusY}">
              <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TransDot1" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="Dot2" Width="{TemplateBinding DotWidth}" Height="{TemplateBinding DotHeight}" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" RadiusX="{TemplateBinding DotRadiusX}" RadiusY="{TemplateBinding DotRadiusY}">
              <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TransDot2" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="Dot3" Width="{TemplateBinding DotWidth}" Height="{TemplateBinding DotHeight}" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" RadiusX="{TemplateBinding DotRadiusX}" RadiusY="{TemplateBinding DotRadiusY}">
              <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TransDot3" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="Dot4" Width="{TemplateBinding DotWidth}" Height="{TemplateBinding DotHeight}" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" RadiusX="{TemplateBinding DotRadiusX}" RadiusY="{TemplateBinding DotRadiusY}">
              <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TransDot4" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="Dot5" Width="{TemplateBinding DotWidth}" Height="{TemplateBinding DotHeight}" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0" RadiusX="{TemplateBinding DotRadiusX}" RadiusY="{TemplateBinding DotRadiusY}">
              <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TransDot5" />
              </Rectangle.RenderTransform>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="local:InlineAutoCompleteTextBox" />
  <Style BasedOn="{StaticResource DefaultIsEnabledTextBlockStyle}" TargetType="local:IsEnabledTextBlock" />
  <Style x:Key="SecondaryIsEnabledTextBlockStyle" TargetType="local:IsEnabledTextBlock">
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
    <Setter Property="FontSize" Value="{StaticResource SecondaryTextFontSize}" />
  </Style>
  <Style BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual" />
  <Style x:Key="SmallTextKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="Height" Value="36" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Padding" Value="12,0,12,2" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="SmallOutlineTextKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
    <Setter Property="Height" Value="36" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Padding" Value="8,0,8,2" />
    <Setter Property="FontSize" Value="13" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="DefaultIconKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="56" />
    <Setter Property="MinHeight" Value="48" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="Padding" Value="16,8,16,8" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="SmallIconKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="Height" Value="36" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="SmallOutlineIconKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="Height" Value="36" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="FontSize" Value="9" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="OnlyTextKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinHeight" Value="12" />
    <Setter Property="MinWidth" Value="12" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="OnlyIconKeyVisualStyle" BasedOn="{StaticResource DefaultTextKeyVisualStyle}" TargetType="local:KeyVisual">
    <Setter Property="MinHeight" Value="10" />
    <Setter Property="MinWidth" Value="10" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Padding" Value="0,0,0,3" />
    <!--<Setter Property="FontSize" Value="9" />-->
    <Setter Property="HorizontalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource DefaultLayoutTransformerStyle}" TargetType="local:LayoutTransformer" />
  <Style BasedOn="{StaticResource DefaultLongShadowTextBlockStyle}" TargetType="local:LongShadowTextBlock" />
  <Style BasedOn="{StaticResource DefaultMagnifierStyle}" TargetType="local:Magnifier" />
  <Style x:Key="DefaultMessageBoxHeaderStyle" TargetType="local:MessageBoxHeader">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MessageBoxHeader">
          <Grid Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SeverityLevels">
                <VisualState x:Name="Informational" />
                <VisualState x:Name="Questional">
                  <VisualState.Setters>
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource MessageBoxHeaderQuestionalSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource MessageBoxHeaderQuestionalIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource MessageBoxHeaderQuestionalSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Error">
                  <VisualState.Setters>
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource MessageBoxHeaderErrorSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource MessageBoxHeaderErrorIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource MessageBoxHeaderErrorSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Warning">
                  <VisualState.Setters>
                    <Setter Target="IconBackground.Text" Value="{ThemeResource MessageBoxHeaderWarningBackgroundGlyph}" />
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource MessageBoxHeaderWarningSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource MessageBoxHeaderWarningIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource MessageBoxHeaderWarningSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Success">
                  <VisualState.Setters>
                    <Setter Target="IconBackground.Foreground" Value="{ThemeResource MessageBoxHeaderSuccessSeverityIconBackground}" />
                    <Setter Target="StandardIcon.Text" Value="{StaticResource MessageBoxHeaderSuccessIconGlyph}" />
                    <Setter Target="StandardIcon.Foreground" Value="{ThemeResource MessageBoxHeaderSuccessSeverityIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IconStates">
                <VisualState x:Name="StandardIconVisible">
                  <VisualState.Setters>
                    <Setter Target="StandardIconArea.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NoIconVisible" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="StandardIconArea" Grid.Column="0" VerticalAlignment="Center" Visibility="Collapsed">
              <TextBlock x:Name="IconBackground" Margin="{StaticResource MessageBoxHeaderIconMargin}" VerticalAlignment="Top" AutomationProperties.AccessibilityView="Raw" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="{StaticResource MessageBoxHeaderIconFontSize}" Foreground="{ThemeResource MessageBoxHeaderInformationalSeverityIconBackground}" Text="{StaticResource MessageBoxHeaderIconBackgroundGlyph}" />
              <TextBlock x:Name="StandardIcon" Margin="{StaticResource MessageBoxHeaderIconMargin}" VerticalAlignment="Top" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="{StaticResource MessageBoxHeaderIconFontSize}" Foreground="{ThemeResource MessageBoxHeaderInformationalSeverityIconForeground}" Text="{StaticResource MessageBoxHeaderInformationalIconGlyph}" />
            </Grid>
            <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="Wrap" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultOptionsPageControlStyle}" TargetType="local:OptionsPageControl" />
  <ControlTemplate x:Key="OutOfBoxLeftHeroImageTemplate" TargetType="local:OutOfBoxPage">
    <Grid Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="WideState">
            <VisualState.StateTriggers>
              <AdaptiveTrigger MinWindowWidth="480" />
            </VisualState.StateTriggers>
          </VisualState>
          <VisualState x:Name="NarrowState">
            <VisualState.StateTriggers>
              <AdaptiveTrigger MinWindowWidth="0" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
              <Setter Target="DescriptionPanel.(Grid.Row)" Value="1" />
              <Setter Target="DescriptionPanel.(Grid.Column)" Value="0" />
              <Setter Target="DescriptionPanel.(Grid.ColumnSpan)" Value="3" />
              <Setter Target="DescriptionPanel.Margin" Value="32,0" />
            </VisualState.Setters>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter x:Name="PART_TitlePresenter" Grid.Row="0" Grid.Column="0" Content="{TemplateBinding Title}" Visibility="Collapsed" />
      <TextBlock x:Name="PART_TitleTextBlock" Grid.Row="0" Grid.Column="0" Margin="32,24,32,0" AutomationProperties.HeadingLevel="Level1" Style="{StaticResource TitleTextBlockStyle}" Text="{Binding Title, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" />
      <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
        <Grid Padding="0,0,20,24" ChildrenTransitions="{StaticResource SettingsCardsAnimations}" RowSpacing="12">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid Grid.Row="0" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Column="2" VerticalAlignment="Top" Content="{TemplateBinding ActionContent}" />
            <ContentPresenter x:Name="PART_HeroImagePresenter" Grid.Column="0" Content="{TemplateBinding HeroImage}" Visibility="Collapsed" />
            <Border x:Name="PART_HeroImageBorder" Grid.Column="0" MaxWidth="160" Margin="32,24,16,24" HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="4" Visibility="Collapsed">
              <Image AutomationProperties.AccessibilityView="Raw">
                <Image.Source>
                  <BitmapImage UriSource="{Binding HeroImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                </Image.Source>
              </Image>
            </Border>
            <StackPanel x:Name="DescriptionPanel" Grid.Row="0" Grid.Column="1" Spacing="12">
              <ContentPresenter x:Name="PART_DescriptionPresenter" Content="{TemplateBinding Description}" Visibility="Collapsed" />
              <TextBlock x:Name="PART_DescriptionTextBlock" Margin="0,24,0,0" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextWrapping="Wrap" Visibility="Collapsed" />
              <ItemsControl Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" IsTabStop="False" ItemTemplate="{TemplateBinding PrimaryLinksItemTemplate}" ItemsPanel="{TemplateBinding PrimaryLinkItemsPanelTemplate}" ItemsSource="{TemplateBinding PrimaryLinks}" />
            </StackPanel>
          </Grid>
          <ContentPresenter Grid.Row="1" Margin="{TemplateBinding ContentMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Content}" />
          <StackPanel Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ContentPresenter x:Name="PART_SecondaryLinksHeaderPresenter" Content="{TemplateBinding SecondaryLinksHeader}" Visibility="Collapsed" />
            <TextBlock x:Name="PART_SecondaryLinksHeaderTextBlock" Margin="34,0,34,0" AutomationProperties.HeadingLevel="Level2" Style="{ThemeResource BodyStrongTextBlockStyle}" Text="{Binding SecondaryLinksHeader, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" />
            <ItemsControl Margin="{TemplateBinding SecondaryLinksMargin}" IsTabStop="False" ItemTemplate="{TemplateBinding SecondaryLinksItemTemplate}" ItemsPanel="{TemplateBinding SecondaryLinkItemsPanelTemplate}" ItemsSource="{TemplateBinding SecondaryLinks}" />
          </StackPanel>
        </Grid>
      </ScrollViewer>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="OutOfBoxTopHeroImageTemplate" TargetType="local:OutOfBoxPage">
    <Grid Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <ContentPresenter x:Name="PART_HeroImagePresenter" Content="{TemplateBinding HeroImage}" Visibility="Collapsed" />
      <Image x:Name="PART_HeroImageImage" Height="{TemplateBinding HeroImageHeight}" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding HeroImage, RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="UniformToFill" />
      <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
        <Grid Padding="0,0,20,24" ChildrenTransitions="{StaticResource SettingsCardsAnimations}" RowSpacing="12">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <ContentPresenter Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Content="{TemplateBinding ActionContent}" />
          <ContentPresenter x:Name="PART_TitlePresenter" Grid.Row="0" Grid.Column="0" Content="{TemplateBinding Title}" Visibility="Collapsed" />
          <TextBlock x:Name="PART_TitleTextBlock" Grid.Row="0" Grid.Column="0" Margin="32,24,32,0" AutomationProperties.HeadingLevel="Level1" Style="{StaticResource TitleTextBlockStyle}" Text="{Binding Title, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" />
          <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Spacing="5">
            <ContentPresenter x:Name="PART_DescriptionPresenter" Content="{TemplateBinding Description}" Visibility="Collapsed" />
            <TextBlock x:Name="PART_DescriptionTextBlock" Margin="32,0" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextWrapping="Wrap" Visibility="Collapsed" />
            <ItemsControl Margin="32,0" IsTabStop="False" ItemTemplate="{TemplateBinding PrimaryLinksItemTemplate}" ItemsPanel="{TemplateBinding PrimaryLinkItemsPanelTemplate}" ItemsSource="{TemplateBinding PrimaryLinks}" />
          </StackPanel>
          <ContentPresenter Grid.Row="2" Grid.ColumnSpan="2" Margin="{TemplateBinding ContentMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Content}" />
          <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
            <ContentPresenter x:Name="PART_SecondaryLinksHeaderPresenter" Content="{TemplateBinding SecondaryLinksHeader}" Visibility="Collapsed" />
            <TextBlock x:Name="PART_SecondaryLinksHeaderTextBlock" Margin="34,0,34,0" AutomationProperties.HeadingLevel="Level2" Style="{ThemeResource BodyStrongTextBlockStyle}" Text="{Binding SecondaryLinksHeader, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed" />
            <ItemsControl Margin="{TemplateBinding SecondaryLinksMargin}" IsTabStop="False" ItemTemplate="{TemplateBinding SecondaryLinksItemTemplate}" ItemsPanel="{TemplateBinding SecondaryLinkItemsPanelTemplate}" ItemsSource="{TemplateBinding SecondaryLinks}" />
          </StackPanel>
        </Grid>
      </ScrollViewer>
    </Grid>
  </ControlTemplate>
  <Style TargetType="local:OverviewPageHeader">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:OverviewPageHeader">
          <Grid x:Name="PART_RootGrid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="LayoutVisualStates">
                <VisualState x:Name="WideLayout" />
                <VisualState x:Name="NarrowLayout">
                  <VisualState.Setters>
                    <Setter Target="PART_ImageContentHolder.(Grid.Row)" Value="1" />
                    <Setter Target="PART_ImageContentHolder.(Grid.Column)" Value="0" />
                    <Setter Target="PART_ImageContentHolder.HorizontalAlignment" Value="Left" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel x:Name="PART_TextPanel" Padding="24,16,24,16" Orientation="Vertical">
              <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{TemplateBinding Title}" />
              <TextBlock MaxWidth="386" Margin="0,12,0,12" HorizontalAlignment="Left" Text="{TemplateBinding Description}" TextWrapping="Wrap" />
              <ContentPresenter Content="{TemplateBinding ActionContent}" />
            </StackPanel>
            <ContentPresenter x:Name="PART_ImageContentHolder" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Content="{TemplateBinding ImageContent}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultPerspectiveHostStyle}" TargetType="local:PerspectiveHost" />
  <Style BasedOn="{StaticResource DefaultPerspectiveZoomStyle}" TargetType="local:PerspectiveZoom" />
  <Style x:Key="PinBoxPasswordBoxStyle" BasedOn="{StaticResource DefaultPasswordBoxStyle}" TargetType="PasswordBox">
    <Setter Property="MinHeight" Value="{ThemeResource PinBoxMinHeight}" />
    <Setter Property="MinWidth" Value="{ThemeResource PinBoxMinWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="PasswordBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CompleteFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="2" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible" />
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BorderElement" MinHeight="{ThemeResource PinBoxMinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
            <ScrollViewer x:Name="ContentElement" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="Hidden" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="Hidden" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled" />
            <TextBlock x:Name="PlaceholderTextContentPresenter" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource TextControlPlaceholderForeground}" IsHitTestVisible="False" Text="{TemplateBinding PlaceholderText}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultProgressButtonStyle" TargetType="local:ProgressButton">
    <Setter Property="Background" Value="{ThemeResource ToggleButtonBackground}" />
    <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
    <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="ProgressBackground" Value="Transparent" />
    <Setter Property="ProgressForeground" Value="{ThemeResource ProgressForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ProgressButton">
          <Grid x:Name="PART_Grid" Background="{TemplateBinding ProgressBackground}" CornerRadius="{ThemeResource ControlCornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter.BackgroundTransition>
                <BrushTransition Duration="0:0:0.083" />
              </ContentPresenter.BackgroundTransition>
            </ContentPresenter>
            <ProgressRing x:Name="PART_ProgressRing" Width="{TemplateBinding ProgressRingSize}" Height="{TemplateBinding ProgressRingSize}" Margin="10,0" HorizontalAlignment="{TemplateBinding ProgressRingHorizontalAlignment}" IsIndeterminate="{TemplateBinding IsIndeterminateProgressRing}" Style="{TemplateBinding ProgressRingStyle}" Visibility="Collapsed" Value="{TemplateBinding Progress}" />
            <ProgressBar x:Name="PART_ProgressBar" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding ProgressBackground}" BorderBrush="Transparent" BorderThickness="0" CornerRadius="{ThemeResource ControlCornerRadius}" Foreground="{TemplateBinding ProgressForeground}" IsIndeterminate="{TemplateBinding IsIndeterminate}" ShowError="{TemplateBinding ShowError}" ShowPaused="{TemplateBinding ShowPaused}" Visibility="Collapsed" Value="{TemplateBinding Progress}" />
            <TextBlock x:Name="CheckedText" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{ThemeResource ToggleButtonForeground}" Text="{Binding CheckedContent, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AccentProgressButtonStyle" TargetType="local:ProgressButton">
    <Setter Property="Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
    <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
    <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushChecked}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="ProgressBackground" Value="Transparent" />
    <Setter Property="ProgressForeground" Value="#66FFFFFF" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ProgressButton">
          <Grid x:Name="PART_Grid" Background="{TemplateBinding ProgressBackground}" CornerRadius="{ThemeResource ControlCornerRadius}">
            <Grid.Resources>
              <SolidColorBrush x:Key="ProgressForeground" Color="#66FFFFFF" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushChecked}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressRing" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ProgressRingVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter.BackgroundTransition>
                <BrushTransition Duration="0:0:0.083" />
              </ContentPresenter.BackgroundTransition>
            </ContentPresenter>
            <ProgressRing x:Name="PART_ProgressRing" Width="{TemplateBinding ProgressRingSize}" Height="{TemplateBinding ProgressRingSize}" Margin="10,0" HorizontalAlignment="{TemplateBinding ProgressRingHorizontalAlignment}" Background="LightGray" IsIndeterminate="{TemplateBinding IsIndeterminateProgressRing}" Style="{TemplateBinding ProgressRingStyle}" Visibility="Collapsed" Value="{TemplateBinding Progress}" />
            <ProgressBar x:Name="PART_ProgressBar" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding ProgressBackground}" BorderBrush="Transparent" BorderThickness="0" CornerRadius="{ThemeResource ControlCornerRadius}" Foreground="{TemplateBinding ProgressForeground}" IsIndeterminate="{TemplateBinding IsIndeterminate}" ShowError="{TemplateBinding ShowError}" ShowPaused="{TemplateBinding ShowPaused}" Visibility="Collapsed" Value="{TemplateBinding Progress}" />
            <TextBlock x:Name="CheckedText" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{ThemeResource ToggleButtonForegroundChecked}" Text="{Binding CheckedContent, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultProgressRingStyle" TargetType="local:ProgressRing">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource AccentAAFillColorDefaultBrush}" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Width" Value="50" />
    <Setter Property="Height" Value="50" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="IsActive" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ProgressRing">
          <Border x:Name="ProgressRingRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style x:Key="ProgressRingEllipseStyle" TargetType="Ellipse">
                <Setter Property="Opacity" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
              </Style>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SixthCircle" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ring" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="E1" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.167" Storyboard.TargetName="E2" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.334" Storyboard.TargetName="E3" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.501" Storyboard.TargetName="E4" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.668" Storyboard.TargetName="E5" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.835" Storyboard.TargetName="E6" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="E1R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-110" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="10" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="205" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="357" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="439" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="585" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.167" Storyboard.TargetName="E2R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-116" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="4" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="87" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="199" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="351" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="433" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="579" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.334" Storyboard.TargetName="E3R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-122" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-2" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="81" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="193" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="345" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="427" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="573" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.501" Storyboard.TargetName="E4R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-128" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-8" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="75" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="187" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="339" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="421" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="567" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.668" Storyboard.TargetName="E5R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-134" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-14" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="69" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="181" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="331" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="415" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="561" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.835" Storyboard.TargetName="E6R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-140" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-20" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="63" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="175" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="325" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="409" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="555" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Ring" MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MaxSideLength}" MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MaxSideLength}" Background="{TemplateBinding Background}" FlowDirection="LeftToRight" RenderTransformOrigin=".5,.5" Visibility="Collapsed">
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E1R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E2R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E2" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E3R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E3" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E4R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E4" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E5R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E5" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas x:Name="SixthCircle" RenderTransformOrigin=".5,.5" Visibility="Collapsed">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E6R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E6" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultRedirectVisualViewStyle}" TargetType="local:RedirectVisualView" />
  <Style BasedOn="{StaticResource DefaultSelectableTextBlockStyle}" TargetType="local:SelectableTextBlock" />
  <local:SelectorBarSegmentedMarginConverter x:Name="MarginConverter" LeftItemMargin="{StaticResource SelectorBarLeftItemHoverMargin}" MiddleItemMargin="{StaticResource SelectorBarMiddleItemHoverMargin}" RightItemMargin="{StaticResource SelectorBarRightItemHoverMargin}" />
  <local:SelectorBarSegmentedMarginConverter x:Name="VerticalMarginConverter" LeftItemMargin="{StaticResource SelectorBarLeftItemHoverVerticalMargin}" MiddleItemMargin="{StaticResource SelectorBarMiddleItemHoverVerticalMargin}" RightItemMargin="{StaticResource SelectorBarRightItemHoverVerticalMargin}" />
  <Style BasedOn="{StaticResource DefaultSelectorBarSegmentedStyle}" TargetType="local:SelectorBarSegmented" />
  <Style x:Key="SelectorBarItemBaseStyle" TargetType="SelectorBarItem">
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Foreground" Value="{ThemeResource SelectorBarItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource SelectorBarSegmentedItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource SelectorBarItemBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource SelectorBarSegmentedItemPadding}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="FocusVisualMargin" Value="{ThemeResource SelectorBarItemFocusVisualMargin}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
  </Style>
  <Style x:Key="SelectorBarItemHorizontalStyle" BasedOn="{StaticResource SelectorBarItemBaseStyle}" TargetType="SelectorBarItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SelectorBarItem">
          <Grid x:Name="PART_ContainerRoot" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ColumnDefinitions="Auto, *" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" RowDefinitions="Auto, Auto">
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CombinedStates">
                <VisualState x:Name="UnselectedNormal" />
                <VisualState x:Name="UnselectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UnselectedPressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{ThemeResource ComboBoxItemScaleAnimationDuration}" Value="0.96" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{ThemeResource ComboBoxItemScaleAnimationDuration}" Value="0.96" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="4" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="4" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemDisabledPillFill}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Placeholder for Child UIElement  -->
            <StackPanel Grid.Column="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Spacing="{ThemeResource SelectorBarItemSpacing}">
              <ContentPresenter x:Name="PART_IconVisual" Margin="{ThemeResource SelectorBarItemIconVisualMargin}" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                  <ScaleTransform x:Name="IconTransform" ScaleX="{ThemeResource SelectorBarItemIconScale}" ScaleY="{ThemeResource SelectorBarItemIconScale}" />
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <TextBlock x:Name="PART_TextVisual" Margin="{ThemeResource SelectorBarItemTextVisualMargin}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="Wrap" />
            </StackPanel>
            <Rectangle x:Name="PART_SelectionVisual" Grid.Row="1" Grid.ColumnSpan="2" Margin="{ThemeResource SelectorBarItemSelectionVisualMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Opacity="0" RadiusX="0.5" RadiusY="1" Style="{StaticResource SelectorBarItemPill}">
              <Rectangle.RenderTransform>
                <CompositeTransform x:Name="PillTransform" ScaleX="1" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="PART_CommonVisual" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{ThemeResource SelectorBarItemBackground}" IsHitTestVisible="False" RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" Stroke="{ThemeResource SelectorBarItemBorderBrush}" StrokeThickness="{ThemeResource SelectorBarSelectedInnerThickness}" />
            <Border x:Name="PART_Hover" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MarginConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" CornerRadius="2" RenderTransformOrigin="0.5, 0.5">
              <Border.BackgroundTransition>
                <BrushTransition Duration="0:0:0.083" />
              </Border.BackgroundTransition>
              <Border.RenderTransform>
                <CompositeTransform />
              </Border.RenderTransform>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SelectorBarItemVerticalStyle" BasedOn="{StaticResource SelectorBarItemBaseStyle}" TargetType="SelectorBarItem">
    <Setter Property="Padding" Value="{StaticResource SelectorBarSegmentedItemVerticalPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SelectorBarItem">
          <Grid x:Name="PART_ContainerRoot" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ColumnDefinitions="Auto, Auto" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" RowDefinitions="Auto, Auto">
            <Grid.BackgroundTransition>
              <BrushTransition Duration="0:0:0.083" />
            </Grid.BackgroundTransition>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CombinedStates">
                <VisualState x:Name="UnselectedNormal" />
                <VisualState x:Name="UnselectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UnselectedPressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{ThemeResource ComboBoxItemScaleAnimationDuration}" Value="0.96" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{ThemeResource ComboBoxItemScaleAnimationDuration}" Value="0.96" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="4" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="4" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBackgroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarSegmentedItemBorderBrushSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="PART_ContainerRoot" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="{StaticResource ComboBoxItemScaleAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContainerRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_IconVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TextVisual" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_SelectionVisual" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectorBarItemDisabledPillFill}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Placeholder for Child UIElement  -->
            <StackPanel Grid.RowSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Spacing="{ThemeResource SelectorBarItemSpacing}">
              <ContentPresenter x:Name="PART_IconVisual" Margin="{ThemeResource SelectorBarItemIconVisualMargin}" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                  <ScaleTransform x:Name="IconTransform" ScaleX="{ThemeResource SelectorBarItemIconScale}" ScaleY="{ThemeResource SelectorBarItemIconScale}" />
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <TextBlock x:Name="PART_TextVisual" Margin="{ThemeResource SelectorBarItemTextVisualMargin}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="Wrap" />
            </StackPanel>
            <Rectangle x:Name="PART_SelectionVisual" Grid.RowSpan="2" Margin="{ThemeResource SelectorBarItemSelectionVisualMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False" Opacity="0" RadiusX="1" RadiusY="0.5" Style="{StaticResource SelectorBarItemPill}">
              <Rectangle.RenderTransform>
                <CompositeTransform x:Name="PillTransform" ScaleY="1" />
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="PART_CommonVisual" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{ThemeResource SelectorBarItemBackground}" IsHitTestVisible="False" RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" Stroke="{ThemeResource SelectorBarItemBorderBrush}" StrokeThickness="{ThemeResource SelectorBarSelectedInnerThickness}" />
            <Border x:Name="PART_Hover" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource VerticalMarginConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" CornerRadius="2" RenderTransformOrigin="0.5, 0.5">
              <Border.BackgroundTransition>
                <BrushTransition Duration="0:0:0.083" />
              </Border.BackgroundTransition>
              <Border.RenderTransform>
                <CompositeTransform />
              </Border.RenderTransform>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <local:TextBlockTemplateSelector x:Key="HeaderTemplateSelector" TextBlockTemplate="{StaticResource HeaderTextBlockTemplate}" />
  <local:TextBlockTemplateSelector x:Key="DescriptionTemplateSelector" TextBlockTemplate="{StaticResource DescriptionTextBlockTemplate}" />
  <Style x:Key="DefaultSettingsGroupStyle" TargetType="local:SettingsGroup">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:SettingsGroup">
          <Grid HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="PART_HeaderPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                    <Setter Target="PART_DescriptionPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_RootGrid" Grid.Row="0" MinHeight="{ThemeResource SettingsCardMinHeight}" Padding="{ThemeResource SettingsCardPadding}" Background="{ThemeResource SettingsCardBackground}" BackgroundSizing="InnerBorderEdge" BorderBrush="{ThemeResource SettingsCardBorderBrush}" BorderThickness="{ThemeResource SettingsCardBorderThickness}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Viewbox x:Name="PART_HeaderIconPresenterHolder" Grid.Row="0" MaxWidth="32" MaxHeight="32" Margin="10,10,0,5" HorizontalAlignment="Left">
                <ContentPresenter x:Name="PART_HeaderIconPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding HeaderIcon}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" HighContrastAdjustment="None" />
              </Viewbox>
              <ContentPresenter x:Name="PART_HeaderPresenter" Grid.Row="1" Margin="10,10,0,0" Content="{TemplateBinding Header}" ContentTemplateSelector="{StaticResource HeaderTemplateSelector}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" HighContrastAdjustment="None" TextWrapping="Wrap" />
              <ContentPresenter x:Name="PART_DescriptionPresenter" Grid.Row="2" Margin="10,12,0,10" Content="{TemplateBinding Description}" ContentTemplateSelector="{StaticResource DescriptionTemplateSelector}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" Foreground="{ThemeResource TextFillColorSecondaryBrush}" TextWrapping="WrapWholeWords">
                <ContentPresenter.Resources>
                  <Style BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                    <Style.Setters>
                      <Setter Property="TextWrapping" Value="WrapWholeWords" />
                    </Style.Setters>
                  </Style>
                  <Style BasedOn="{StaticResource TextButtonStyle}" TargetType="HyperlinkButton">
                    <Style.Setters>
                      <Setter Property="Padding" Value="0,0,0,0" />
                    </Style.Setters>
                  </Style>
                </ContentPresenter.Resources>
              </ContentPresenter>
              <ContentPresenter x:Name="PART_ContentPresenter" Grid.Row="3" Margin="10,20,0,10" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" />
            </Grid>
            <ItemsRepeater x:Name="PART_ItemsRepeater" Grid.Row="1" TabFocusNavigation="Local">
              <ItemsRepeater.Layout>
                <StackLayout Orientation="Vertical" />
              </ItemsRepeater.Layout>
            </ItemsRepeater>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultShieldStyle" TargetType="local:Shield">
    <Setter Property="BorderBrush" Value="{ThemeResource ShieldBorderBrush}" />
    <Setter Property="Height" Value="20" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorDefault}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Color" Value="{ThemeResource AccentAAFillColorTertiaryBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Shield">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="#555" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusSplitConverter}, ConverterParameter='1,0,0,1'}">
              <ContentPresenter Margin="4,0" VerticalAlignment="Center" Content="{TemplateBinding Subject}" Foreground="{TemplateBinding Foreground}" />
            </Border>
            <Border Grid.Column="1" Background="{TemplateBinding Color}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusSplitConverter}, ConverterParameter='0,1,1,0'}">
              <ContentPresenter Margin="4,0" VerticalAlignment="Center" Content="{TemplateBinding Status}" Foreground="{TemplateBinding Foreground}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultShimmerStyle}" TargetType="local:Shimmer" />
  <Style BasedOn="{StaticResource DefaultShimmerTextBlockStyle}" TargetType="local:ShimmerTextBlock" />
  <Style BasedOn="{StaticResource DefaultShortcutStyle}" TargetType="local:Shortcut" />
  <Style BasedOn="{StaticResource DefaultShortcutPreview}" TargetType="local:ShortcutPreview" />
  <Style BasedOn="{StaticResource DefaultShortcutWithTextLabel}" TargetType="local:ShortcutWithTextLabel" />
  <Style BasedOn="{StaticResource DefaultShyHeaderStyle}" TargetType="local:ShyHeader" />
  <Style x:Key="DefaultSimpleSettingsGroupStyle" TargetType="local:SimpleSettingsGroup">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel ChildrenTransitions="{StaticResource SettingsCardsAnimations}" Orientation="Vertical" Spacing="2" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:SimpleSettingsGroup">
          <Grid HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                    <Setter Target="DescriptionPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <TextBlock x:Name="HeaderPresenter" Grid.Row="0" Margin="1,32,0,0" AutomationProperties.HeadingLevel="Level2" Style="{ThemeResource BodyStrongTextBlockStyle}" Text="{TemplateBinding Header}" />
            <ContentPresenter x:Name="DescriptionPresenter" Grid.Row="1" Margin="1,0,0,0" Content="{TemplateBinding Description}" Foreground="{ThemeResource TextFillColorSecondaryBrush}" TextWrapping="WrapWholeWords">
              <ContentPresenter.Resources>
                <Style BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                  <Style.Setters>
                    <Setter Property="TextWrapping" Value="WrapWholeWords" />
                  </Style.Setters>
                </Style>
                <Style BasedOn="{StaticResource TextButtonStyle}" TargetType="HyperlinkButton">
                  <Style.Setters>
                    <Setter Property="Padding" Value="0,0,0,0" />
                  </Style.Setters>
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
            <ItemsPresenter Grid.Row="2" Margin="0,8,0,0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultSplitCircleStyle" TargetType="local:SplitCircle">
    <Setter Property="FirstColor" Value="{ThemeResource SystemFillColorSuccess}" />
    <Setter Property="SecondColor" Value="{ThemeResource SystemFillColorCritical}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:SplitCircle">
          <Viewbox Stretch="Fill">
            <Border Padding="{TemplateBinding Padding}">
              <Canvas Width="100" Height="100">
                <!--  First Half  -->
                <Path x:Name="FirstHalf" Fill="{TemplateBinding FirstColorBrush}">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure x:Name="PART_FirstFigure" IsClosed="True" StartPoint="50,0">
                        <ArcSegment x:Name="PART_FirstArc" IsLargeArc="True" Point="50,100" Size="50,50" SweepDirection="Clockwise" />
                        <LineSegment Point="50,50" />
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
                <Border Width="100" Height="100" Background="{ThemeResource LayerOnMicaBaseAltFillColorDefault}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Canvas.ZIndex="0" CornerRadius="360" Visibility="{Binding ShowMicaLayer, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                <!--  Second Half  -->
                <Path x:Name="SecondHalf" Fill="{TemplateBinding SecondColorBrush}">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure x:Name="PART_SecondFigure" IsClosed="True" StartPoint="50,0">
                        <ArcSegment x:Name="PART_SecondArc" IsLargeArc="True" Point="50,100" Size="50,50" SweepDirection="Counterclockwise" />
                        <LineSegment Point="50,50" />
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
              </Canvas>
            </Border>
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="StepBarItemHorizontalStyle" TargetType="local:StepBarItem">
    <Setter Property="Margin" Value="10,0" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="Background" Value="{ThemeResource ControlSolidFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource StepBarItemInActiveBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:StepBarItem">
          <StackPanel x:Name="PART_Panel">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ProgressStates">
                <!--  Waiting  -->
                <VisualState x:Name="Waiting">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemInActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Info  -->
                <VisualState x:Name="Info">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Warning  -->
                <VisualState x:Name="Warning">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Error  -->
                <VisualState x:Name="Error">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Success  -->
                <VisualState x:Name="Success">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="PART_Border" Height="40" MinWidth="40" HorizontalAlignment="Center" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="90">
              <Grid>
                <Border Visibility="{Binding ShowStepIcon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityReConverter}}">
                  <TextBlock x:Name="PART_Number" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource TextFillColorPrimaryBrush}" Style="{StaticResource BaseTextBlockStyle}" Text="{Binding Index, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding ShowStepIndex, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Border>
                <IconSourceElement x:Name="PART_Icon" Foreground="{ThemeResource TextFillColorPrimaryBrush}" IconSource="{TemplateBinding Icon}" Visibility="{Binding ShowStepIcon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="PART_Content" Margin="0,5,0,0" HorizontalAlignment="Center" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{ThemeResource TextFillColorPrimaryBrush}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="StepBarItemVerticalStyle" TargetType="local:StepBarItem">
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="Background" Value="{ThemeResource ControlSolidFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource StepBarItemInActiveBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:StepBarItem">
          <StackPanel Orientation="Horizontal">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ProgressStates">
                <!--  Waiting  -->
                <VisualState x:Name="Waiting">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemInActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Info  -->
                <VisualState x:Name="Info">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource StepBarItemActiveBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Warning  -->
                <VisualState x:Name="Warning">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCautionBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Error  -->
                <VisualState x:Name="Error">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorCriticalBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <!--  Success  -->
                <VisualState x:Name="Success">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Number" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Icon" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="PART_Border" Height="40" MinWidth="40" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="90">
              <Grid>
                <Border Visibility="{Binding ShowStepIcon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityReConverter}}">
                  <TextBlock x:Name="PART_Number" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight" Foreground="{ThemeResource TextFillColorPrimaryBrush}" Style="{StaticResource BaseTextBlockStyle}" Text="{Binding Index, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding ShowStepIndex, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Border>
                <IconSourceElement x:Name="PART_Icon" Foreground="{ThemeResource TextFillColorPrimaryBrush}" IconSource="{TemplateBinding Icon}" Visibility="{Binding ShowStepIcon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="PART_Content" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{ThemeResource TextFillColorPrimaryBrush}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultStorageBarStyle}" TargetType="local:StorageBar" />
  <Style BasedOn="{StaticResource DefaultStorageRingStyle}" TargetType="local:StorageRing" />
  <Style x:Key="DefaultDevWinUITextBoxStyle" TargetType="local:TextBox">
    <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
    <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
    <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
    <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
    <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
    <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
    <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}" />
    <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextBox">
          <Grid>
            <Grid.Resources>
              <Style BasedOn="{StaticResource TextBoxButtonStyle}" TargetType="Button" />
              <Style x:Name="DeleteButtonStyle" TargetType="Button">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid x:Name="ButtonLayoutGrid" Margin="{ThemeResource TextBoxInnerButtonMargin}" Background="{ThemeResource TextControlButtonBackground}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="GlyphElement" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="{ThemeResource TextBoxIconFontSize}" FontStyle="Normal" Foreground="{ThemeResource TextControlButtonForeground}" Text="" />
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="{ThemeResource TextBoxTopHeaderMargin}" VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" TextWrapping="Wrap" Visibility="Collapsed" />
            <Border x:Name="BorderElement" Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" />
            <ScrollViewer x:Name="ContentElement" Grid.Row="1" Grid.Column="0" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled" />
            <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Text="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" />
            <Grid Grid.Row="1" Grid.Column="1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Name="DeleteButton" Grid.Column="0" Width="30" Padding="{ThemeResource HelperButtonThemePadding}" VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" />
              <ContentPresenter x:Name="ContentContentPresenter" Grid.Column="1" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
            </Grid>
            <ContentPresenter x:Name="DescriptionPresenter" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Load="False" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ValidatingTextBoxStyle" TargetType="TextBox">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid>
            <Grid.Resources>
              <Style x:Name="DeleteButtonStyle" TargetType="Button">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid x:Name="ButtonLayoutGrid" Margin="{ThemeResource TextBoxInnerButtonMargin}" contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}" contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" Background="{ThemeResource TextControlButtonBackground}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="GlyphElement" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="{ThemeResource TextBoxIconFontSize}" FontStyle="Normal" Foreground="{ThemeResource TextControlButtonForeground}" Text="" />
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <contract5NotPresent:DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                      <contract5Present:DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <contract5NotPresent:DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
                      <contract5Present:DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <contract5NotPresent:DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                      <contract5Present:DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="NoValidation" />
                <VisualState x:Name="ValidationEnabled">
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Path=(local:Validation.ValidationProvider), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CanValidateConverter}}" />
                  </VisualState.StateTriggers>
                  <VisualState.Setters>
                    <Setter Target="ErrorsRepeater.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="{ThemeResource TextBoxTopHeaderMargin}" VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" TextWrapping="Wrap" Visibility="Collapsed" />
            <Border x:Name="BorderElement" Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" />
            <ScrollViewer x:Name="ContentElement" Grid.Row="1" Grid.Column="0" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled" />
            <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" contract5NotPresent:Foreground="{ThemeResource TextControlPlaceholderForeground}" contract5Present:Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Text="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" />
            <Button x:Name="DeleteButton" Grid.Row="1" Grid.Column="1" Width="30" Padding="{ThemeResource HelperButtonThemePadding}" VerticalAlignment="Stretch" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" />
            <contract7Present:ContentPresenter x:Name="DescriptionPresenter" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Load="False" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
            <ItemsRepeater x:Name="ErrorsRepeater" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" x:Load="False" ItemTemplate="{Binding Path=(local:Validation.ErrorTemplate), RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Path=(local:Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultWaveProgressBarStyle" TargetType="local:WaveProgressBar">
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
    <Setter Property="WaveFill" Value="{ThemeResource AccentAAFillColorDefaultBrush}" />
    <Setter Property="Background" Value="{ThemeResource WaveProgressBarBackground}" />
    <Setter Property="WaveStroke" Value="{ThemeResource AccentAAFillColorSecondaryBrush}" />
    <Setter Property="Width" Value="100" />
    <Setter Property="WaveThickness" Value="2" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{ThemeResource WaveProgressBarBorderBrush}" />
    <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource WaveProgressBarValueToPercentConverter}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:WaveProgressBar">
          <StackPanel>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Wave" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-400" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Windows10version1809:CornerRadius="90,90,90,90" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Viewbox>
                <Border x:Name="PART_Clip" Width="200" Height="200" Windows10version1809:CornerRadius="100,100,100,100">
                  <Path x:Name="PART_Wave" Width="600" Height="250" Margin="0,0,-400,-20" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{TemplateBinding WaveFill}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{TemplateBinding WaveStroke}" StrokeThickness="{TemplateBinding WaveThickness}" UseLayoutRounding="False">
                    <Path.Data>
                      <PathGeometry>
                        <PathFigure StartPoint="0,1">
                          <PolyBezierSegment Points="0.5,1 0.5,0 1,0" />
                          <PolyBezierSegment Points="1.5,0 1.5,1 2,1" />
                          <PolyBezierSegment Points="2.5,1 2.5,0 3,0" />
                          <PolyLineSegment Points="3,0 3,10, 0,10 0,1" />
                        </PathFigure>
                      </PathGeometry>
                    </Path.Data>
                  </Path>
                </Border>
              </Viewbox>
            </Border>
            <TextBlock Margin="0,10,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource WaveProgressBarValueToPercentConverter}}" Visibility="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultBubbleButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="local:BubbleButton">
    <Setter Property="BubbleForeground" Value="{ThemeResource ButtonBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:BubbleButton">
          <Grid x:Name="RootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters />
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BubbleView" Storyboard.TargetProperty="IsBubbing" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <local:BubbleView x:Name="BubbleView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="{TemplateBinding BubbleForeground}" />
            <Grid x:Name="ContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" local:VisualAttach.IsBindCenterPoint="True">
              <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}">
                <ContentPresenter.BackgroundTransition>
                  <BrushTransition Duration="0:0:0.083" />
                </ContentPresenter.BackgroundTransition>
              </ContentPresenter>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultBubbleProgressButtonStyle" TargetType="local:BubbleProgressButton">
    <Setter Property="Background" Value="{ThemeResource ControlFillColorTransparentBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BubbleForeground" Value="{ThemeResource AccentAAFillColorDefaultBrush}" />
    <Setter Property="ProgressForeground" Value="{ThemeResource AccentAAFillColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="20" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Width" Value="50" />
    <Setter Property="Maximum" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:BubbleProgressButton">
          <Grid x:Name="RootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentControl.Opacity" Value="0.8" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentControl.Opacity" Value="0.6" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Opacity" Value="0.6" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ProgressStates">
                <VisualState x:Name="Idle" />
                <VisualState x:Name="InProgress" />
                <VisualState x:Name="Completed">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="Transparent" />
                    <Setter Target="ContentControl.Foreground" Value="{ThemeResource TextFillColorInverseBrush}" />
                    <Setter Target="CompletedElement.Visibility" Value="Visible" />
                    <Setter Target="BubbleView.IsBubbing" Value="{Binding IsBubbing, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Faulted" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="Animation">
                <VisualState x:Name="Hidden">
                  <VisualState.Setters>
                    <Setter Target="CompletedElement.Opacity" Value="0" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation EnableDependentAnimation="True" Storyboard.TargetName="CompletedElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Visible">
                  <VisualState.Setters>
                    <Setter Target="CompletedElement.Opacity" Value="1" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation EnableDependentAnimation="True" Storyboard.TargetName="CompletedElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.6" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <local:BubbleView x:Name="BubbleView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="{TemplateBinding BubbleForeground}" />
            <ContentControl x:Name="CompletedElement" Template="{StaticResource CompletedTemplate}" Visibility="Collapsed" />
            <Border x:Name="RootBorder" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="100">
              <ContentControl x:Name="ContentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" />
            </Border>
            <ProgressRing x:Name="PressProgressBar" Width="{Binding ElementName=RootBorder, Path=Width}" Height="{Binding ElementName=RootBorder, Path=Height}" Background="Transparent" Foreground="{TemplateBinding ProgressForeground}" IsIndeterminate="False" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Value="{TemplateBinding Value}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultBubbleViewStyle}" TargetType="local:BubbleView" />
  <Style BasedOn="{StaticResource DefaultConfettiCannonStyle}" TargetType="local:ConfettiCannon" />
  <Style x:Key="DefaultGooeyButtonStyle" TargetType="local:GooeyButton">
    <Setter Property="Background" Value="{ThemeResource GooeyButtonBackgroundBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource GooeyButtonForegroundBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabFocusNavigation" Value="Local" />
    <Setter Property="Width" Value="80" />
    <Setter Property="Height" Value="80" />
    <Setter Property="Distance" Value="100" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <local:GooeyButtonItemsPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:GooeyButton">
          <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid.Resources>
              <!--#region ButtonStyle-->
              <Style x:Key="InnerButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" />
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <!--#endregion-->
            </Grid.Resources>
            <Canvas x:Name="Win2DHost" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ItemsPresenter x:Name="ItemsPresenter" />
            <Button x:Name="InnerButton" Style="{StaticResource InnerButtonStyle}" TabFocusNavigation="{TemplateBinding TabFocusNavigation}">
              <Grid>
                <Ellipse x:Name="BackgroundShape" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}" />
                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter.RenderTransform>
                    <TranslateTransform x:Name="BackgroundShapeTranslate" />
                  </ContentPresenter.RenderTransform>
                </ContentPresenter>
              </Grid>
            </Button>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGooeyButtonItemStyle" TargetType="local:GooeyButtonItem">
    <Setter Property="Background" Value="{ThemeResource GooeyButtonItemBackgroundBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource GooeyButtonItemForegroundBrush}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Width" Value="60" />
    <Setter Property="Height" Value="60" />
    <Setter Property="TabFocusNavigation" Value="Once" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:GooeyButtonItem">
          <Grid x:Name="LayoutRoot" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultGooeyEffectStyle}" TargetType="local:GooeyEffect" />
  <Style BasedOn="{StaticResource DefaultGooeyFooterEffectStyle}" TargetType="local:GooeyFooterEffect" />
  <Style BasedOn="{StaticResource DefaultHatchStyle}" TargetType="local:Hatch" />
  <Style BasedOn="{StaticResource DefaultParticleStyle}" TargetType="local:Particle" />
  <Style BasedOn="{StaticResource DefaultTextBlockStrokeViewStyle}" TargetType="local:TextBlockStrokeView" />
  <Style BasedOn="{StaticResource DefaultTextGlitchEffectStyle}" TargetType="local:TextGlitchEffect" />
  <Style BasedOn="{StaticResource DefaultTextGlitchEffect2Style}" TargetType="local:TextGlitchEffect2" />
  <Style BasedOn="{StaticResource DefaultTextGlitchEffect3Style}" TargetType="local:TextGlitchEffect3" />
  <Style BasedOn="{StaticResource DefaultTextMorphEffectStyle}" TargetType="local:TextMorphEffect" />
  <Style BasedOn="{StaticResource DefaultWatermarkStyle}" TargetType="local:Watermark" />
  <Style x:Key="DefaultSettingsCardStyle" TargetType="local:SettingsCard">
    <Style.Setters>
      <Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
      <Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
      <Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
      <Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
      <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
      <Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
      <!--<Setter Property="AutomationProperties.AutomationControlType" Value="Group" />-->
      <!--<Setter Property="AutomationProperties.Name" Value="{TemplateBinding Header}" />-->
      <Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="HorizontalContentAlignment" Value="Right" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
      <Setter Property="Padding" Value="{ThemeResource SettingsCardPadding}" />
      <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
      <Setter Property="FontWeight" Value="Normal" />
      <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
      <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
      <Setter Property="FocusVisualMargin" Value="-3" />
      <Setter Property="local:StyleExtensions.Resources">
        <Setter.Value>
          <ResourceDictionary>
            <!--  Making sure ToggleSwitches are right-aligned by default  -->
            <Style BasedOn="{StaticResource RightAlignedCompactToggleSwitchStyle}" TargetType="ToggleSwitch" />
            <!--  Overriding the MinWidth of various types of controls so they neatly align  -->
            <Style BasedOn="{StaticResource DefaultSliderStyle}" TargetType="Slider">
              <Style.Setters>
                <Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
              </Style.Setters>
            </Style>
            <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
              <Style.Setters>
                <Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
              </Style.Setters>
            </Style>
            <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="TextBox">
              <Style.Setters>
                <Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
              </Style.Setters>
            </Style>
            <!--  NumberBox is not recognized?  -->
            <!--<Style
                            TargetType="NumberBox">
                            <Style.Setters>
                                <Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
                            </Style.Setters>
                        </Style>-->
          </ResourceDictionary>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="local:SettingsCard">
            <Grid x:Name="PART_RootGrid" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" AnimatedIcon.State="Normal" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid.BackgroundTransition>
                <BrushTransition Duration="0:0:0.083" />
              </Grid.BackgroundTransition>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="{ThemeResource SettingsCardLeftIndention}" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="PointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPointerOver}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <VisualState.Setters>
                      <Setter Target="PART_RootGrid.(AnimatedIcon.State)" Value="PointerOver" />
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DescriptionPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <VisualState.Setters>
                      <Setter Target="PART_RootGrid.(AnimatedIcon.State)" Value="Pressed" />
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ActionIconPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DescriptionPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <VisualState.Setters>
                      <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                      <Setter Target="PART_RootGrid.(AnimatedIcon.State)" Value="Normal" />
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ContentAlignmentStates">
                  <!--  Default  -->
                  <VisualState x:Name="Right" />
                  <!--  Whenever the control width is less than SettingsCardWrapThreshold, the Content is below the Header/Description  -->
                  <VisualState x:Name="RightWrapped">
                    <VisualState.StateTriggers>
                      <local:ControlSizeTrigger MinWidth="{ThemeResource SettingsCardWrapNoIconThreshold}" MaxWidth="{ThemeResource SettingsCardWrapThreshold}" TargetElement="{Binding ElementName=PART_RootGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                      <Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
                      <Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
                      <Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
                      <Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="Left" />
                      <Setter Target="HeaderPanel.Margin" Value="0" />
                    </VisualState.Setters>
                  </VisualState>
                  <!--  For even smaller widths: the HeaderIcon is collapsed.  -->
                  <VisualState x:Name="RightWrappedNoIcon">
                    <VisualState.StateTriggers>
                      <local:ControlSizeTrigger MaxWidth="{ThemeResource SettingsCardWrapNoIconThreshold}" TargetElement="{Binding ElementName=PART_RootGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                      <Setter Target="PART_HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
                      <Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
                      <Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
                      <Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
                      <Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="Left" />
                      <Setter Target="HeaderPanel.Margin" Value="0" />
                    </VisualState.Setters>
                  </VisualState>
                  <!--  Header/Description/Icon collapsed, content is to the left. Great for e.g. Checkboxes  -->
                  <VisualState x:Name="Left">
                    <VisualState.StateTriggers>
                      <local:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" To="Left" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                      <Setter Target="PART_HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
                      <Setter Target="PART_DescriptionPresenter.Visibility" Value="Collapsed" />
                      <Setter Target="PART_HeaderPresenter.Visibility" Value="Collapsed" />
                      <Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
                      <Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
                      <Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Left" />
                    </VisualState.Setters>
                  </VisualState>
                  <!--  Similiar to Left, but the HeaderIcon/Header/Description is visible  -->
                  <VisualState x:Name="Vertical">
                    <VisualState.StateTriggers>
                      <local:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" To="Vertical" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                      <Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
                      <Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
                      <Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
                      <Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
                <!--  Collapsing the Content presenter whenever it's empty  -->
                <VisualStateGroup x:Name="ContentVisibilityStates">
                  <VisualState x:Name="Visible" />
                  <VisualState x:Name="Collapsed">
                    <VisualState.StateTriggers>
                      <local:IsNullOrEmptyStateTrigger Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                      <Setter Target="PART_ContentPresenter.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ContentSpacingStates">
                  <VisualState x:Name="NoContentSpacing" />
                  <VisualState x:Name="ContentSpacing">
                    <VisualState.Setters>
                      <Setter Target="PART_RootGrid.RowSpacing" Value="{ThemeResource SettingsCardVerticalHeaderContentSpacing}" />
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Viewbox x:Name="PART_HeaderIconPresenterHolder" Grid.RowSpan="1" MaxWidth="{ThemeResource SettingsCardHeaderIconMaxSize}" MaxHeight="{ThemeResource SettingsCardHeaderIconMaxSize}" Margin="{ThemeResource SettingsCardHeaderIconMargin}">
                <ContentPresenter x:Name="PART_HeaderIconPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding HeaderIcon}" HighContrastAdjustment="None" />
              </Viewbox>
              <StackPanel x:Name="HeaderPanel" Grid.Column="1" Margin="0,0,24,0" VerticalAlignment="Center" Orientation="Vertical">
                <ContentPresenter x:Name="PART_HeaderPresenter" Grid.Column="1" HorizontalAlignment="Left" Content="{TemplateBinding Header}" HighContrastAdjustment="None" TextWrapping="Wrap" />
                <ContentPresenter x:Name="PART_DescriptionPresenter" Content="{TemplateBinding Description}" FontSize="{ThemeResource SettingsCardDescriptionFontSize}" Foreground="{ThemeResource TextFillColorSecondaryBrush}" TextWrapping="Wrap">
                  <ContentPresenter.Resources>
                    <Style BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                      <Style.Setters>
                        <Setter Property="TextWrapping" Value="Wrap" />
                      </Style.Setters>
                    </Style>
                    <Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
                      <Style.Setters>
                        <Setter Property="FontSize" Value="{ThemeResource SettingsCardDescriptionFontSize}" />
                        <Setter Property="Padding" Value="0,0,0,-1" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                      </Style.Setters>
                    </Style>
                    <Style TargetType="Hyperlink">
                      <Style.Setters>
                        <Setter Property="UnderlineStyle" Value="None" />
                        <Setter Property="TextDecorations" Value="None" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                      </Style.Setters>
                    </Style>
                  </ContentPresenter.Resources>
                </ContentPresenter>
              </StackPanel>
              <ContentPresenter x:Name="PART_ContentPresenter" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}" />
              <Viewbox x:Name="PART_ActionIconPresenterHolder" Grid.RowSpan="2" Grid.Column="3" MaxWidth="{ThemeResource SettingsCardActionIconMaxSize}" MaxHeight="{ThemeResource SettingsCardActionIconMaxSize}" Margin="{ThemeResource SettingsCardActionIconMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" HighContrastAdjustment="None" Visibility="Collapsed">
                <ContentPresenter x:Name="PART_ActionIconPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding ActionIcon}" FontFamily="{ThemeResource SymbolThemeFontFamily}" HighContrastAdjustment="None" ToolTipService.ToolTip="{TemplateBinding ActionIconToolTip}" />
              </Viewbox>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="DefaultSettingsExpanderItemStyle" BasedOn="{StaticResource DefaultSettingsCardStyle}" TargetType="local:SettingsCard">
    <Style.Setters>
      <Setter Property="BorderThickness" Value="{ThemeResource SettingsExpanderItemBorderThickness}" />
      <Setter Property="MinHeight" Value="52" />
      <Setter Property="Padding" Value="{ThemeResource SettingsExpanderItemPadding}" />
      <Setter Property="CornerRadius" Value="0" />
    </Style.Setters>
  </Style>
  <Style x:Key="ClickableSettingsExpanderItemStyle" BasedOn="{StaticResource DefaultSettingsExpanderItemStyle}" TargetType="local:SettingsCard">
    <Style.Setters>
      <Setter Property="Padding" Value="{ThemeResource ClickableSettingsExpanderItemPadding}" />
    </Style.Setters>
  </Style>
  <local:SettingsExpanderItemStyleSelector x:Key="SettingsExpanderItemStyleSelector" ClickableStyle="{StaticResource ClickableSettingsExpanderItemStyle}" DefaultStyle="{StaticResource DefaultSettingsExpanderItemStyle}" />
  <Style x:Key="SettingsExpanderExpanderStyle" TargetType="Expander">
    <Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}" />
    <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
    <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Expander">
          <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
            <Grid.RowDefinitions>
              <RowDefinition x:Name="Row0" Height="Auto" />
              <RowDefinition x:Name="Row1" Height="*" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ExpandStates">
                <VisualState x:Name="ExpandUp">
                  <VisualState.Setters>
                    <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                  </VisualState.Setters>
                  <VisualState.Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                        <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0" KeyTime="0:0:0.333" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="CollapseDown">
                  <VisualState.Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0" KeyTime="0:0:0.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="ExpandDown">
                  <VisualState.Setters>
                    <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                  </VisualState.Setters>
                  <VisualState.Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                        <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0" KeyTime="0:0:0.333" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="CollapseUp">
                  <VisualState.Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0" KeyTime="0:0:0.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState.Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandDirectionStates">
                <VisualState x:Name="Down" />
                <VisualState x:Name="Up">
                  <VisualState.Setters>
                    <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}" />
                    <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}" />
                    <Setter Target="ExpanderContent.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                    <Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
                    <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0" />
                    <Setter Target="Row0.Height" Value="*" />
                    <Setter Target="Row1.Height" Value="Auto" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ExpanderHeader" MinHeight="{TemplateBinding MinHeight}" Padding="{StaticResource ExpanderHeaderPadding}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}" VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}" AutomationProperties.AutomationId="ExpanderToggleButton" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" CornerRadius="{TemplateBinding CornerRadius}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding IsEnabled}" IsTabStop="True" Style="{StaticResource SettingsExpanderHeaderDownStyle}" />
            <!--  The clip is a composition clip applied in code  -->
            <Border x:Name="ExpanderContentClip" Grid.Row="1">
              <Border x:Name="ExpanderContent" MinHeight="{ThemeResource SettingsExpanderContentMinHeight}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource ExpanderContentDownBorderThickness}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" Visibility="Collapsed">
                <ContentPresenter Margin="0,-2,0,0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                <Border.RenderTransform>
                  <CompositeTransform />
                </Border.RenderTransform>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationViewItemStoreStyle" TargetType="NavigationViewItem">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="NavigationViewItem">
          <Grid x:Name="NVIRootGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  Store: Removed  -->
            <!--<FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="ChildrenFlyout" Placement="RightEdgeAlignedTop">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                        -->
            <!--  Set negative top margin to make the flyout align exactly with the button  -->
            <!--
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer
                                                        x:Name="ScrollViewer"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                                        <ContentPresenter
                                                            x:Name="ContentPresenter"
                                                            Padding="{TemplateBinding Padding}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                            CornerRadius="{TemplateBinding CornerRadius}" />
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>-->
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                <VisualState x:Name="OnLeftNavigation">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane_Main}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OnTopNavigationPrimary">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource TopNavigationViewItemMargin}" />
                    <Setter Target="NavigationViewItemPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                    <Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OnTopNavigationOverflow">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <NavigationViewItemPresenter x:Name="NavigationViewItemPresenter" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" local:NavItemIconHelper.SelectedIcon="{TemplateBinding local:NavItemIconHelper.SelectedIcon}" local:NavItemIconHelper.StaticIconVisibility="{TemplateBinding local:NavItemIconHelper.StaticIconVisibility}" local:NavItemIconHelper.UnselectedIcon="{TemplateBinding local:NavItemIconHelper.UnselectedIcon}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}" Foreground="{TemplateBinding Foreground}" Icon="{TemplateBinding Icon}" IsTabStop="false" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />
            <Ellipse x:Name="NotificationDot" Height="8" MinWidth="8" Margin="12,8" HorizontalAlignment="Right" VerticalAlignment="Top" local:VisualAttach.NormalizedCenterPoint="0.5,0.5" Fill="{ThemeResource InfoBadgeBackground}" Stroke="{TemplateBinding Background}" StrokeThickness="1" Visibility="Collapsed" />
            <!--  Visibility="{Binding (local:NavItemIconHelper.ShowNotificationDot), RelativeSource={RelativeSource Mode=TemplatedParent}}"  -->
            <ItemsRepeater x:Name="NavigationViewItemMenuItemsHost" Grid.Row="1" Visibility="Collapsed">
              <ItemsRepeater.Layout>
                <StackLayout Orientation="Vertical" />
              </ItemsRepeater.Layout>
            </ItemsRepeater>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TokenViewSelectorBarStyle" TargetType="SelectorBar">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Padding" Value="{ThemeResource SelectorBarPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SelectorBar">
          <Grid Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" ColumnDefinitions="Auto" CornerRadius="{TemplateBinding CornerRadius}" RowDefinitions="Auto">
            <Grid.Resources>
              <Style BasedOn="{StaticResource TokenViewSelectorBarItemStyle}" TargetType="SelectorBarItem" />
            </Grid.Resources>
            <Grid.ChildrenTransitions>
              <TransitionCollection>
                <RepositionThemeTransition />
              </TransitionCollection>
            </Grid.ChildrenTransitions>
            <ItemsView x:Name="PART_ItemsView" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" Padding="{TemplateBinding Padding}" ItemsSource="{TemplateBinding Items}" TabNavigation="{TemplateBinding TabNavigation}">
              <ItemsView.Layout>
                <StackLayout Orientation="Horizontal" Spacing="8" />
              </ItemsView.Layout>
            </ItemsView>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultBreadcrumbNavigatorStyle}" TargetType="local:BreadcrumbNavigator" />
  <Style x:Key="DefaultCalendarWithClockStyle" TargetType="local:CalendarWithClock">
    <Setter Property="Foreground" Value="{ThemeResource CalendarDatePickerTextForeground}" />
    <Setter Property="Background" Value="{ThemeResource CalendarDatePickerBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource CalendarDatePickerBorderThemeThickness}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-3" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="CalendarViewMargin" Value="0" />
    <Setter Property="TimePickerMargin" Value="5,5" />
    <Setter Property="ClockMargin" Value="0" />
    <Setter Property="CalendarViewStyle" Value="{StaticResource DefaultDevWinUICalendarViewStyle}" />
    <Setter Property="CalendarViewBorderThickness" Value="1" />
    <Setter Property="ClockBorderThickness" Value="0,1,1,1" />
    <Setter Property="ClockMode" Value="AnalogClock" />
    <Setter Property="CalendarViewCornerRadius" Value="4,0,0,4" />
    <Setter Property="ClockCornerRadius" Value="0,4,4,0" />
    <Setter Property="Template" Value="{StaticResource CalendarWithAnalogClockTemplate}" />
  </Style>
  <Style BasedOn="{StaticResource DefaultCheckUpdateControlStyle}" TargetType="local:CheckUpdateControl" />
  <Style BasedOn="{StaticResource DefaultColorPaletteItemStyle}" TargetType="local:ColorPaletteItem" />
  <Style x:Key="DefaultCompareSliderStyle" TargetType="local:CompareSlider">
    <Setter Property="Template" Value="{StaticResource ComapreSliderHorizontalTemplate}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="ThumbStyle" Value="{StaticResource SliderThumbStyle}" />
    <Setter Property="ShowLineAndThumb" Value="True" />
  </Style>
  <Style BasedOn="{StaticResource DefaultCopyButtonStyle}" TargetType="local:CopyButton">
    <Setter Property="Content" Value="" />
  </Style>
  <Style BasedOn="{StaticResource DefaultDateTimePickerStyle}" TargetType="local:DateTimePicker" />
  <Style BasedOn="{StaticResource DefaultDividerStyle}" TargetType="local:Divider" />
  <Style BasedOn="{StaticResource DefaultDropdownColorPickerStyle}" TargetType="local:DropdownColorPicker" />
  <Style BasedOn="{StaticResource DefaultFlyoutMenuButtonStyle}" TargetType="local:FlyoutMenuButton" />
  <Style BasedOn="{StaticResource DefaultGotoTopStyle}" TargetType="local:GotoTop" />
  <Style BasedOn="{StaticResource DefaultGrowlStyle}" TargetType="local:Growl" />
  <Style BasedOn="{StaticResource DefaultIndeterminateProgressBarStyle}" TargetType="local:IndeterminateProgressBar" />
  <Style BasedOn="{StaticResource DefaultMessageBoxHeaderStyle}" TargetType="local:MessageBoxHeader" />
  <Style x:Key="DefaultOutOfBoxPageStyle" TargetType="local:OutOfBoxPage">
    <Setter Property="Template" Value="{StaticResource OutOfBoxLeftHeroImageTemplate}" />
    <Setter Property="UseTopHeroImage" Value="False" />
    <Setter Property="ContentMargin" Value="32,8" />
    <Setter Property="SecondaryLinksMargin" Value="32,0" />
    <Setter Property="PrimaryLinksItemTemplate" Value="{StaticResource OutOfBoxLinksItemTemplate}" />
    <Setter Property="SecondaryLinksItemTemplate" Value="{StaticResource OutOfBoxLinksItemTemplate}" />
    <Setter Property="PrimaryLinkItemsPanelTemplate">
      <Setter.Value>
        <ItemsPanelTemplate>
          <local:WrapPanel HorizontalSpacing="10" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SecondaryLinkItemsPanelTemplate">
      <Setter.Value>
        <ItemsPanelTemplate>
          <local:WrapPanel HorizontalSpacing="10" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultPinBoxStyle" TargetType="local:PinBox">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
    <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
    <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
    <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PinBox">
          <Grid>
            <Grid.Resources>
              <Style BasedOn="{StaticResource PinBoxPasswordBoxStyle}" TargetType="PasswordBox" />
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Margin="{ThemeResource PasswordBoxTopHeaderMargin}" VerticalAlignment="Top" Content="{TemplateBinding Header}" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" TextWrapping="Wrap" />
            <local:UniformGrid x:Name="PART_Panel" Grid.Row="1" Orientation="{TemplateBinding Orientation}" Rows="1" />
            <ContentPresenter x:Name="DescriptionPresenter" Grid.Row="2" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultProgressButtonStyle}" TargetType="local:ProgressButton" />
  <Style BasedOn="{StaticResource DefaultProgressRingStyle}" TargetType="local:ProgressRing" />
  <Style BasedOn="{StaticResource DefaultSettingsGroupStyle}" TargetType="local:SettingsGroup" />
  <Style BasedOn="{StaticResource DefaultShieldStyle}" TargetType="local:Shield" />
  <Style BasedOn="{StaticResource DefaultSimpleSettingsGroupStyle}" TargetType="local:SimpleSettingsGroup" />
  <Style BasedOn="{StaticResource DefaultSplitCircleStyle}" TargetType="local:SplitCircle" />
  <Style x:Key="DefaultStepBarStyle" TargetType="local:StepBar">
    <Setter Property="Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource StepBarItemHorizontalStyle}" />
    <Setter Property="Template" Value="{StaticResource StepBarHorizontalControlTemplate}" />
    <Setter Property="ItemsPanel" Value="{StaticResource StepBarHorizontalItemsPanelTemplate}" />
    <Setter Property="ShowStepIndex" Value="True" />
  </Style>
  <Style BasedOn="{StaticResource DefaultDevWinUITextBoxStyle}" TargetType="local:TextBox" />
  <Style BasedOn="{StaticResource DefaultWaveProgressBarStyle}" TargetType="local:WaveProgressBar" />
  <Style BasedOn="{StaticResource DefaultBubbleButtonStyle}" TargetType="local:BubbleButton" />
  <Style BasedOn="{StaticResource DefaultBubbleProgressButtonStyle}" TargetType="local:BubbleProgressButton" />
  <Style BasedOn="{StaticResource DefaultGooeyButtonStyle}" TargetType="local:GooeyButton" />
  <Style BasedOn="{StaticResource DefaultGooeyButtonItemStyle}" TargetType="local:GooeyButtonItem" />
  <Style BasedOn="{StaticResource DefaultSettingsCardStyle}" TargetType="local:SettingsCard" />
  <Style x:Key="DefaultSettingsExpanderStyle" TargetType="local:SettingsExpander">
    <Style.Setters>
      <Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
      <Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
      <Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
      <Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
      <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
      <Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
      <Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
      <Setter Property="Padding" Value="{ThemeResource SettingsExpanderHeaderPadding}" />
      <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
      <Setter Property="FontWeight" Value="Normal" />
      <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
      <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
      <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SettingsExpanderItemStyleSelector}" />
      <Setter Property="FocusVisualMargin" Value="-3" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="local:SettingsExpander">
            <Expander MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" AutomationProperties.HelpText="{TemplateBinding AutomationProperties.HelpText}" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" CornerRadius="{TemplateBinding CornerRadius}" IsExpanded="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SettingsExpanderExpanderStyle}">
              <Expander.Header>
                <local:SettingsCard Padding="{StaticResource SettingsExpanderHeaderPadding}" VerticalAlignment="Center" Background="Transparent" BorderThickness="0" Content="{TemplateBinding Content}" Description="{TemplateBinding Description}" FontFamily="{TemplateBinding FontFamily}" Header="{TemplateBinding Header}" HeaderIcon="{TemplateBinding HeaderIcon}" IsClickEnabled="False" />
              </Expander.Header>
              <Expander.Content>
                <Grid CornerRadius="{Binding CornerRadius, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusConverter}}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <ContentPresenter Content="{TemplateBinding ItemsHeader}" />
                  <ItemsRepeater x:Name="PART_ItemsRepeater" Grid.Row="1" ItemTemplate="{Binding ItemTemplate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" TabFocusNavigation="Local">
                    <ItemsRepeater.Layout>
                      <StackLayout Orientation="Vertical" />
                    </ItemsRepeater.Layout>
                  </ItemsRepeater>
                  <ContentPresenter Grid.Row="2" Content="{TemplateBinding ItemsFooter}" />
                </Grid>
              </Expander.Content>
            </Expander>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="NavigationViewStoreStyle" TargetType="NavigationView">
    <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStoreStyle}" />
    <Setter Property="AlwaysShowHeader" Value="False" />
    <Setter Property="IsBackButtonVisible" Value="Collapsed" />
    <Setter Property="IsPaneToggleButtonVisible" Value="False" />
    <Setter Property="IsSettingsVisible" Value="False" />
    <Setter Property="PaneDisplayMode" Value="Left" />
    <Setter Property="OpenPaneLength" Value="{ThemeResource RailNavigationViewOpenPaneLength}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="CompactPaneLength" Value="{ThemeResource RailNavigationViewCompactPaneLength}" />
    <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="MenuItemContainerStyle" Value="{StaticResource NavigationViewItemStoreStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="NavigationView">
          <Grid x:Name="RootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayModeGroup">
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Expanded">
                  <VisualState.Setters>
                    <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource RailNavigationViewExpandedPaneBackground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Minimal">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TopNavigationMinimal" />
                <VisualState x:Name="MinimalWithBackButton">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TogglePaneGroup">
                <VisualState x:Name="TogglePaneButtonVisible" />
                <VisualState x:Name="TogglePaneButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderGroup">
                <VisualState x:Name="HeaderVisible" />
                <VisualState x:Name="HeaderCollapsed">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AutoSuggestGroup">
                <VisualState x:Name="AutoSuggestBoxVisible" />
                <VisualState x:Name="AutoSuggestBoxCollapsed">
                  <VisualState.Setters>
                    <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneStateGroup">
                <VisualState x:Name="NotClosedCompact" />
                <VisualState x:Name="ClosedCompact">
                  <VisualState.Setters>
                    <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneStateListSizeGroup">
                <VisualState x:Name="ListSizeFull" />
                <VisualState x:Name="ListSizeCompact">
                  <VisualState.Setters>
                    <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                    <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                    <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                    <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left" />
                    <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                <VisualState x:Name="TitleBarVisible" />
                <VisualState x:Name="TitleBarCollapsed">
                  <VisualState.Setters>
                    <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="OverflowLabelGroup">
                <VisualState x:Name="OverflowButtonWithLabel" />
                <VisualState x:Name="OverflowButtonNoLabel" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="BackButtonGroup">
                <VisualState x:Name="BackButtonVisible" />
                <VisualState x:Name="BackButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneVisibilityGroup">
                <VisualState x:Name="PaneVisible" />
                <VisualState x:Name="PaneCollapsed">
                  <VisualState.Setters>
                    <!--  Note that RootSplitView.DisplayMode is set in code so we don't want to  -->
                    <!--  write it here and interfere. But these values work together to hide  -->
                    <!--  the left pane.  -->
                    <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                    <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  Button grid  -->
            <Grid x:Name="PaneToggleButtonGrid" Margin="0,0,0,8" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.ZIndex="100">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid x:Name="TogglePaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />
              <Grid x:Name="ButtonHolderGrid" Grid.Row="1" Margin="0,4">
                <Button x:Name="NavigationViewBackButton" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}" VerticalAlignment="Top" IsEnabled="{TemplateBinding IsBackEnabled}" Style="{StaticResource NavigationBackButtonStoreStyle}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                  </ToolTipService.ToolTip>
                </Button>
                <Button x:Name="NavigationViewCloseButton" VerticalAlignment="Top" Style="{StaticResource NavigationBackButtonStoreStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="NavigationViewCloseButtonToolTip" />
                  </ToolTipService.ToolTip>
                </Button>
                <Button x:Name="TogglePaneButton" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}" HorizontalAlignment="Center" VerticalAlignment="Top" AutomationProperties.LandmarkType="Navigation" Style="{TemplateBinding PaneToggleButtonStyle}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}">
                  <TextBlock x:Name="PaneTitleTextBlock" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource NavigationViewItemHeaderTextStyle}" Text="{TemplateBinding PaneTitle}" />
                </Button>
                <Grid x:Name="PaneTitleHolder" Visibility="Collapsed">
                  <ContentControl x:Name="PaneTitlePresenter" Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" />
                </Grid>
              </Grid>
            </Grid>
            <!--  Content layouts  -->
            <!--  Displaymode (compact/minimal/normal) left  -->
            <SplitView x:Name="RootSplitView" Grid.Row="1" Background="{TemplateBinding Background}" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="Inline" IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}" IsTabStop="False" OpenPaneLength="{TemplateBinding OpenPaneLength}" PaneBackground="{ThemeResource RailNavigationViewDefaultPaneBackground}" Style="{StaticResource NavSplitViewStoreStyle}">
              <SplitView.Pane>
                <Grid x:Name="PaneContentGrid" HorizontalAlignment="Stretch" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0" />
                    <!--  above button margin + back button space  -->
                    <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" MinHeight="{StaticResource RailNavigationViewPaneHeaderRowMinHeight}" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8" />
                    <!--  above list margin  -->
                    <RowDefinition x:Name="ItemsContainerRow" Height="*" />
                  </Grid.RowDefinitions>
                  <Grid x:Name="ContentPaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />
                  <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                      <RowDefinition x:Name="PaneHeaderContentBorderRow" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
                      <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="PaneHeaderContentBorder" Grid.Column="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" />
                  </Grid>
                  <Grid x:Name="AutoSuggestArea" Grid.Row="3" Height="{ThemeResource NavigationViewTopPaneHeight}" VerticalAlignment="Center">
                    <ContentControl x:Name="PaneAutoSuggestBoxPresenter" Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" IsTabStop="False" />
                    <Button x:Name="PaneAutoSuggestButton" Width="{TemplateBinding CompactPaneLength}" Style="{ThemeResource NavigationViewPaneSearchButtonStyle}" Visibility="Collapsed" />
                  </Grid>
                  <ContentControl x:Name="PaneCustomContentBorder" Grid.Row="4" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" />
                  <!--  "Non header" content  -->
                  <Grid x:Name="ItemsContainerGrid" Grid.Row="6" Margin="0,-7,0,8">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" MinHeight="{ThemeResource RailNavigationViewItemOnLeftMinHeight}" />
                      <!--  MenuItems  -->
                      <RowDefinition Height="*" MinHeight="21" />
                      <!--  Fill spacing  -->
                      <RowDefinition Height="Auto" MinHeight="{ThemeResource RailNavigationViewItemOnLeftMinHeight}" />
                      <!--  FooterItems  -->
                      <RowDefinition Height="Auto" />
                      <!--  PaneFooter  -->
                    </Grid.RowDefinitions>
                    <!--  MenuItems  -->
                    <ItemsRepeaterScrollHost Margin="0,12,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                      <ScrollViewer x:Name="MenuItemsScrollViewer" TabNavigation="Local" VerticalScrollBarVisibility="Auto">
                        <!--  Left nav ItemsRepeater  -->
                        <ItemsRepeater x:Name="MenuItemsHost" AutomationProperties.AccessibilityView="Content" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" />
                      </ScrollViewer>
                    </ItemsRepeaterScrollHost>
                    <NavigationViewItemSeparator x:Name="VisualItemsSeparator" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="Collapsed" />
                    <!--  FooterItems  -->
                    <ItemsRepeaterScrollHost Grid.Row="2">
                      <ScrollViewer x:Name="FooterItemsScrollViewer" VerticalAnchorRatio="1" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled">
                        <ItemsRepeater x:Name="FooterMenuItemsHost" AutomationProperties.AccessibilityView="Content" />
                      </ScrollViewer>
                    </ItemsRepeaterScrollHost>
                    <!--  PaneFooter  -->
                    <ContentControl x:Name="FooterContentBorder" Grid.Row="3" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" />
                  </Grid>
                </Grid>
              </SplitView.Pane>
              <SplitView.Content>
                <Grid x:Name="ContentGrid" Margin="{ThemeResource NavigationViewContentMargin}" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}" CornerRadius="{ThemeResource NavigationViewContentGridCornerRadius}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid x:Name="ContentTopPadding" Grid.ColumnSpan="2" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}" />
                  <Grid x:Name="ContentLeftPadding" Grid.Row="1" />
                  <ContentControl x:Name="HeaderContent" Grid.Row="1" Grid.Column="1" MinHeight="{StaticResource PaneToggleButtonHeight}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" IsTabStop="False" Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" />
                  <ContentPresenter Grid.Row="2" Grid.ColumnSpan="2" AutomationProperties.LandmarkType="Main" Content="{TemplateBinding Content}" />
                </Grid>
              </SplitView.Content>
            </SplitView>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultCalendarWithClockStyle}" TargetType="local:CalendarWithClock" />
  <Style BasedOn="{StaticResource DefaultCompareSliderStyle}" TargetType="local:CompareSlider" />
  <Style BasedOn="{StaticResource DefaultOutOfBoxPageStyle}" TargetType="local:OutOfBoxPage" />
  <Style BasedOn="{StaticResource DefaultPinBoxStyle}" TargetType="local:PinBox" />
  <Style BasedOn="{StaticResource DefaultStepBarStyle}" TargetType="local:StepBar" />
  <Style BasedOn="{StaticResource DefaultSettingsExpanderStyle}" TargetType="local:SettingsExpander" />
</ResourceDictionary>